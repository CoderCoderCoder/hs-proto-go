// Code generated by protoc-gen-go.
// source: spectatorproto/spectatorproto.proto
// DO NOT EDIT!

package spectatorproto

import proto "github.com/golang/protobuf/proto"
import json "encoding/json"
import math "math"
import pegasusshared "github.com/HearthSim/hs-proto-go/pegasusshared"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

// ref: SpectatorProto.SecretSource
type SecretSource int32

const (
	SecretSource_SECRET_SOURCE_UNKNOWN            SecretSource = 0
	SecretSource_SECRET_SOURCE_FIRESIDE_GATHERING SecretSource = 1
)

var SecretSource_name = map[int32]string{
	0: "SECRET_SOURCE_UNKNOWN",
	1: "SECRET_SOURCE_FIRESIDE_GATHERING",
}
var SecretSource_value = map[string]int32{
	"SECRET_SOURCE_UNKNOWN":            0,
	"SECRET_SOURCE_FIRESIDE_GATHERING": 1,
}

func (x SecretSource) Enum() *SecretSource {
	p := new(SecretSource)
	*p = x
	return p
}
func (x SecretSource) String() string {
	return proto.EnumName(SecretSource_name, int32(x))
}
func (x SecretSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *SecretSource) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SecretSource_value, data, "SecretSource")
	if err != nil {
		return err
	}
	*x = SecretSource(value)
	return nil
}

// ref: SpectatorProto.Invite
type Invite struct {
	InviterGameAccountId *pegasusshared.BnetId `protobuf:"bytes,1,req,name=inviter_game_account_id" json:"inviter_game_account_id,omitempty"`
	JoinInfo             *JoinInfo             `protobuf:"bytes,2,req,name=join_info" json:"join_info,omitempty"`
	XXX_unrecognized     []byte                `json:"-"`
}

func (m *Invite) Reset()         { *m = Invite{} }
func (m *Invite) String() string { return proto.CompactTextString(m) }
func (*Invite) ProtoMessage()    {}

func (m *Invite) GetInviterGameAccountId() *pegasusshared.BnetId {
	if m != nil {
		return m.InviterGameAccountId
	}
	return nil
}

func (m *Invite) GetJoinInfo() *JoinInfo {
	if m != nil {
		return m.JoinInfo
	}
	return nil
}

// ref: SpectatorProto.JoinInfo
type JoinInfo struct {
	ServerIpAddress      *string                   `protobuf:"bytes,1,opt,name=server_ip_address" json:"server_ip_address,omitempty"`
	ServerPort           *uint32                   `protobuf:"varint,2,opt,name=server_port" json:"server_port,omitempty"`
	GameHandle           *int32                    `protobuf:"varint,3,opt,name=game_handle" json:"game_handle,omitempty"`
	SecretKey            *string                   `protobuf:"bytes,4,opt,name=secret_key" json:"secret_key,omitempty"`
	IsJoinable           *bool                     `protobuf:"varint,5,opt,name=is_joinable" json:"is_joinable,omitempty"`
	CurrentNumSpectators *int32                    `protobuf:"varint,6,opt,name=current_num_spectators" json:"current_num_spectators,omitempty"`
	MaxNumSpectators     *int32                    `protobuf:"varint,7,opt,name=max_num_spectators" json:"max_num_spectators,omitempty"`
	GameType             *pegasusshared.GameType   `protobuf:"varint,8,opt,name=game_type,enum=pegasusshared.GameType,def=0" json:"game_type,omitempty"`
	MissionId            *int32                    `protobuf:"varint,9,opt,name=mission_id" json:"mission_id,omitempty"`
	SpectatedPlayers     []*pegasusshared.BnetId   `protobuf:"bytes,10,rep,name=spectated_players" json:"spectated_players,omitempty"`
	PartyId              *pegasusshared.BnetId     `protobuf:"bytes,11,opt,name=party_id" json:"party_id,omitempty"`
	FormatType           *pegasusshared.FormatType `protobuf:"varint,12,opt,name=format_type,enum=pegasusshared.FormatType,def=0" json:"format_type,omitempty"`
	XXX_unrecognized     []byte                    `json:"-"`
}

func (m *JoinInfo) Reset()         { *m = JoinInfo{} }
func (m *JoinInfo) String() string { return proto.CompactTextString(m) }
func (*JoinInfo) ProtoMessage()    {}

const Default_JoinInfo_GameType pegasusshared.GameType = pegasusshared.GameType_GT_UNKNOWN
const Default_JoinInfo_FormatType pegasusshared.FormatType = pegasusshared.FormatType_FT_UNKNOWN

func (m *JoinInfo) GetServerIpAddress() string {
	if m != nil && m.ServerIpAddress != nil {
		return *m.ServerIpAddress
	}
	return ""
}

func (m *JoinInfo) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *JoinInfo) GetGameHandle() int32 {
	if m != nil && m.GameHandle != nil {
		return *m.GameHandle
	}
	return 0
}

func (m *JoinInfo) GetSecretKey() string {
	if m != nil && m.SecretKey != nil {
		return *m.SecretKey
	}
	return ""
}

func (m *JoinInfo) GetIsJoinable() bool {
	if m != nil && m.IsJoinable != nil {
		return *m.IsJoinable
	}
	return false
}

func (m *JoinInfo) GetCurrentNumSpectators() int32 {
	if m != nil && m.CurrentNumSpectators != nil {
		return *m.CurrentNumSpectators
	}
	return 0
}

func (m *JoinInfo) GetMaxNumSpectators() int32 {
	if m != nil && m.MaxNumSpectators != nil {
		return *m.MaxNumSpectators
	}
	return 0
}

func (m *JoinInfo) GetGameType() pegasusshared.GameType {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return Default_JoinInfo_GameType
}

func (m *JoinInfo) GetMissionId() int32 {
	if m != nil && m.MissionId != nil {
		return *m.MissionId
	}
	return 0
}

func (m *JoinInfo) GetSpectatedPlayers() []*pegasusshared.BnetId {
	if m != nil {
		return m.SpectatedPlayers
	}
	return nil
}

func (m *JoinInfo) GetPartyId() *pegasusshared.BnetId {
	if m != nil {
		return m.PartyId
	}
	return nil
}

func (m *JoinInfo) GetFormatType() pegasusshared.FormatType {
	if m != nil && m.FormatType != nil {
		return *m.FormatType
	}
	return Default_JoinInfo_FormatType
}

// ref: SpectatorProto.PartyQuestInfo
type PartyQuestInfo struct {
	QuestIds         []int32 `protobuf:"varint,1,rep,name=quest_ids" json:"quest_ids,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PartyQuestInfo) Reset()         { *m = PartyQuestInfo{} }
func (m *PartyQuestInfo) String() string { return proto.CompactTextString(m) }
func (*PartyQuestInfo) ProtoMessage()    {}

func (m *PartyQuestInfo) GetQuestIds() []int32 {
	if m != nil {
		return m.QuestIds
	}
	return nil
}

// ref: SpectatorProto.PartyServerInfo
type PartyServerInfo struct {
	ServerIpAddress  *string                   `protobuf:"bytes,1,opt,name=server_ip_address" json:"server_ip_address,omitempty"`
	ServerPort       *uint32                   `protobuf:"varint,2,opt,name=server_port" json:"server_port,omitempty"`
	GameHandle       *int32                    `protobuf:"varint,3,opt,name=game_handle" json:"game_handle,omitempty"`
	SecretKey        *string                   `protobuf:"bytes,4,opt,name=secret_key" json:"secret_key,omitempty"`
	GameType         *pegasusshared.GameType   `protobuf:"varint,5,opt,name=game_type,enum=pegasusshared.GameType,def=0" json:"game_type,omitempty"`
	MissionId        *int32                    `protobuf:"varint,6,opt,name=mission_id" json:"mission_id,omitempty"`
	FormatType       *pegasusshared.FormatType `protobuf:"varint,7,opt,name=format_type,enum=pegasusshared.FormatType,def=0" json:"format_type,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *PartyServerInfo) Reset()         { *m = PartyServerInfo{} }
func (m *PartyServerInfo) String() string { return proto.CompactTextString(m) }
func (*PartyServerInfo) ProtoMessage()    {}

const Default_PartyServerInfo_GameType pegasusshared.GameType = pegasusshared.GameType_GT_UNKNOWN
const Default_PartyServerInfo_FormatType pegasusshared.FormatType = pegasusshared.FormatType_FT_UNKNOWN

func (m *PartyServerInfo) GetServerIpAddress() string {
	if m != nil && m.ServerIpAddress != nil {
		return *m.ServerIpAddress
	}
	return ""
}

func (m *PartyServerInfo) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *PartyServerInfo) GetGameHandle() int32 {
	if m != nil && m.GameHandle != nil {
		return *m.GameHandle
	}
	return 0
}

func (m *PartyServerInfo) GetSecretKey() string {
	if m != nil && m.SecretKey != nil {
		return *m.SecretKey
	}
	return ""
}

func (m *PartyServerInfo) GetGameType() pegasusshared.GameType {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return Default_PartyServerInfo_GameType
}

func (m *PartyServerInfo) GetMissionId() int32 {
	if m != nil && m.MissionId != nil {
		return *m.MissionId
	}
	return 0
}

func (m *PartyServerInfo) GetFormatType() pegasusshared.FormatType {
	if m != nil && m.FormatType != nil {
		return *m.FormatType
	}
	return Default_PartyServerInfo_FormatType
}

// ref: SpectatorProto.SecretJoinInfo
type SecretJoinInfo struct {
	Source                 *SecretSource `protobuf:"varint,1,req,name=source,enum=spectatorproto.SecretSource" json:"source,omitempty"`
	SpecificSourceIdentity *int64        `protobuf:"varint,2,opt,name=specific_source_identity" json:"specific_source_identity,omitempty"`
	EncryptedMessage       []byte        `protobuf:"bytes,3,req,name=encrypted_message" json:"encrypted_message,omitempty"`
	XXX_unrecognized       []byte        `json:"-"`
}

func (m *SecretJoinInfo) Reset()         { *m = SecretJoinInfo{} }
func (m *SecretJoinInfo) String() string { return proto.CompactTextString(m) }
func (*SecretJoinInfo) ProtoMessage()    {}

func (m *SecretJoinInfo) GetSource() SecretSource {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return 0
}

func (m *SecretJoinInfo) GetSpecificSourceIdentity() int64 {
	if m != nil && m.SpecificSourceIdentity != nil {
		return *m.SpecificSourceIdentity
	}
	return 0
}

func (m *SecretJoinInfo) GetEncryptedMessage() []byte {
	if m != nil {
		return m.EncryptedMessage
	}
	return nil
}

func init() {
	proto.RegisterEnum("spectatorproto.SecretSource", SecretSource_name, SecretSource_value)
}
