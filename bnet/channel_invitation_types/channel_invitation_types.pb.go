// Code generated by protoc-gen-go.
// source: github.com/HearthSim/hs-proto-go/bnet/channel_invitation_types/channel_invitation_types.proto
// DO NOT EDIT!

/*
Package channel_invitation_types is a generated protocol buffer package.

It is generated from these files:
	github.com/HearthSim/hs-proto-go/bnet/channel_invitation_types/channel_invitation_types.proto

It has these top-level messages:
	ChannelInvitation
	ChannelInvitationParams
	InvitationCollection
*/
package channel_invitation_types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import channel_types "github.com/HearthSim/hs-proto-go/bnet/channel_types"
import entity "github.com/HearthSim/hs-proto-go/bnet/entity"
import invitation_types "github.com/HearthSim/hs-proto-go/bnet/invitation_types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChannelInvitation struct {
	ChannelDescription *channel_types.ChannelDescription `protobuf:"bytes,1,req,name=channel_description,json=channelDescription" json:"channel_description,omitempty"`
	Reserved           *bool                             `protobuf:"varint,2,opt,name=reserved,def=0" json:"reserved,omitempty"`
	Rejoin             *bool                             `protobuf:"varint,3,opt,name=rejoin,def=0" json:"rejoin,omitempty"`
	ServiceType        *uint32                           `protobuf:"varint,4,req,name=service_type,json=serviceType" json:"service_type,omitempty"`
	XXX_unrecognized   []byte                            `json:"-"`
}

func (m *ChannelInvitation) Reset()                    { *m = ChannelInvitation{} }
func (m *ChannelInvitation) String() string            { return proto.CompactTextString(m) }
func (*ChannelInvitation) ProtoMessage()               {}
func (*ChannelInvitation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_ChannelInvitation_Reserved bool = false
const Default_ChannelInvitation_Rejoin bool = false

func (m *ChannelInvitation) GetChannelDescription() *channel_types.ChannelDescription {
	if m != nil {
		return m.ChannelDescription
	}
	return nil
}

func (m *ChannelInvitation) GetReserved() bool {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return Default_ChannelInvitation_Reserved
}

func (m *ChannelInvitation) GetRejoin() bool {
	if m != nil && m.Rejoin != nil {
		return *m.Rejoin
	}
	return Default_ChannelInvitation_Rejoin
}

func (m *ChannelInvitation) GetServiceType() uint32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

var E_ChannelInvitation_ChannelInvitation = &proto.ExtensionDesc{
	ExtendedType:  (*invitation_types.Invitation)(nil),
	ExtensionType: (*ChannelInvitation)(nil),
	Field:         105,
	Name:          "channel_invitation_types.ChannelInvitation.channel_invitation",
	Tag:           "bytes,105,opt,name=channel_invitation,json=channelInvitation",
	Filename:      "github.com/HearthSim/hs-proto-go/bnet/channel_invitation_types/channel_invitation_types.proto",
}

type ChannelInvitationParams struct {
	ChannelId        *entity.EntityId `protobuf:"bytes,1,req,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	Reserved         *bool            `protobuf:"varint,2,opt,name=reserved" json:"reserved,omitempty"`
	Rejoin           *bool            `protobuf:"varint,3,opt,name=rejoin" json:"rejoin,omitempty"`
	ServiceType      *uint32          `protobuf:"varint,4,req,name=service_type,json=serviceType" json:"service_type,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ChannelInvitationParams) Reset()                    { *m = ChannelInvitationParams{} }
func (m *ChannelInvitationParams) String() string            { return proto.CompactTextString(m) }
func (*ChannelInvitationParams) ProtoMessage()               {}
func (*ChannelInvitationParams) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ChannelInvitationParams) GetChannelId() *entity.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *ChannelInvitationParams) GetReserved() bool {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return false
}

func (m *ChannelInvitationParams) GetRejoin() bool {
	if m != nil && m.Rejoin != nil {
		return *m.Rejoin
	}
	return false
}

func (m *ChannelInvitationParams) GetServiceType() uint32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

var E_ChannelInvitationParams_ChannelParams = &proto.ExtensionDesc{
	ExtendedType:  (*invitation_types.InvitationParams)(nil),
	ExtensionType: (*ChannelInvitationParams)(nil),
	Field:         105,
	Name:          "channel_invitation_types.ChannelInvitationParams.channel_params",
	Tag:           "bytes,105,opt,name=channel_params,json=channelParams",
	Filename:      "github.com/HearthSim/hs-proto-go/bnet/channel_invitation_types/channel_invitation_types.proto",
}

type InvitationCollection struct {
	ServiceType            *uint32                        `protobuf:"varint,1,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	MaxReceivedInvitations *uint32                        `protobuf:"varint,2,opt,name=max_received_invitations,json=maxReceivedInvitations" json:"max_received_invitations,omitempty"`
	ObjectId               *uint64                        `protobuf:"varint,3,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	ReceivedInvitation     []*invitation_types.Invitation `protobuf:"bytes,4,rep,name=received_invitation,json=receivedInvitation" json:"received_invitation,omitempty"`
	XXX_unrecognized       []byte                         `json:"-"`
}

func (m *InvitationCollection) Reset()                    { *m = InvitationCollection{} }
func (m *InvitationCollection) String() string            { return proto.CompactTextString(m) }
func (*InvitationCollection) ProtoMessage()               {}
func (*InvitationCollection) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *InvitationCollection) GetServiceType() uint32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *InvitationCollection) GetMaxReceivedInvitations() uint32 {
	if m != nil && m.MaxReceivedInvitations != nil {
		return *m.MaxReceivedInvitations
	}
	return 0
}

func (m *InvitationCollection) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return 0
}

func (m *InvitationCollection) GetReceivedInvitation() []*invitation_types.Invitation {
	if m != nil {
		return m.ReceivedInvitation
	}
	return nil
}

func init() {
	proto.RegisterType((*ChannelInvitation)(nil), "channel_invitation_types.ChannelInvitation")
	proto.RegisterType((*ChannelInvitationParams)(nil), "channel_invitation_types.ChannelInvitationParams")
	proto.RegisterType((*InvitationCollection)(nil), "channel_invitation_types.InvitationCollection")
	proto.RegisterExtension(E_ChannelInvitation_ChannelInvitation)
	proto.RegisterExtension(E_ChannelInvitationParams_ChannelParams)
}

func init() {
	proto.RegisterFile("github.com/HearthSim/hs-proto-go/bnet/channel_invitation_types/channel_invitation_types.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x92, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x86, 0x95, 0xac, 0xa0, 0xce, 0xa5, 0x88, 0x79, 0x68, 0x58, 0x05, 0xa4, 0xb4, 0x57, 0x91,
	0xd0, 0x12, 0x91, 0x2b, 0xe0, 0x76, 0x20, 0xe8, 0xc5, 0x24, 0x64, 0xb8, 0x45, 0x95, 0xeb, 0x1c,
	0x16, 0x4f, 0x49, 0x1c, 0xd9, 0xa6, 0x6a, 0x25, 0xde, 0x85, 0xb7, 0xe1, 0x35, 0x78, 0x15, 0x94,
	0xc4, 0x6d, 0x92, 0x66, 0x9d, 0xd6, 0xab, 0x28, 0xbf, 0xcf, 0x39, 0xff, 0x7f, 0x3e, 0x1b, 0xfd,
	0xb8, 0x11, 0x26, 0xf9, 0xb5, 0x0c, 0xb8, 0xcc, 0xc2, 0x2f, 0xc0, 0x94, 0x49, 0xbe, 0x89, 0x2c,
	0x4c, 0xf4, 0x65, 0xa1, 0xa4, 0x91, 0x97, 0x37, 0x32, 0x5c, 0xe6, 0x60, 0x42, 0x9e, 0xb0, 0x3c,
	0x87, 0x74, 0x21, 0xf2, 0x95, 0x30, 0xcc, 0x08, 0x99, 0x2f, 0xcc, 0xa6, 0x00, 0x7d, 0xf0, 0x20,
	0xa8, 0xfa, 0x31, 0x39, 0x74, 0x3e, 0xf9, 0x7c, 0x9c, 0x71, 0xd7, 0xad, 0x65, 0x31, 0x79, 0xff,
	0xb0, 0x41, 0x90, 0x1b, 0x61, 0x36, 0xf6, 0x63, 0x5b, 0xaf, 0x1f, 0xd6, 0xda, 0x5b, 0xfa, 0xee,
	0x65, 0x67, 0x7f, 0x5d, 0x74, 0x76, 0x55, 0x27, 0x9c, 0xef, 0x2a, 0x30, 0x45, 0xe7, 0xdb, 0xd8,
	0x31, 0x68, 0xae, 0x44, 0x51, 0xca, 0xc4, 0xf1, 0x5c, 0x7f, 0x14, 0x4d, 0x83, 0xee, 0x4a, 0xb6,
	0xfd, 0x63, 0x53, 0x48, 0x31, 0xef, 0x69, 0x78, 0x8a, 0x86, 0x0a, 0x34, 0xa8, 0x15, 0xc4, 0xc4,
	0xf5, 0x1c, 0x7f, 0xf8, 0xe1, 0xd1, 0x4f, 0x96, 0x6a, 0xa0, 0x3b, 0x19, 0xbf, 0x46, 0x8f, 0x15,
	0xdc, 0x4a, 0x91, 0x93, 0x93, 0x76, 0x81, 0x15, 0xf1, 0x14, 0x3d, 0x29, 0x0b, 0x05, 0x87, 0xca,
	0x99, 0x0c, 0x3c, 0xd7, 0x1f, 0xd3, 0x91, 0xd5, 0xbe, 0x6f, 0x0a, 0x88, 0xd6, 0x08, 0xf7, 0x6f,
	0x0f, 0xbf, 0x0a, 0x7a, 0xdb, 0x37, 0xcb, 0x12, 0xe1, 0x39, 0xfe, 0x28, 0x7a, 0x13, 0x1c, 0x7c,
	0x16, 0x3d, 0x3e, 0xf4, 0x8c, 0xef, 0x4b, 0xb3, 0x3f, 0x2e, 0x7a, 0xd1, 0x2b, 0xfc, 0xca, 0x14,
	0xcb, 0x34, 0x0e, 0x11, 0xda, 0x0d, 0x8f, 0x2d, 0xc5, 0x67, 0x81, 0xbd, 0xd6, 0x4f, 0xd5, 0x67,
	0x1e, 0xd3, 0xd3, 0xed, 0xd0, 0x18, 0x4f, 0xf6, 0x59, 0xb5, 0x20, 0x5d, 0x74, 0x21, 0x1d, 0x43,
	0xe7, 0x37, 0x7a, 0xba, 0xcd, 0x51, 0xd4, 0xc9, 0x66, 0xf7, 0x91, 0xa9, 0xd3, 0x5b, 0x3e, 0x6f,
	0x8f, 0xe0, 0x53, 0x37, 0xd2, 0xb1, 0xed, 0xa8, 0x7f, 0x67, 0xff, 0x1c, 0xf4, 0xbc, 0xa9, 0xb9,
	0x92, 0x69, 0x0a, 0xdc, 0xbe, 0x8c, 0x6e, 0x72, 0xc7, 0x73, 0xf6, 0x92, 0xe3, 0x77, 0x88, 0x64,
	0x6c, 0xbd, 0x50, 0xc0, 0x41, 0xac, 0x20, 0x6e, 0x65, 0xd0, 0x15, 0xa0, 0x31, 0xbd, 0xc8, 0xd8,
	0x9a, 0xda, 0xe3, 0xc6, 0x45, 0xe3, 0x97, 0xe8, 0x54, 0x2e, 0x6f, 0x81, 0x9b, 0x12, 0x7d, 0x49,
	0x6c, 0x40, 0x87, 0xb5, 0x30, 0x8f, 0xf1, 0x35, 0x3a, 0xbf, 0x63, 0x24, 0x19, 0x78, 0x27, 0xfe,
	0x28, 0xba, 0xf7, 0xd5, 0x50, 0xac, 0x7a, 0x66, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x6f,
	0x0c, 0x56, 0x99, 0x04, 0x00, 0x00,
}
