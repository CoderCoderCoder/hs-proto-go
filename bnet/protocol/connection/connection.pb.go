// Code generated by protoc-gen-go.
// source: bnet/protocol/connection/connection.proto
// DO NOT EDIT!

/*
Package connection is a generated protocol buffer package.

It is generated from these files:
	bnet/protocol/connection/connection.proto

It has these top-level messages:
	BindRequest
	BindResponse
	BoundService
	ConnectionMeteringContentHandles
	ConnectRequest
	ConnectResponse
	DisconnectNotification
	DisconnectRequest
	EchoRequest
	EchoResponse
	EncryptRequest
*/
package connection

import proto "github.com/HearthSim/hs-proto-go/github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bnet_protocol "github.com/HearthSim/hs-proto-go/bnet/protocol"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BindRequest struct {
	ImportedServiceHash []uint32        `protobuf:"fixed32,1,rep,name=imported_service_hash,json=importedServiceHash" json:"imported_service_hash,omitempty"`
	ExportedService     []*BoundService `protobuf:"bytes,2,rep,name=exported_service,json=exportedService" json:"exported_service,omitempty"`
	XXX_unrecognized    []byte          `json:"-"`
}

func (m *BindRequest) Reset()                    { *m = BindRequest{} }
func (m *BindRequest) String() string            { return proto.CompactTextString(m) }
func (*BindRequest) ProtoMessage()               {}
func (*BindRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BindRequest) GetImportedServiceHash() []uint32 {
	if m != nil {
		return m.ImportedServiceHash
	}
	return nil
}

func (m *BindRequest) GetExportedService() []*BoundService {
	if m != nil {
		return m.ExportedService
	}
	return nil
}

type BindResponse struct {
	ImportedServiceId []uint32 `protobuf:"varint,1,rep,packed,name=imported_service_id,json=importedServiceId" json:"imported_service_id,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *BindResponse) Reset()                    { *m = BindResponse{} }
func (m *BindResponse) String() string            { return proto.CompactTextString(m) }
func (*BindResponse) ProtoMessage()               {}
func (*BindResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BindResponse) GetImportedServiceId() []uint32 {
	if m != nil {
		return m.ImportedServiceId
	}
	return nil
}

type BoundService struct {
	Hash             *uint32 `protobuf:"fixed32,1,req,name=hash" json:"hash,omitempty"`
	Id               *uint32 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BoundService) Reset()                    { *m = BoundService{} }
func (m *BoundService) String() string            { return proto.CompactTextString(m) }
func (*BoundService) ProtoMessage()               {}
func (*BoundService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BoundService) GetHash() uint32 {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return 0
}

func (m *BoundService) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type ConnectionMeteringContentHandles struct {
	ContentHandle    []*bnet_protocol.ContentHandle `protobuf:"bytes,1,rep,name=content_handle,json=contentHandle" json:"content_handle,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *ConnectionMeteringContentHandles) Reset()         { *m = ConnectionMeteringContentHandles{} }
func (m *ConnectionMeteringContentHandles) String() string { return proto.CompactTextString(m) }
func (*ConnectionMeteringContentHandles) ProtoMessage()    {}
func (*ConnectionMeteringContentHandles) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3}
}

func (m *ConnectionMeteringContentHandles) GetContentHandle() []*bnet_protocol.ContentHandle {
	if m != nil {
		return m.ContentHandle
	}
	return nil
}

type ConnectRequest struct {
	ClientId         *bnet_protocol.ProcessId `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	BindRequest      *BindRequest             `protobuf:"bytes,2,opt,name=bind_request,json=bindRequest" json:"bind_request,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *ConnectRequest) Reset()                    { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string            { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()               {}
func (*ConnectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ConnectRequest) GetClientId() *bnet_protocol.ProcessId {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *ConnectRequest) GetBindRequest() *BindRequest {
	if m != nil {
		return m.BindRequest
	}
	return nil
}

type ConnectResponse struct {
	ServerId           *bnet_protocol.ProcessId          `protobuf:"bytes,1,req,name=server_id,json=serverId" json:"server_id,omitempty"`
	ClientId           *bnet_protocol.ProcessId          `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	BindResult         *uint32                           `protobuf:"varint,3,opt,name=bind_result,json=bindResult" json:"bind_result,omitempty"`
	BindResponse       *BindResponse                     `protobuf:"bytes,4,opt,name=bind_response,json=bindResponse" json:"bind_response,omitempty"`
	ContentHandleArray *ConnectionMeteringContentHandles `protobuf:"bytes,5,opt,name=content_handle_array,json=contentHandleArray" json:"content_handle_array,omitempty"`
	ServerTime         *uint64                           `protobuf:"varint,6,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
	XXX_unrecognized   []byte                            `json:"-"`
}

func (m *ConnectResponse) Reset()                    { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string            { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()               {}
func (*ConnectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ConnectResponse) GetServerId() *bnet_protocol.ProcessId {
	if m != nil {
		return m.ServerId
	}
	return nil
}

func (m *ConnectResponse) GetClientId() *bnet_protocol.ProcessId {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *ConnectResponse) GetBindResult() uint32 {
	if m != nil && m.BindResult != nil {
		return *m.BindResult
	}
	return 0
}

func (m *ConnectResponse) GetBindResponse() *BindResponse {
	if m != nil {
		return m.BindResponse
	}
	return nil
}

func (m *ConnectResponse) GetContentHandleArray() *ConnectionMeteringContentHandles {
	if m != nil {
		return m.ContentHandleArray
	}
	return nil
}

func (m *ConnectResponse) GetServerTime() uint64 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

type DisconnectNotification struct {
	ErrorCode        *uint32 `protobuf:"varint,1,req,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Reason           *string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DisconnectNotification) Reset()                    { *m = DisconnectNotification{} }
func (m *DisconnectNotification) String() string            { return proto.CompactTextString(m) }
func (*DisconnectNotification) ProtoMessage()               {}
func (*DisconnectNotification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DisconnectNotification) GetErrorCode() uint32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *DisconnectNotification) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

type DisconnectRequest struct {
	ErrorCode        *uint32 `protobuf:"varint,1,req,name=error_code,json=errorCode" json:"error_code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DisconnectRequest) Reset()                    { *m = DisconnectRequest{} }
func (m *DisconnectRequest) String() string            { return proto.CompactTextString(m) }
func (*DisconnectRequest) ProtoMessage()               {}
func (*DisconnectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DisconnectRequest) GetErrorCode() uint32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

type EchoRequest struct {
	Time             *uint64 `protobuf:"fixed64,1,opt,name=time" json:"time,omitempty"`
	NetworkOnly      *bool   `protobuf:"varint,2,opt,name=network_only,json=networkOnly,def=0" json:"network_only,omitempty"`
	Payload          []byte  `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EchoRequest) Reset()                    { *m = EchoRequest{} }
func (m *EchoRequest) String() string            { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()               {}
func (*EchoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

const Default_EchoRequest_NetworkOnly bool = false

func (m *EchoRequest) GetTime() uint64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *EchoRequest) GetNetworkOnly() bool {
	if m != nil && m.NetworkOnly != nil {
		return *m.NetworkOnly
	}
	return Default_EchoRequest_NetworkOnly
}

func (m *EchoRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type EchoResponse struct {
	Time             *uint64 `protobuf:"fixed64,1,opt,name=time" json:"time,omitempty"`
	Payload          []byte  `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EchoResponse) Reset()                    { *m = EchoResponse{} }
func (m *EchoResponse) String() string            { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()               {}
func (*EchoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *EchoResponse) GetTime() uint64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *EchoResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type EncryptRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *EncryptRequest) Reset()                    { *m = EncryptRequest{} }
func (m *EncryptRequest) String() string            { return proto.CompactTextString(m) }
func (*EncryptRequest) ProtoMessage()               {}
func (*EncryptRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func init() {
	proto.RegisterType((*BindRequest)(nil), "bnet.protocol.connection.BindRequest")
	proto.RegisterType((*BindResponse)(nil), "bnet.protocol.connection.BindResponse")
	proto.RegisterType((*BoundService)(nil), "bnet.protocol.connection.BoundService")
	proto.RegisterType((*ConnectionMeteringContentHandles)(nil), "bnet.protocol.connection.ConnectionMeteringContentHandles")
	proto.RegisterType((*ConnectRequest)(nil), "bnet.protocol.connection.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "bnet.protocol.connection.ConnectResponse")
	proto.RegisterType((*DisconnectNotification)(nil), "bnet.protocol.connection.DisconnectNotification")
	proto.RegisterType((*DisconnectRequest)(nil), "bnet.protocol.connection.DisconnectRequest")
	proto.RegisterType((*EchoRequest)(nil), "bnet.protocol.connection.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "bnet.protocol.connection.EchoResponse")
	proto.RegisterType((*EncryptRequest)(nil), "bnet.protocol.connection.EncryptRequest")
}

func init() { proto.RegisterFile("bnet/protocol/connection/connection.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 588 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x52, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0x95, 0xdd, 0xf4, 0x4f, 0xc6, 0x4e, 0xda, 0x6e, 0x7f, 0xbf, 0xca, 0x42, 0x45, 0x44, 0x96,
	0xa8, 0xcc, 0x25, 0x95, 0x2c, 0xf5, 0x52, 0x71, 0x21, 0xa1, 0x52, 0x23, 0x04, 0x85, 0x85, 0xbb,
	0xe5, 0xec, 0x4e, 0x9b, 0x15, 0xee, 0x6e, 0xd8, 0xdd, 0x02, 0xf9, 0x18, 0x48, 0x7c, 0x5c, 0x0e,
	0xc8, 0x6b, 0xbb, 0x89, 0x0b, 0x4d, 0xb9, 0xed, 0xce, 0xbc, 0x79, 0xf3, 0xde, 0xcc, 0xc0, 0x8b,
	0xa9, 0x44, 0x7b, 0x32, 0xd7, 0xca, 0x2a, 0xa6, 0x8a, 0x13, 0xa6, 0xa4, 0x44, 0x66, 0x85, 0x92,
	0x2b, 0xcf, 0xa1, 0x4b, 0x93, 0xa8, 0x84, 0x0e, 0x1b, 0xe8, 0x70, 0x99, 0x7f, 0x72, 0xd4, 0x26,
	0xb9, 0x83, 0xb8, 0x47, 0xfc, 0xd3, 0x83, 0x60, 0x24, 0x24, 0xa7, 0xf8, 0xe5, 0x16, 0x8d, 0x25,
	0x29, 0xfc, 0x2f, 0x6e, 0xe6, 0x4a, 0x5b, 0xe4, 0x99, 0x41, 0xfd, 0x55, 0x30, 0xcc, 0x66, 0xb9,
	0x99, 0x45, 0xde, 0x60, 0x23, 0xd9, 0xa6, 0x07, 0x4d, 0xf2, 0x63, 0x95, 0xbb, 0xc8, 0xcd, 0x8c,
	0x7c, 0x80, 0x3d, 0xfc, 0xde, 0xae, 0x89, 0xfc, 0xc1, 0x46, 0x12, 0xa4, 0xc7, 0xc3, 0x87, 0x64,
	0x0d, 0x47, 0xea, 0x56, 0x36, 0x2c, 0x74, 0xb7, 0xa9, 0xaf, 0x03, 0xf1, 0x08, 0xc2, 0x4a, 0x95,
	0x99, 0x2b, 0x69, 0x90, 0xa4, 0x70, 0xf0, 0x87, 0x2c, 0xc1, 0x9d, 0xa8, 0xde, 0xc8, 0xdf, 0xf3,
	0xe8, 0xfe, 0x3d, 0x61, 0x13, 0x1e, 0xa7, 0x10, 0xae, 0x36, 0x21, 0x04, 0x3a, 0xb5, 0x13, 0x3f,
	0xd9, 0xa6, 0xee, 0x4d, 0xfa, 0xe0, 0x0b, 0x1e, 0xf9, 0x03, 0x3f, 0xe9, 0x51, 0x5f, 0xf0, 0xf8,
	0x1a, 0x06, 0xe3, 0x3b, 0x8d, 0x6f, 0xd1, 0xa2, 0x16, 0xf2, 0x7a, 0xac, 0xa4, 0x45, 0x69, 0x2f,
	0x72, 0xc9, 0x0b, 0x34, 0x64, 0x0c, 0x7d, 0x56, 0x45, 0xb2, 0x99, 0x0b, 0x39, 0x19, 0x41, 0x7a,
	0x74, 0xcf, 0x6c, 0xab, 0x8c, 0xf6, 0xd8, 0xea, 0x37, 0xfe, 0xe1, 0x41, 0xbf, 0xee, 0xd4, 0x8c,
	0xfe, 0x14, 0xba, 0xac, 0x10, 0x25, 0xad, 0x73, 0xe6, 0x25, 0x41, 0x1a, 0xdd, 0xa3, 0x7c, 0xaf,
	0x15, 0x43, 0x63, 0x26, 0x9c, 0xee, 0x54, 0xd0, 0x09, 0x27, 0x17, 0x10, 0x4e, 0x85, 0xe4, 0x99,
	0xae, 0x68, 0x22, 0xdf, 0x55, 0x3e, 0x5f, 0x33, 0xf9, 0xe5, 0xba, 0x69, 0x30, 0x5d, 0x7e, 0xe2,
	0x5f, 0x3e, 0xec, 0xde, 0x69, 0xaa, 0x07, 0x7f, 0x0a, 0xdd, 0x72, 0xde, 0xa8, 0x2b, 0x51, 0xfe,
	0x7a, 0x51, 0x15, 0x74, 0xc2, 0xdb, 0x5e, 0xfc, 0x7f, 0xf6, 0xf2, 0x0c, 0x82, 0xda, 0x8b, 0xb9,
	0x2d, 0x6c, 0xb4, 0x31, 0xf0, 0x92, 0x1e, 0x85, 0x4a, 0x63, 0x19, 0x21, 0x6f, 0xa0, 0xd7, 0x00,
	0x9c, 0xbe, 0xa8, 0xe3, 0xb8, 0x8f, 0x1f, 0x73, 0x5b, 0xa1, 0x69, 0x38, 0x5d, 0x3d, 0xaa, 0x02,
	0xfe, 0x6b, 0x2f, 0x32, 0xcb, 0xb5, 0xce, 0x17, 0xd1, 0xa6, 0xe3, 0x3c, 0x7b, 0x98, 0xf3, 0xb1,
	0x13, 0xa1, 0xa4, 0xb5, 0xec, 0x57, 0x25, 0x6b, 0xe9, 0xad, 0x9e, 0xa4, 0x15, 0x37, 0x18, 0x6d,
	0x0d, 0xbc, 0xa4, 0x43, 0xa1, 0x0a, 0x7d, 0x12, 0x37, 0x18, 0x5f, 0xc2, 0xe1, 0x6b, 0x61, 0xea,
	0x36, 0xef, 0x94, 0x15, 0x57, 0x82, 0xe5, 0x65, 0x13, 0xf2, 0x14, 0x00, 0xb5, 0x56, 0x3a, 0x63,
	0x8a, 0xa3, 0xdb, 0x42, 0x8f, 0x76, 0x5d, 0x64, 0xac, 0x38, 0x92, 0x43, 0xd8, 0xd2, 0x98, 0x1b,
	0x25, 0xdd, 0xa4, 0xbb, 0xb4, 0xfe, 0xc5, 0x29, 0xec, 0x2f, 0x09, 0x9b, 0x2b, 0x5b, 0xcf, 0x15,
	0x23, 0x04, 0xe7, 0x6c, 0xa6, 0x1a, 0x34, 0x81, 0x8e, 0x53, 0x5b, 0x9e, 0xe3, 0x16, 0x75, 0x6f,
	0x92, 0x40, 0x28, 0xd1, 0x7e, 0x53, 0xfa, 0x73, 0xa6, 0x64, 0xb1, 0x70, 0x4d, 0x77, 0xce, 0x36,
	0xaf, 0xf2, 0xc2, 0x20, 0x0d, 0xea, 0xd4, 0xa5, 0x2c, 0x16, 0x24, 0x82, 0xed, 0x79, 0xbe, 0x28,
	0x54, 0xce, 0xdd, 0x2a, 0x43, 0xda, 0x7c, 0xe3, 0x97, 0x10, 0x56, 0x6d, 0xea, 0x55, 0xfc, 0xad,
	0xcf, 0x4a, 0xb5, 0xdf, 0xae, 0xde, 0x83, 0xfe, 0xb9, 0x64, 0x7a, 0x31, 0x6f, 0x5c, 0xfd, 0x0e,
	0x00, 0x00, 0xff, 0xff, 0xa1, 0x0e, 0x74, 0x62, 0x2a, 0x05, 0x00, 0x00,
}
