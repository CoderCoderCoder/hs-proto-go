// Code generated by protoc-gen-go.
// source: bnet/protocol/connection/connection.proto
// DO NOT EDIT!

/*
Package bnet_protocol_connection is a generated protocol buffer package.

It is generated from these files:
	bnet/protocol/connection/connection.proto

It has these top-level messages:
	BindRequest
	BindResponse
	BoundService
	ConnectionMeteringContentHandles
	ConnectRequest
	ConnectResponse
	DisconnectNotification
	DisconnectRequest
	EchoRequest
	EchoResponse
	EncryptRequest
*/
package bnet_protocol_connection

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bnet_protocol "bnet/protocol"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ref: bnet.protocol.connection.BindRequest
type BindRequest struct {
	ImportedServiceHash []uint32        `protobuf:"fixed32,1,rep,name=imported_service_hash,json=importedServiceHash" json:"imported_service_hash,omitempty"`
	ExportedService     []*BoundService `protobuf:"bytes,2,rep,name=exported_service,json=exportedService" json:"exported_service,omitempty"`
}

func (m *BindRequest) Reset()                    { *m = BindRequest{} }
func (m *BindRequest) String() string            { return proto.CompactTextString(m) }
func (*BindRequest) ProtoMessage()               {}
func (*BindRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BindRequest) GetImportedServiceHash() []uint32 {
	if m != nil {
		return m.ImportedServiceHash
	}
	return nil
}

func (m *BindRequest) GetExportedService() []*BoundService {
	if m != nil {
		return m.ExportedService
	}
	return nil
}

// ref: bnet.protocol.connection.BindResponse
type BindResponse struct {
	ImportedServiceId []uint32 `protobuf:"varint,1,rep,packed,name=imported_service_id,json=importedServiceId" json:"imported_service_id,omitempty"`
}

func (m *BindResponse) Reset()                    { *m = BindResponse{} }
func (m *BindResponse) String() string            { return proto.CompactTextString(m) }
func (*BindResponse) ProtoMessage()               {}
func (*BindResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BindResponse) GetImportedServiceId() []uint32 {
	if m != nil {
		return m.ImportedServiceId
	}
	return nil
}

// ref: bnet.protocol.connection.BoundService
type BoundService struct {
	Hash uint32 `protobuf:"fixed32,1,opt,name=hash" json:"hash,omitempty"`
	Id   uint32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (m *BoundService) Reset()                    { *m = BoundService{} }
func (m *BoundService) String() string            { return proto.CompactTextString(m) }
func (*BoundService) ProtoMessage()               {}
func (*BoundService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BoundService) GetHash() uint32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

func (m *BoundService) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// ref: bnet.protocol.connection.ConnectionMeteringContentHandles
type ConnectionMeteringContentHandles struct {
	ContentHandle []*bnet_protocol.ContentHandle `protobuf:"bytes,1,rep,name=content_handle,json=contentHandle" json:"content_handle,omitempty"`
}

func (m *ConnectionMeteringContentHandles) Reset()         { *m = ConnectionMeteringContentHandles{} }
func (m *ConnectionMeteringContentHandles) String() string { return proto.CompactTextString(m) }
func (*ConnectionMeteringContentHandles) ProtoMessage()    {}
func (*ConnectionMeteringContentHandles) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3}
}

func (m *ConnectionMeteringContentHandles) GetContentHandle() []*bnet_protocol.ContentHandle {
	if m != nil {
		return m.ContentHandle
	}
	return nil
}

// ref: bnet.protocol.connection.ConnectRequest
type ConnectRequest struct {
	ClientId    *bnet_protocol.ProcessId `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	BindRequest *BindRequest             `protobuf:"bytes,2,opt,name=bind_request,json=bindRequest" json:"bind_request,omitempty"`
}

func (m *ConnectRequest) Reset()                    { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string            { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()               {}
func (*ConnectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ConnectRequest) GetClientId() *bnet_protocol.ProcessId {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *ConnectRequest) GetBindRequest() *BindRequest {
	if m != nil {
		return m.BindRequest
	}
	return nil
}

// ref: bnet.protocol.connection.ConnectResponse
type ConnectResponse struct {
	ServerId           *bnet_protocol.ProcessId          `protobuf:"bytes,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	ClientId           *bnet_protocol.ProcessId          `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	BindResult         uint32                            `protobuf:"varint,3,opt,name=bind_result,json=bindResult" json:"bind_result,omitempty"`
	BindResponse       *BindResponse                     `protobuf:"bytes,4,opt,name=bind_response,json=bindResponse" json:"bind_response,omitempty"`
	ContentHandleArray *ConnectionMeteringContentHandles `protobuf:"bytes,5,opt,name=content_handle_array,json=contentHandleArray" json:"content_handle_array,omitempty"`
	ServerTime         uint64                            `protobuf:"varint,6,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
}

func (m *ConnectResponse) Reset()                    { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string            { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()               {}
func (*ConnectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ConnectResponse) GetServerId() *bnet_protocol.ProcessId {
	if m != nil {
		return m.ServerId
	}
	return nil
}

func (m *ConnectResponse) GetClientId() *bnet_protocol.ProcessId {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *ConnectResponse) GetBindResult() uint32 {
	if m != nil {
		return m.BindResult
	}
	return 0
}

func (m *ConnectResponse) GetBindResponse() *BindResponse {
	if m != nil {
		return m.BindResponse
	}
	return nil
}

func (m *ConnectResponse) GetContentHandleArray() *ConnectionMeteringContentHandles {
	if m != nil {
		return m.ContentHandleArray
	}
	return nil
}

func (m *ConnectResponse) GetServerTime() uint64 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}

// ref: bnet.protocol.connection.DisconnectNotification
type DisconnectNotification struct {
	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Reason    string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
}

func (m *DisconnectNotification) Reset()                    { *m = DisconnectNotification{} }
func (m *DisconnectNotification) String() string            { return proto.CompactTextString(m) }
func (*DisconnectNotification) ProtoMessage()               {}
func (*DisconnectNotification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DisconnectNotification) GetErrorCode() uint32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *DisconnectNotification) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

// ref: bnet.protocol.connection.DisconnectRequest
type DisconnectRequest struct {
	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *DisconnectRequest) Reset()                    { *m = DisconnectRequest{} }
func (m *DisconnectRequest) String() string            { return proto.CompactTextString(m) }
func (*DisconnectRequest) ProtoMessage()               {}
func (*DisconnectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DisconnectRequest) GetErrorCode() uint32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// ref: bnet.protocol.connection.EchoRequest
type EchoRequest struct {
	Time        uint64 `protobuf:"fixed64,1,opt,name=time" json:"time,omitempty"`
	NetworkOnly bool   `protobuf:"varint,2,opt,name=network_only,json=networkOnly" json:"network_only,omitempty"`
	Payload     []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *EchoRequest) Reset()                    { *m = EchoRequest{} }
func (m *EchoRequest) String() string            { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()               {}
func (*EchoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *EchoRequest) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *EchoRequest) GetNetworkOnly() bool {
	if m != nil {
		return m.NetworkOnly
	}
	return false
}

func (m *EchoRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

// ref: bnet.protocol.connection.EchoResponse
type EchoResponse struct {
	Time    uint64 `protobuf:"fixed64,1,opt,name=time" json:"time,omitempty"`
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *EchoResponse) Reset()                    { *m = EchoResponse{} }
func (m *EchoResponse) String() string            { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()               {}
func (*EchoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *EchoResponse) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *EchoResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

// ref: bnet.protocol.connection.EncryptRequest
type EncryptRequest struct {
}

func (m *EncryptRequest) Reset()                    { *m = EncryptRequest{} }
func (m *EncryptRequest) String() string            { return proto.CompactTextString(m) }
func (*EncryptRequest) ProtoMessage()               {}
func (*EncryptRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func init() {
	proto.RegisterType((*BindRequest)(nil), "bnet.protocol.connection.BindRequest")
	proto.RegisterType((*BindResponse)(nil), "bnet.protocol.connection.BindResponse")
	proto.RegisterType((*BoundService)(nil), "bnet.protocol.connection.BoundService")
	proto.RegisterType((*ConnectionMeteringContentHandles)(nil), "bnet.protocol.connection.ConnectionMeteringContentHandles")
	proto.RegisterType((*ConnectRequest)(nil), "bnet.protocol.connection.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "bnet.protocol.connection.ConnectResponse")
	proto.RegisterType((*DisconnectNotification)(nil), "bnet.protocol.connection.DisconnectNotification")
	proto.RegisterType((*DisconnectRequest)(nil), "bnet.protocol.connection.DisconnectRequest")
	proto.RegisterType((*EchoRequest)(nil), "bnet.protocol.connection.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "bnet.protocol.connection.EchoResponse")
	proto.RegisterType((*EncryptRequest)(nil), "bnet.protocol.connection.EncryptRequest")
}

func init() { proto.RegisterFile("bnet/protocol/connection/connection.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 586 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x52, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x25, 0x59, 0xe9, 0xd6, 0x9b, 0xb4, 0xdb, 0x3c, 0x98, 0x22, 0x34, 0x44, 0x89, 0xc4, 0x14,
	0x5e, 0x32, 0x29, 0x68, 0x3c, 0x20, 0x84, 0xc4, 0xc6, 0x44, 0x2b, 0x04, 0x43, 0x06, 0x5e, 0x89,
	0x52, 0xdb, 0x50, 0x6b, 0xa9, 0x5d, 0x6c, 0x17, 0xe8, 0xcf, 0xe0, 0x9d, 0x9f, 0xca, 0x03, 0x8a,
	0x93, 0xb4, 0x4d, 0x61, 0x1f, 0x6f, 0xf6, 0xf5, 0xb9, 0xe7, 0x9e, 0x73, 0x8f, 0xe1, 0xf1, 0x48,
	0x30, 0x73, 0x34, 0x55, 0xd2, 0x48, 0x22, 0xf3, 0x23, 0x22, 0x85, 0x60, 0xc4, 0x70, 0x29, 0x56,
	0x8e, 0xb1, 0x7d, 0x46, 0x41, 0x01, 0x8d, 0x6b, 0x68, 0xbc, 0x7c, 0xbf, 0x77, 0xd0, 0x24, 0x59,
	0x40, 0xec, 0x21, 0xfc, 0xed, 0x80, 0x77, 0xc2, 0x05, 0xc5, 0xec, 0xdb, 0x8c, 0x69, 0x83, 0x9e,
	0xc2, 0x5d, 0x3e, 0x99, 0x4a, 0x65, 0x18, 0x4d, 0x35, 0x53, 0xdf, 0x39, 0x61, 0xe9, 0x38, 0xd3,
	0xe3, 0xc0, 0xe9, 0x6f, 0x44, 0x9b, 0x27, 0xee, 0xce, 0x2d, 0xbc, 0x57, 0x03, 0x3e, 0x94, 0xef,
	0x83, 0x4c, 0x8f, 0xd1, 0x27, 0xd8, 0x61, 0x3f, 0x9b, 0x7d, 0x81, 0xdb, 0xdf, 0x88, 0xbc, 0xe4,
	0x30, 0xbe, 0x4c, 0x5a, 0x7c, 0x22, 0x67, 0xa2, 0x66, 0xb1, 0xd4, 0xdb, 0x35, 0x47, 0x55, 0x0c,
	0x5f, 0x80, 0x5f, 0xaa, 0xd3, 0x53, 0x29, 0x34, 0x43, 0x31, 0xec, 0xfd, 0x23, 0x8f, 0x53, 0x2b,
	0xae, 0x8b, 0x77, 0xd7, 0x84, 0x0d, 0x69, 0x98, 0x80, 0xbf, 0x3a, 0x04, 0x21, 0x68, 0x55, 0x6e,
	0x9c, 0x68, 0x13, 0xdb, 0x33, 0xea, 0x81, 0xcb, 0x69, 0xe0, 0xf6, 0x9d, 0xa8, 0x8b, 0x5d, 0x4e,
	0xc3, 0x0b, 0xe8, 0x9f, 0x2e, 0x34, 0xbe, 0x65, 0x86, 0x29, 0x2e, 0xbe, 0x9e, 0x4a, 0x61, 0x98,
	0x30, 0x83, 0x4c, 0xd0, 0x9c, 0x69, 0xf4, 0x1a, 0x7a, 0xa4, 0xac, 0xa4, 0x63, 0x5b, 0xb2, 0x12,
	0xbc, 0xe4, 0x60, 0xcd, 0x6c, 0xa3, 0xcd, 0x5a, 0xec, 0x92, 0xd5, 0x52, 0xf8, 0xcb, 0x81, 0x5e,
	0x35, 0xad, 0x8e, 0xe0, 0x18, 0x3a, 0x24, 0xe7, 0x05, 0xb5, 0x75, 0xe6, 0x44, 0x5e, 0x12, 0xac,
	0xd1, 0xbe, 0x57, 0x92, 0x30, 0xad, 0x87, 0x14, 0x6f, 0x95, 0xd0, 0x21, 0x45, 0x03, 0xf0, 0x47,
	0x5c, 0xd0, 0x54, 0x95, 0x34, 0xd6, 0x90, 0x97, 0x3c, 0xba, 0x62, 0xfb, 0xcb, 0xd8, 0xb1, 0x37,
	0x5a, 0x5e, 0xc2, 0x3f, 0x2e, 0x6c, 0x2f, 0x34, 0x55, 0x8b, 0x3f, 0x86, 0x4e, 0xb1, 0x6f, 0xa6,
	0x6e, 0x24, 0xaa, 0x84, 0x0e, 0x69, 0xd3, 0x8b, 0x7b, 0x63, 0x2f, 0x0f, 0xc0, 0xab, 0xbc, 0xe8,
	0x59, 0x6e, 0x82, 0x0d, 0x9b, 0x0d, 0x94, 0x1a, 0x8b, 0x0a, 0x7a, 0x03, 0xdd, 0x1a, 0x60, 0xf5,
	0x05, 0x2d, 0xcb, 0x7d, 0x78, 0x9d, 0xdb, 0x12, 0x8d, 0xfd, 0xd1, 0xea, 0xa7, 0xca, 0xe1, 0x4e,
	0x33, 0xcc, 0x34, 0x53, 0x2a, 0x9b, 0x07, 0xb7, 0x2d, 0xe7, 0xb3, 0xcb, 0x39, 0xaf, 0xfb, 0x26,
	0x18, 0x35, 0xc2, 0x7e, 0x59, 0xb0, 0x16, 0xde, 0xaa, 0x4d, 0x1a, 0x3e, 0x61, 0x41, 0xbb, 0xef,
	0x44, 0x2d, 0x0c, 0x65, 0xe9, 0x23, 0x9f, 0xb0, 0xf0, 0x1c, 0xf6, 0x5f, 0x71, 0x5d, 0x8d, 0x79,
	0x27, 0x0d, 0xff, 0xc2, 0x49, 0x56, 0x0c, 0x41, 0xf7, 0x01, 0x98, 0x52, 0x52, 0xa5, 0x44, 0x52,
	0x66, 0x53, 0xe8, 0xe2, 0x8e, 0xad, 0x9c, 0x4a, 0xca, 0xd0, 0x3e, 0xb4, 0x15, 0xcb, 0xb4, 0x14,
	0x76, 0xd3, 0x1d, 0x5c, 0xdd, 0xc2, 0x04, 0x76, 0x97, 0x84, 0xf5, 0x2f, 0xbb, 0x9a, 0x2b, 0xfc,
	0x0c, 0xde, 0x19, 0x19, 0xcb, 0x1a, 0x8d, 0xa0, 0x65, 0xd5, 0x16, 0xb8, 0x36, 0xb6, 0x67, 0xf4,
	0x10, 0x7c, 0xc1, 0xcc, 0x0f, 0xa9, 0x2e, 0x52, 0x29, 0xf2, 0xb9, 0x1d, 0xba, 0x85, 0xbd, 0xaa,
	0x76, 0x2e, 0xf2, 0x39, 0x0a, 0x60, 0x73, 0x9a, 0xcd, 0x73, 0x99, 0x51, 0x9b, 0xa1, 0x8f, 0xeb,
	0x6b, 0xf8, 0x1c, 0xfc, 0x92, 0xbf, 0xca, 0xe0, 0x7f, 0x03, 0x56, 0xba, 0xdd, 0x66, 0xf7, 0x0e,
	0xf4, 0xce, 0x04, 0x51, 0xf3, 0x69, 0x6d, 0x67, 0xd4, 0xb6, 0xf9, 0x3c, 0xf9, 0x1b, 0x00, 0x00,
	0xff, 0xff, 0xa8, 0xa1, 0x80, 0x87, 0x33, 0x05, 0x00, 0x00,
}
