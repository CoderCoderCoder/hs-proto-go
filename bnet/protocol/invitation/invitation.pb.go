// Code generated by protoc-gen-go.
// source: bnet/protocol/invitation/invitation.proto
// DO NOT EDIT!

package bnet_protocol_invitation

import proto "github.com/golang/protobuf/proto"
import json "encoding/json"
import math "math"
import bnet_protocol_channel_extracted "github.com/HearthSim/hs-proto-go/bnet/protocol/channel_extracted"
import bnet_protocol "github.com/HearthSim/hs-proto-go/bnet/protocol"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

// ref: bnet.protocol.invitation.GenericRequest
type GenericRequest struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	TargetId         *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=target_id" json:"target_id,omitempty"`
	InvitationId     *uint64                 `protobuf:"fixed64,3,req,name=invitation_id" json:"invitation_id,omitempty"`
	InviteeName      *string                 `protobuf:"bytes,4,opt,name=invitee_name" json:"invitee_name,omitempty"`
	InviterName      *string                 `protobuf:"bytes,5,opt,name=inviter_name" json:"inviter_name,omitempty"`
	PreviousRole     []uint32                `protobuf:"varint,6,rep,packed,name=previous_role" json:"previous_role,omitempty"`
	DesiredRole      []uint32                `protobuf:"varint,7,rep,packed,name=desired_role" json:"desired_role,omitempty"`
	Reason           *uint32                 `protobuf:"varint,8,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GenericRequest) Reset()         { *m = GenericRequest{} }
func (m *GenericRequest) String() string { return proto.CompactTextString(m) }
func (*GenericRequest) ProtoMessage()    {}

func (m *GenericRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *GenericRequest) GetTargetId() *bnet_protocol.EntityId {
	if m != nil {
		return m.TargetId
	}
	return nil
}

func (m *GenericRequest) GetInvitationId() uint64 {
	if m != nil && m.InvitationId != nil {
		return *m.InvitationId
	}
	return 0
}

func (m *GenericRequest) GetInviteeName() string {
	if m != nil && m.InviteeName != nil {
		return *m.InviteeName
	}
	return ""
}

func (m *GenericRequest) GetInviterName() string {
	if m != nil && m.InviterName != nil {
		return *m.InviterName
	}
	return ""
}

func (m *GenericRequest) GetPreviousRole() []uint32 {
	if m != nil {
		return m.PreviousRole
	}
	return nil
}

func (m *GenericRequest) GetDesiredRole() []uint32 {
	if m != nil {
		return m.DesiredRole
	}
	return nil
}

func (m *GenericRequest) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

// ref: bnet.protocol.invitation.InvitationTarget
type InvitationTarget struct {
	Identity         *bnet_protocol.Identity `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	Email            *string                 `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	BattleTag        *string                 `protobuf:"bytes,3,opt,name=battle_tag" json:"battle_tag,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *InvitationTarget) Reset()         { *m = InvitationTarget{} }
func (m *InvitationTarget) String() string { return proto.CompactTextString(m) }
func (*InvitationTarget) ProtoMessage()    {}

func (m *InvitationTarget) GetIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *InvitationTarget) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *InvitationTarget) GetBattleTag() string {
	if m != nil && m.BattleTag != nil {
		return *m.BattleTag
	}
	return ""
}

// ref: bnet.protocol.invitation.SendInvitationResponse
type SendInvitationResponse struct {
	Invitation       *bnet_protocol_channel_extracted.Invitation `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *SendInvitationResponse) Reset()         { *m = SendInvitationResponse{} }
func (m *SendInvitationResponse) String() string { return proto.CompactTextString(m) }
func (*SendInvitationResponse) ProtoMessage()    {}

func (m *SendInvitationResponse) GetInvitation() *bnet_protocol_channel_extracted.Invitation {
	if m != nil {
		return m.Invitation
	}
	return nil
}

// ref: bnet.protocol.invitation.Suggestion
type Suggestion struct {
	ChannelId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=channel_id" json:"channel_id,omitempty"`
	SuggesterId        *bnet_protocol.EntityId `protobuf:"bytes,2,req,name=suggester_id" json:"suggester_id,omitempty"`
	SuggesteeId        *bnet_protocol.EntityId `protobuf:"bytes,3,req,name=suggestee_id" json:"suggestee_id,omitempty"`
	SuggesterName      *string                 `protobuf:"bytes,4,opt,name=suggester_name" json:"suggester_name,omitempty"`
	SuggesteeName      *string                 `protobuf:"bytes,5,opt,name=suggestee_name" json:"suggestee_name,omitempty"`
	SuggesterAccountId *bnet_protocol.EntityId `protobuf:"bytes,6,opt,name=suggester_account_id" json:"suggester_account_id,omitempty"`
	XXX_unrecognized   []byte                  `json:"-"`
}

func (m *Suggestion) Reset()         { *m = Suggestion{} }
func (m *Suggestion) String() string { return proto.CompactTextString(m) }
func (*Suggestion) ProtoMessage()    {}

func (m *Suggestion) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *Suggestion) GetSuggesterId() *bnet_protocol.EntityId {
	if m != nil {
		return m.SuggesterId
	}
	return nil
}

func (m *Suggestion) GetSuggesteeId() *bnet_protocol.EntityId {
	if m != nil {
		return m.SuggesteeId
	}
	return nil
}

func (m *Suggestion) GetSuggesterName() string {
	if m != nil && m.SuggesterName != nil {
		return *m.SuggesterName
	}
	return ""
}

func (m *Suggestion) GetSuggesteeName() string {
	if m != nil && m.SuggesteeName != nil {
		return *m.SuggesteeName
	}
	return ""
}

func (m *Suggestion) GetSuggesterAccountId() *bnet_protocol.EntityId {
	if m != nil {
		return m.SuggesterAccountId
	}
	return nil
}

func init() {
}
