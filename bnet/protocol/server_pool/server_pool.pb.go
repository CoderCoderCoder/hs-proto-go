// Code generated by protoc-gen-go.
// source: bnet/protocol/server_pool/server_pool.proto
// DO NOT EDIT!

/*
Package bnet_protocol_server_pool is a generated protocol buffer package.

It is generated from these files:
	bnet/protocol/server_pool/server_pool.proto

It has these top-level messages:
	GetLoadRequest
	PoolStateRequest
	PoolStateResponse
	ServerInfo
	ServerState
*/
package bnet_protocol_server_pool

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bnet_protocol "bnet/protocol"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ref: bnet.protocol.server_pool.GetLoadRequest
type GetLoadRequest struct {
}

func (m *GetLoadRequest) Reset()                    { *m = GetLoadRequest{} }
func (m *GetLoadRequest) String() string            { return proto.CompactTextString(m) }
func (*GetLoadRequest) ProtoMessage()               {}
func (*GetLoadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// ref: bnet.protocol.server_pool.PoolStateRequest
type PoolStateRequest struct {
}

func (m *PoolStateRequest) Reset()                    { *m = PoolStateRequest{} }
func (m *PoolStateRequest) String() string            { return proto.CompactTextString(m) }
func (*PoolStateRequest) ProtoMessage()               {}
func (*PoolStateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// ref: bnet.protocol.server_pool.PoolStateResponse
type PoolStateResponse struct {
	Info []*ServerInfo `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
}

func (m *PoolStateResponse) Reset()                    { *m = PoolStateResponse{} }
func (m *PoolStateResponse) String() string            { return proto.CompactTextString(m) }
func (*PoolStateResponse) ProtoMessage()               {}
func (*PoolStateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PoolStateResponse) GetInfo() []*ServerInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// ref: bnet.protocol.server_pool.ServerInfo
type ServerInfo struct {
	Host      *bnet_protocol.ProcessId   `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Replace   bool                       `protobuf:"varint,2,opt,name=replace" json:"replace,omitempty"`
	State     *ServerState               `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	Attribute []*bnet_protocol.Attribute `protobuf:"bytes,4,rep,name=attribute" json:"attribute,omitempty"`
	ProgramId uint32                     `protobuf:"fixed32,5,opt,name=program_id,json=programId" json:"program_id,omitempty"`
}

func (m *ServerInfo) Reset()                    { *m = ServerInfo{} }
func (m *ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()               {}
func (*ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ServerInfo) GetHost() *bnet_protocol.ProcessId {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *ServerInfo) GetReplace() bool {
	if m != nil {
		return m.Replace
	}
	return false
}

func (m *ServerInfo) GetState() *ServerState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ServerInfo) GetAttribute() []*bnet_protocol.Attribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *ServerInfo) GetProgramId() uint32 {
	if m != nil {
		return m.ProgramId
	}
	return 0
}

// ref: bnet.protocol.server_pool.ServerState
type ServerState struct {
	CurrentLoad float32 `protobuf:"fixed32,1,opt,name=current_load,json=currentLoad" json:"current_load,omitempty"`
	GameCount   uint32  `protobuf:"varint,2,opt,name=game_count,json=gameCount" json:"game_count,omitempty"`
	PlayerCount uint32  `protobuf:"varint,3,opt,name=player_count,json=playerCount" json:"player_count,omitempty"`
}

func (m *ServerState) Reset()                    { *m = ServerState{} }
func (m *ServerState) String() string            { return proto.CompactTextString(m) }
func (*ServerState) ProtoMessage()               {}
func (*ServerState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ServerState) GetCurrentLoad() float32 {
	if m != nil {
		return m.CurrentLoad
	}
	return 0
}

func (m *ServerState) GetGameCount() uint32 {
	if m != nil {
		return m.GameCount
	}
	return 0
}

func (m *ServerState) GetPlayerCount() uint32 {
	if m != nil {
		return m.PlayerCount
	}
	return 0
}

func init() {
	proto.RegisterType((*GetLoadRequest)(nil), "bnet.protocol.server_pool.GetLoadRequest")
	proto.RegisterType((*PoolStateRequest)(nil), "bnet.protocol.server_pool.PoolStateRequest")
	proto.RegisterType((*PoolStateResponse)(nil), "bnet.protocol.server_pool.PoolStateResponse")
	proto.RegisterType((*ServerInfo)(nil), "bnet.protocol.server_pool.ServerInfo")
	proto.RegisterType((*ServerState)(nil), "bnet.protocol.server_pool.ServerState")
}

func init() { proto.RegisterFile("bnet/protocol/server_pool/server_pool.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x4d, 0xff, 0x58, 0x3b, 0x51, 0xa9, 0x7b, 0x5a, 0x45, 0x21, 0x06, 0x94, 0x80, 0x92,
	0x42, 0xbd, 0x89, 0x1e, 0xd4, 0x83, 0x14, 0x3c, 0x94, 0xed, 0x07, 0x08, 0xdb, 0x64, 0x5a, 0x0b,
	0x69, 0x26, 0xee, 0x6e, 0x04, 0x3f, 0xb4, 0xdf, 0x41, 0x76, 0xdb, 0xd8, 0x3f, 0x20, 0xde, 0x26,
	0x6f, 0x7e, 0xf3, 0xf2, 0x1e, 0x0b, 0x37, 0x93, 0x02, 0x4d, 0xbf, 0x54, 0x64, 0x28, 0xa5, 0xbc,
	0xaf, 0x51, 0x7d, 0xa2, 0x4a, 0x4a, 0xda, 0x9e, 0x63, 0x07, 0xb0, 0x53, 0x0b, 0xc7, 0x35, 0x1c,
	0x6f, 0x00, 0x67, 0xe7, 0xdb, 0x3e, 0xbf, 0x8c, 0x1b, 0xc2, 0x1e, 0x1c, 0xbf, 0xa2, 0x79, 0x23,
	0x99, 0x09, 0xfc, 0xa8, 0x50, 0x9b, 0x90, 0x41, 0x6f, 0x44, 0x94, 0x8f, 0x8d, 0x34, 0x58, 0x6b,
	0x02, 0x4e, 0x36, 0x34, 0x5d, 0x52, 0xa1, 0x91, 0x3d, 0x42, 0x6b, 0x5e, 0x4c, 0x89, 0x7b, 0x41,
	0x33, 0xf2, 0x07, 0x57, 0xf1, 0x9f, 0x11, 0xe2, 0xb1, 0x9b, 0x87, 0xc5, 0x94, 0x9e, 0x1b, 0xbd,
	0x3d, 0xe1, 0xce, 0xc2, 0x6f, 0x0f, 0x60, 0xbd, 0x60, 0xb7, 0xd0, 0x7a, 0x27, 0x6d, 0xb8, 0x17,
	0x78, 0x91, 0x3f, 0xe0, 0x3b, 0x6e, 0x23, 0x45, 0x29, 0x6a, 0x3d, 0xcc, 0x84, 0xa3, 0x18, 0x87,
	0x8e, 0xc2, 0x32, 0x97, 0x29, 0xf2, 0x46, 0xe0, 0x45, 0x07, 0xa2, 0xfe, 0x64, 0x0f, 0xd0, 0xd6,
	0x36, 0x26, 0x6f, 0x3a, 0xa3, 0xeb, 0x7f, 0x63, 0x2d, 0x4b, 0x2d, 0x8f, 0xd8, 0x3d, 0x74, 0xa5,
	0x31, 0x6a, 0x3e, 0xa9, 0x0c, 0xf2, 0x96, 0x2b, 0xb6, 0x1b, 0xe5, 0xa9, 0xde, 0xbb, 0x2e, 0x6b,
	0x9c, 0x5d, 0x00, 0x94, 0x8a, 0x66, 0x4a, 0x2e, 0x92, 0x79, 0xc6, 0xdb, 0x81, 0x17, 0x75, 0x44,
	0x77, 0xa5, 0x0c, 0xb3, 0x50, 0x81, 0xbf, 0xf1, 0x43, 0x76, 0x09, 0x87, 0x69, 0xa5, 0x14, 0x16,
	0x26, 0xc9, 0x49, 0x66, 0xae, 0x77, 0x43, 0xf8, 0x2b, 0xcd, 0x3e, 0x88, 0x35, 0x9c, 0xc9, 0x05,
	0x26, 0x29, 0x55, 0x85, 0x71, 0x3d, 0x8f, 0x44, 0xd7, 0x2a, 0x2f, 0x56, 0xb0, 0x0e, 0x65, 0x2e,
	0xbf, 0x50, 0xad, 0x80, 0xa6, 0x03, 0xfc, 0xa5, 0xe6, 0x90, 0xc9, 0xbe, 0x4b, 0x7d, 0xf7, 0x13,
	0x00, 0x00, 0xff, 0xff, 0xef, 0x76, 0xda, 0xe7, 0x4c, 0x02, 0x00, 0x00,
}
