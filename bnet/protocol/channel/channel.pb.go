// Code generated by protoc-gen-go.
// source: bnet/protocol/channel/channel.proto
// DO NOT EDIT!

/*
Package bnet_protocol_channel is a generated protocol buffer package.

It is generated from these files:
	bnet/protocol/channel/channel.proto

It has these top-level messages:
	AddMemberRequest
	AddNotification
	ChannelInfo
	CreateChannelRequest
	CreateChannelResponse
	DissolveRequest
	FindChannelOptions
	FindChannelRequest
	FindChannelResponse
	GetChannelIdRequest
	GetChannelIdResponse
	GetChannelInfoRequest
	GetChannelInfoResponse
	JoinChannelRequest
	JoinChannelResponse
	JoinNotification
	LeaveNotification
	Member
	MemberState
	Message
	RemoveMemberRequest
	RemoveNotification
	SendMessageNotification
	SendMessageRequest
	SetRolesRequest
	SubscribeChannelRequest
	SubscribeChannelResponse
	UnsubscribeMemberRequest
	UpdateChannelStateNotification
	UpdateChannelStateRequest
	UpdateMemberStateNotification
	UpdateMemberStateRequest
*/
package bnet_protocol_channel

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bnet_protocol_attribute_468 "bnet/protocol/attribute_468"
import bnet_protocol_channel_extracted "bnet/protocol/channel_extracted"
import bnet_protocol "bnet/protocol"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ref: bnet.protocol.channel.AddMemberRequest
type AddMemberRequest struct {
	AgentId        *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	MemberIdentity *bnet_protocol.Identity `protobuf:"bytes,2,opt,name=member_identity,json=memberIdentity" json:"member_identity,omitempty"`
	MemberState    *MemberState            `protobuf:"bytes,3,opt,name=member_state,json=memberState" json:"member_state,omitempty"`
	ObjectId       uint64                  `protobuf:"varint,4,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Subscribe      bool                    `protobuf:"varint,5,opt,name=subscribe" json:"subscribe,omitempty"`
}

func (m *AddMemberRequest) Reset()                    { *m = AddMemberRequest{} }
func (m *AddMemberRequest) String() string            { return proto.CompactTextString(m) }
func (*AddMemberRequest) ProtoMessage()               {}
func (*AddMemberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddMemberRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *AddMemberRequest) GetMemberIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.MemberIdentity
	}
	return nil
}

func (m *AddMemberRequest) GetMemberState() *MemberState {
	if m != nil {
		return m.MemberState
	}
	return nil
}

func (m *AddMemberRequest) GetObjectId() uint64 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *AddMemberRequest) GetSubscribe() bool {
	if m != nil {
		return m.Subscribe
	}
	return false
}

// ref: bnet.protocol.channel.AddNotification
type AddNotification struct {
	Self         *Member                                       `protobuf:"bytes,1,opt,name=self" json:"self,omitempty"`
	Member       []*Member                                     `protobuf:"bytes,2,rep,name=member" json:"member,omitempty"`
	ChannelState *bnet_protocol_channel_extracted.ChannelState `protobuf:"bytes,3,opt,name=channel_state,json=channelState" json:"channel_state,omitempty"`
}

func (m *AddNotification) Reset()                    { *m = AddNotification{} }
func (m *AddNotification) String() string            { return proto.CompactTextString(m) }
func (*AddNotification) ProtoMessage()               {}
func (*AddNotification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddNotification) GetSelf() *Member {
	if m != nil {
		return m.Self
	}
	return nil
}

func (m *AddNotification) GetMember() []*Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *AddNotification) GetChannelState() *bnet_protocol_channel_extracted.ChannelState {
	if m != nil {
		return m.ChannelState
	}
	return nil
}

// ref: bnet.protocol.channel.ChannelInfo
type ChannelInfo struct {
	Description *bnet_protocol_channel_extracted.ChannelDescription `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Member      []*Member                                           `protobuf:"bytes,2,rep,name=member" json:"member,omitempty"`
}

func (m *ChannelInfo) Reset()                    { *m = ChannelInfo{} }
func (m *ChannelInfo) String() string            { return proto.CompactTextString(m) }
func (*ChannelInfo) ProtoMessage()               {}
func (*ChannelInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ChannelInfo) GetDescription() *bnet_protocol_channel_extracted.ChannelDescription {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ChannelInfo) GetMember() []*Member {
	if m != nil {
		return m.Member
	}
	return nil
}

// ref: bnet.protocol.channel.CreateChannelRequest
type CreateChannelRequest struct {
	AgentIdentity    *bnet_protocol.Identity                       `protobuf:"bytes,1,opt,name=agent_identity,json=agentIdentity" json:"agent_identity,omitempty"`
	MemberState      *MemberState                                  `protobuf:"bytes,2,opt,name=member_state,json=memberState" json:"member_state,omitempty"`
	ChannelState     *bnet_protocol_channel_extracted.ChannelState `protobuf:"bytes,3,opt,name=channel_state,json=channelState" json:"channel_state,omitempty"`
	ChannelId        *bnet_protocol.EntityId                       `protobuf:"bytes,4,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	ObjectId         uint64                                        `protobuf:"varint,5,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	LocalAgent       *bnet_protocol.EntityId                       `protobuf:"bytes,6,opt,name=local_agent,json=localAgent" json:"local_agent,omitempty"`
	LocalMemberState *MemberState                                  `protobuf:"bytes,7,opt,name=local_member_state,json=localMemberState" json:"local_member_state,omitempty"`
}

func (m *CreateChannelRequest) Reset()                    { *m = CreateChannelRequest{} }
func (m *CreateChannelRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateChannelRequest) ProtoMessage()               {}
func (*CreateChannelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateChannelRequest) GetAgentIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.AgentIdentity
	}
	return nil
}

func (m *CreateChannelRequest) GetMemberState() *MemberState {
	if m != nil {
		return m.MemberState
	}
	return nil
}

func (m *CreateChannelRequest) GetChannelState() *bnet_protocol_channel_extracted.ChannelState {
	if m != nil {
		return m.ChannelState
	}
	return nil
}

func (m *CreateChannelRequest) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *CreateChannelRequest) GetObjectId() uint64 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *CreateChannelRequest) GetLocalAgent() *bnet_protocol.EntityId {
	if m != nil {
		return m.LocalAgent
	}
	return nil
}

func (m *CreateChannelRequest) GetLocalMemberState() *MemberState {
	if m != nil {
		return m.LocalMemberState
	}
	return nil
}

// ref: bnet.protocol.channel.CreateChannelResponse
type CreateChannelResponse struct {
	ObjectId  uint64                  `protobuf:"varint,1,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	ChannelId *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
}

func (m *CreateChannelResponse) Reset()                    { *m = CreateChannelResponse{} }
func (m *CreateChannelResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateChannelResponse) ProtoMessage()               {}
func (*CreateChannelResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateChannelResponse) GetObjectId() uint64 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *CreateChannelResponse) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

// ref: bnet.protocol.channel.DissolveRequest
type DissolveRequest struct {
	AgentId *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Reason  uint32                  `protobuf:"varint,2,opt,name=reason" json:"reason,omitempty"`
}

func (m *DissolveRequest) Reset()                    { *m = DissolveRequest{} }
func (m *DissolveRequest) String() string            { return proto.CompactTextString(m) }
func (*DissolveRequest) ProtoMessage()               {}
func (*DissolveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DissolveRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *DissolveRequest) GetReason() uint32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

// ref: bnet.protocol.channel.FindChannelOptions
type FindChannelOptions struct {
	StartIndex      uint32                                       `protobuf:"varint,1,opt,name=start_index,json=startIndex" json:"start_index,omitempty"`
	MaxResults      uint32                                       `protobuf:"varint,2,opt,name=max_results,json=maxResults" json:"max_results,omitempty"`
	Name            string                                       `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Program         uint32                                       `protobuf:"fixed32,4,opt,name=program" json:"program,omitempty"`
	Locale          uint32                                       `protobuf:"fixed32,5,opt,name=locale" json:"locale,omitempty"`
	CapacityFull    uint32                                       `protobuf:"varint,6,opt,name=capacity_full,json=capacityFull" json:"capacity_full,omitempty"`
	AttributeFilter *bnet_protocol_attribute_468.AttributeFilter `protobuf:"bytes,7,opt,name=attribute_filter,json=attributeFilter" json:"attribute_filter,omitempty"`
	ChannelType     string                                       `protobuf:"bytes,8,opt,name=channel_type,json=channelType" json:"channel_type,omitempty"`
}

func (m *FindChannelOptions) Reset()                    { *m = FindChannelOptions{} }
func (m *FindChannelOptions) String() string            { return proto.CompactTextString(m) }
func (*FindChannelOptions) ProtoMessage()               {}
func (*FindChannelOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *FindChannelOptions) GetStartIndex() uint32 {
	if m != nil {
		return m.StartIndex
	}
	return 0
}

func (m *FindChannelOptions) GetMaxResults() uint32 {
	if m != nil {
		return m.MaxResults
	}
	return 0
}

func (m *FindChannelOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FindChannelOptions) GetProgram() uint32 {
	if m != nil {
		return m.Program
	}
	return 0
}

func (m *FindChannelOptions) GetLocale() uint32 {
	if m != nil {
		return m.Locale
	}
	return 0
}

func (m *FindChannelOptions) GetCapacityFull() uint32 {
	if m != nil {
		return m.CapacityFull
	}
	return 0
}

func (m *FindChannelOptions) GetAttributeFilter() *bnet_protocol_attribute_468.AttributeFilter {
	if m != nil {
		return m.AttributeFilter
	}
	return nil
}

func (m *FindChannelOptions) GetChannelType() string {
	if m != nil {
		return m.ChannelType
	}
	return ""
}

// ref: bnet.protocol.channel.FindChannelRequest
type FindChannelRequest struct {
	AgentIdentity *bnet_protocol.Identity `protobuf:"bytes,1,opt,name=agent_identity,json=agentIdentity" json:"agent_identity,omitempty"`
	Options       *FindChannelOptions     `protobuf:"bytes,2,opt,name=options" json:"options,omitempty"`
}

func (m *FindChannelRequest) Reset()                    { *m = FindChannelRequest{} }
func (m *FindChannelRequest) String() string            { return proto.CompactTextString(m) }
func (*FindChannelRequest) ProtoMessage()               {}
func (*FindChannelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *FindChannelRequest) GetAgentIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.AgentIdentity
	}
	return nil
}

func (m *FindChannelRequest) GetOptions() *FindChannelOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

// ref: bnet.protocol.channel.FindChannelResponse
type FindChannelResponse struct {
	Channel []*bnet_protocol_channel_extracted.ChannelDescription `protobuf:"bytes,1,rep,name=channel" json:"channel,omitempty"`
}

func (m *FindChannelResponse) Reset()                    { *m = FindChannelResponse{} }
func (m *FindChannelResponse) String() string            { return proto.CompactTextString(m) }
func (*FindChannelResponse) ProtoMessage()               {}
func (*FindChannelResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *FindChannelResponse) GetChannel() []*bnet_protocol_channel_extracted.ChannelDescription {
	if m != nil {
		return m.Channel
	}
	return nil
}

// ref: bnet.protocol.channel.GetChannelIdRequest
type GetChannelIdRequest struct {
}

func (m *GetChannelIdRequest) Reset()                    { *m = GetChannelIdRequest{} }
func (m *GetChannelIdRequest) String() string            { return proto.CompactTextString(m) }
func (*GetChannelIdRequest) ProtoMessage()               {}
func (*GetChannelIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

// ref: bnet.protocol.channel.GetChannelIdResponse
type GetChannelIdResponse struct {
	ChannelId *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
}

func (m *GetChannelIdResponse) Reset()                    { *m = GetChannelIdResponse{} }
func (m *GetChannelIdResponse) String() string            { return proto.CompactTextString(m) }
func (*GetChannelIdResponse) ProtoMessage()               {}
func (*GetChannelIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetChannelIdResponse) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

// ref: bnet.protocol.channel.GetChannelInfoRequest
type GetChannelInfoRequest struct {
	AgentId      *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ChannelId    *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	FetchState   bool                    `protobuf:"varint,3,opt,name=fetch_state,json=fetchState" json:"fetch_state,omitempty"`
	FetchMembers bool                    `protobuf:"varint,4,opt,name=fetch_members,json=fetchMembers" json:"fetch_members,omitempty"`
}

func (m *GetChannelInfoRequest) Reset()                    { *m = GetChannelInfoRequest{} }
func (m *GetChannelInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetChannelInfoRequest) ProtoMessage()               {}
func (*GetChannelInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetChannelInfoRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *GetChannelInfoRequest) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *GetChannelInfoRequest) GetFetchState() bool {
	if m != nil {
		return m.FetchState
	}
	return false
}

func (m *GetChannelInfoRequest) GetFetchMembers() bool {
	if m != nil {
		return m.FetchMembers
	}
	return false
}

// ref: bnet.protocol.channel.GetChannelInfoResponse
type GetChannelInfoResponse struct {
	ChannelInfo *ChannelInfo `protobuf:"bytes,1,opt,name=channel_info,json=channelInfo" json:"channel_info,omitempty"`
}

func (m *GetChannelInfoResponse) Reset()                    { *m = GetChannelInfoResponse{} }
func (m *GetChannelInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetChannelInfoResponse) ProtoMessage()               {}
func (*GetChannelInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GetChannelInfoResponse) GetChannelInfo() *ChannelInfo {
	if m != nil {
		return m.ChannelInfo
	}
	return nil
}

// ref: bnet.protocol.channel.JoinChannelRequest
type JoinChannelRequest struct {
	AgentIdentity   *bnet_protocol.Identity   `protobuf:"bytes,1,opt,name=agent_identity,json=agentIdentity" json:"agent_identity,omitempty"`
	MemberState     *MemberState              `protobuf:"bytes,2,opt,name=member_state,json=memberState" json:"member_state,omitempty"`
	ChannelId       *bnet_protocol.EntityId   `protobuf:"bytes,3,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	ObjectId        uint64                    `protobuf:"varint,4,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	FriendAccountId []*bnet_protocol.EntityId `protobuf:"bytes,5,rep,name=friend_account_id,json=friendAccountId" json:"friend_account_id,omitempty"`
	LocalSubscriber bool                      `protobuf:"varint,6,opt,name=local_subscriber,json=localSubscriber" json:"local_subscriber,omitempty"`
}

func (m *JoinChannelRequest) Reset()                    { *m = JoinChannelRequest{} }
func (m *JoinChannelRequest) String() string            { return proto.CompactTextString(m) }
func (*JoinChannelRequest) ProtoMessage()               {}
func (*JoinChannelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *JoinChannelRequest) GetAgentIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.AgentIdentity
	}
	return nil
}

func (m *JoinChannelRequest) GetMemberState() *MemberState {
	if m != nil {
		return m.MemberState
	}
	return nil
}

func (m *JoinChannelRequest) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *JoinChannelRequest) GetObjectId() uint64 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *JoinChannelRequest) GetFriendAccountId() []*bnet_protocol.EntityId {
	if m != nil {
		return m.FriendAccountId
	}
	return nil
}

func (m *JoinChannelRequest) GetLocalSubscriber() bool {
	if m != nil {
		return m.LocalSubscriber
	}
	return false
}

// ref: bnet.protocol.channel.JoinChannelResponse
type JoinChannelResponse struct {
	ObjectId                uint64                    `protobuf:"varint,1,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	RequireFriendValidation bool                      `protobuf:"varint,2,opt,name=require_friend_validation,json=requireFriendValidation" json:"require_friend_validation,omitempty"`
	PrivilegedAccount       []*bnet_protocol.EntityId `protobuf:"bytes,3,rep,name=privileged_account,json=privilegedAccount" json:"privileged_account,omitempty"`
}

func (m *JoinChannelResponse) Reset()                    { *m = JoinChannelResponse{} }
func (m *JoinChannelResponse) String() string            { return proto.CompactTextString(m) }
func (*JoinChannelResponse) ProtoMessage()               {}
func (*JoinChannelResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *JoinChannelResponse) GetObjectId() uint64 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *JoinChannelResponse) GetRequireFriendValidation() bool {
	if m != nil {
		return m.RequireFriendValidation
	}
	return false
}

func (m *JoinChannelResponse) GetPrivilegedAccount() []*bnet_protocol.EntityId {
	if m != nil {
		return m.PrivilegedAccount
	}
	return nil
}

// ref: bnet.protocol.channel.JoinNotification
type JoinNotification struct {
	Member *Member `protobuf:"bytes,1,opt,name=member" json:"member,omitempty"`
}

func (m *JoinNotification) Reset()                    { *m = JoinNotification{} }
func (m *JoinNotification) String() string            { return proto.CompactTextString(m) }
func (*JoinNotification) ProtoMessage()               {}
func (*JoinNotification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *JoinNotification) GetMember() *Member {
	if m != nil {
		return m.Member
	}
	return nil
}

// ref: bnet.protocol.channel.LeaveNotification
type LeaveNotification struct {
	AgentId  *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	MemberId *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Reason   uint32                  `protobuf:"varint,3,opt,name=reason" json:"reason,omitempty"`
}

func (m *LeaveNotification) Reset()                    { *m = LeaveNotification{} }
func (m *LeaveNotification) String() string            { return proto.CompactTextString(m) }
func (*LeaveNotification) ProtoMessage()               {}
func (*LeaveNotification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *LeaveNotification) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *LeaveNotification) GetMemberId() *bnet_protocol.EntityId {
	if m != nil {
		return m.MemberId
	}
	return nil
}

func (m *LeaveNotification) GetReason() uint32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

// ref: bnet.protocol.channel.Member
type Member struct {
	Identity *bnet_protocol.Identity `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	State    *MemberState            `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
}

func (m *Member) Reset()                    { *m = Member{} }
func (m *Member) String() string            { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()               {}
func (*Member) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Member) GetIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *Member) GetState() *MemberState {
	if m != nil {
		return m.State
	}
	return nil
}

// ref: bnet.protocol.channel.MemberState
type MemberState struct {
	Attribute  []*bnet_protocol.Attribute `protobuf:"bytes,1,rep,name=attribute" json:"attribute,omitempty"`
	Role       []uint32                   `protobuf:"varint,2,rep,packed,name=role" json:"role,omitempty"`
	Privileges uint64                     `protobuf:"varint,3,opt,name=privileges" json:"privileges,omitempty"`
	Info       *bnet_protocol.AccountInfo `protobuf:"bytes,4,opt,name=info" json:"info,omitempty"`
	Hidden     bool                       `protobuf:"varint,5,opt,name=hidden" json:"hidden,omitempty"`
}

func (m *MemberState) Reset()                    { *m = MemberState{} }
func (m *MemberState) String() string            { return proto.CompactTextString(m) }
func (*MemberState) ProtoMessage()               {}
func (*MemberState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *MemberState) GetAttribute() []*bnet_protocol.Attribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *MemberState) GetRole() []uint32 {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *MemberState) GetPrivileges() uint64 {
	if m != nil {
		return m.Privileges
	}
	return 0
}

func (m *MemberState) GetInfo() *bnet_protocol.AccountInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MemberState) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

// ref: bnet.protocol.channel.Message
type Message struct {
	Attribute []*bnet_protocol.Attribute `protobuf:"bytes,1,rep,name=attribute" json:"attribute,omitempty"`
	Role      uint32                     `protobuf:"varint,2,opt,name=role" json:"role,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Message) GetAttribute() []*bnet_protocol.Attribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *Message) GetRole() uint32 {
	if m != nil {
		return m.Role
	}
	return 0
}

// ref: bnet.protocol.channel.RemoveMemberRequest
type RemoveMemberRequest struct {
	AgentId  *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	MemberId *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Reason   uint32                  `protobuf:"varint,3,opt,name=reason" json:"reason,omitempty"`
}

func (m *RemoveMemberRequest) Reset()                    { *m = RemoveMemberRequest{} }
func (m *RemoveMemberRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveMemberRequest) ProtoMessage()               {}
func (*RemoveMemberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *RemoveMemberRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *RemoveMemberRequest) GetMemberId() *bnet_protocol.EntityId {
	if m != nil {
		return m.MemberId
	}
	return nil
}

func (m *RemoveMemberRequest) GetReason() uint32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

// ref: bnet.protocol.channel.RemoveNotification
type RemoveNotification struct {
	AgentId  *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	MemberId *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Reason   uint32                  `protobuf:"varint,3,opt,name=reason" json:"reason,omitempty"`
}

func (m *RemoveNotification) Reset()                    { *m = RemoveNotification{} }
func (m *RemoveNotification) String() string            { return proto.CompactTextString(m) }
func (*RemoveNotification) ProtoMessage()               {}
func (*RemoveNotification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *RemoveNotification) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *RemoveNotification) GetMemberId() *bnet_protocol.EntityId {
	if m != nil {
		return m.MemberId
	}
	return nil
}

func (m *RemoveNotification) GetReason() uint32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

// ref: bnet.protocol.channel.SendMessageNotification
type SendMessageNotification struct {
	AgentId            *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Message            *Message                `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	RequiredPrivileges uint64                  `protobuf:"varint,3,opt,name=required_privileges,json=requiredPrivileges" json:"required_privileges,omitempty"`
}

func (m *SendMessageNotification) Reset()                    { *m = SendMessageNotification{} }
func (m *SendMessageNotification) String() string            { return proto.CompactTextString(m) }
func (*SendMessageNotification) ProtoMessage()               {}
func (*SendMessageNotification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *SendMessageNotification) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *SendMessageNotification) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SendMessageNotification) GetRequiredPrivileges() uint64 {
	if m != nil {
		return m.RequiredPrivileges
	}
	return 0
}

// ref: bnet.protocol.channel.SendMessageRequest
type SendMessageRequest struct {
	AgentId            *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Message            *Message                `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	RequiredPrivileges uint64                  `protobuf:"varint,3,opt,name=required_privileges,json=requiredPrivileges" json:"required_privileges,omitempty"`
}

func (m *SendMessageRequest) Reset()                    { *m = SendMessageRequest{} }
func (m *SendMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*SendMessageRequest) ProtoMessage()               {}
func (*SendMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *SendMessageRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *SendMessageRequest) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SendMessageRequest) GetRequiredPrivileges() uint64 {
	if m != nil {
		return m.RequiredPrivileges
	}
	return 0
}

// ref: bnet.protocol.channel.SetRolesRequest
type SetRolesRequest struct {
	AgentId  *bnet_protocol.EntityId   `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Role     []uint32                  `protobuf:"varint,2,rep,packed,name=role" json:"role,omitempty"`
	MemberId []*bnet_protocol.EntityId `protobuf:"bytes,3,rep,name=member_id,json=memberId" json:"member_id,omitempty"`
}

func (m *SetRolesRequest) Reset()                    { *m = SetRolesRequest{} }
func (m *SetRolesRequest) String() string            { return proto.CompactTextString(m) }
func (*SetRolesRequest) ProtoMessage()               {}
func (*SetRolesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *SetRolesRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *SetRolesRequest) GetRole() []uint32 {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *SetRolesRequest) GetMemberId() []*bnet_protocol.EntityId {
	if m != nil {
		return m.MemberId
	}
	return nil
}

// ref: bnet.protocol.channel.SubscribeChannelRequest
type SubscribeChannelRequest struct {
	AgentId   *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ChannelId *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	ObjectId  uint64                  `protobuf:"varint,3,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (m *SubscribeChannelRequest) Reset()                    { *m = SubscribeChannelRequest{} }
func (m *SubscribeChannelRequest) String() string            { return proto.CompactTextString(m) }
func (*SubscribeChannelRequest) ProtoMessage()               {}
func (*SubscribeChannelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *SubscribeChannelRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *SubscribeChannelRequest) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *SubscribeChannelRequest) GetObjectId() uint64 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

// ref: bnet.protocol.channel.SubscribeChannelResponse
type SubscribeChannelResponse struct {
	ObjectId uint64 `protobuf:"varint,1,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (m *SubscribeChannelResponse) Reset()                    { *m = SubscribeChannelResponse{} }
func (m *SubscribeChannelResponse) String() string            { return proto.CompactTextString(m) }
func (*SubscribeChannelResponse) ProtoMessage()               {}
func (*SubscribeChannelResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *SubscribeChannelResponse) GetObjectId() uint64 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

// ref: bnet.protocol.channel.UnsubscribeMemberRequest
type UnsubscribeMemberRequest struct {
	AgentId  *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	MemberId *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
}

func (m *UnsubscribeMemberRequest) Reset()                    { *m = UnsubscribeMemberRequest{} }
func (m *UnsubscribeMemberRequest) String() string            { return proto.CompactTextString(m) }
func (*UnsubscribeMemberRequest) ProtoMessage()               {}
func (*UnsubscribeMemberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *UnsubscribeMemberRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *UnsubscribeMemberRequest) GetMemberId() *bnet_protocol.EntityId {
	if m != nil {
		return m.MemberId
	}
	return nil
}

// ref: bnet.protocol.channel.UpdateChannelStateNotification
type UpdateChannelStateNotification struct {
	AgentId     *bnet_protocol.EntityId                       `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	StateChange *bnet_protocol_channel_extracted.ChannelState `protobuf:"bytes,2,opt,name=state_change,json=stateChange" json:"state_change,omitempty"`
}

func (m *UpdateChannelStateNotification) Reset()                    { *m = UpdateChannelStateNotification{} }
func (m *UpdateChannelStateNotification) String() string            { return proto.CompactTextString(m) }
func (*UpdateChannelStateNotification) ProtoMessage()               {}
func (*UpdateChannelStateNotification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *UpdateChannelStateNotification) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *UpdateChannelStateNotification) GetStateChange() *bnet_protocol_channel_extracted.ChannelState {
	if m != nil {
		return m.StateChange
	}
	return nil
}

// ref: bnet.protocol.channel.UpdateChannelStateRequest
type UpdateChannelStateRequest struct {
	AgentId     *bnet_protocol.EntityId                       `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	StateChange *bnet_protocol_channel_extracted.ChannelState `protobuf:"bytes,2,opt,name=state_change,json=stateChange" json:"state_change,omitempty"`
}

func (m *UpdateChannelStateRequest) Reset()                    { *m = UpdateChannelStateRequest{} }
func (m *UpdateChannelStateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateChannelStateRequest) ProtoMessage()               {}
func (*UpdateChannelStateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *UpdateChannelStateRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *UpdateChannelStateRequest) GetStateChange() *bnet_protocol_channel_extracted.ChannelState {
	if m != nil {
		return m.StateChange
	}
	return nil
}

// ref: bnet.protocol.channel.UpdateMemberStateNotification
type UpdateMemberStateNotification struct {
	AgentId     *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	StateChange []*Member               `protobuf:"bytes,2,rep,name=state_change,json=stateChange" json:"state_change,omitempty"`
	RemovedRole []uint32                `protobuf:"varint,3,rep,packed,name=removed_role,json=removedRole" json:"removed_role,omitempty"`
}

func (m *UpdateMemberStateNotification) Reset()                    { *m = UpdateMemberStateNotification{} }
func (m *UpdateMemberStateNotification) String() string            { return proto.CompactTextString(m) }
func (*UpdateMemberStateNotification) ProtoMessage()               {}
func (*UpdateMemberStateNotification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *UpdateMemberStateNotification) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *UpdateMemberStateNotification) GetStateChange() []*Member {
	if m != nil {
		return m.StateChange
	}
	return nil
}

func (m *UpdateMemberStateNotification) GetRemovedRole() []uint32 {
	if m != nil {
		return m.RemovedRole
	}
	return nil
}

// ref: bnet.protocol.channel.UpdateMemberStateRequest
type UpdateMemberStateRequest struct {
	AgentId     *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	StateChange []*Member               `protobuf:"bytes,2,rep,name=state_change,json=stateChange" json:"state_change,omitempty"`
	RemovedRole []uint32                `protobuf:"varint,3,rep,packed,name=removed_role,json=removedRole" json:"removed_role,omitempty"`
}

func (m *UpdateMemberStateRequest) Reset()                    { *m = UpdateMemberStateRequest{} }
func (m *UpdateMemberStateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateMemberStateRequest) ProtoMessage()               {}
func (*UpdateMemberStateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *UpdateMemberStateRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *UpdateMemberStateRequest) GetStateChange() []*Member {
	if m != nil {
		return m.StateChange
	}
	return nil
}

func (m *UpdateMemberStateRequest) GetRemovedRole() []uint32 {
	if m != nil {
		return m.RemovedRole
	}
	return nil
}

func init() {
	proto.RegisterType((*AddMemberRequest)(nil), "bnet.protocol.channel.AddMemberRequest")
	proto.RegisterType((*AddNotification)(nil), "bnet.protocol.channel.AddNotification")
	proto.RegisterType((*ChannelInfo)(nil), "bnet.protocol.channel.ChannelInfo")
	proto.RegisterType((*CreateChannelRequest)(nil), "bnet.protocol.channel.CreateChannelRequest")
	proto.RegisterType((*CreateChannelResponse)(nil), "bnet.protocol.channel.CreateChannelResponse")
	proto.RegisterType((*DissolveRequest)(nil), "bnet.protocol.channel.DissolveRequest")
	proto.RegisterType((*FindChannelOptions)(nil), "bnet.protocol.channel.FindChannelOptions")
	proto.RegisterType((*FindChannelRequest)(nil), "bnet.protocol.channel.FindChannelRequest")
	proto.RegisterType((*FindChannelResponse)(nil), "bnet.protocol.channel.FindChannelResponse")
	proto.RegisterType((*GetChannelIdRequest)(nil), "bnet.protocol.channel.GetChannelIdRequest")
	proto.RegisterType((*GetChannelIdResponse)(nil), "bnet.protocol.channel.GetChannelIdResponse")
	proto.RegisterType((*GetChannelInfoRequest)(nil), "bnet.protocol.channel.GetChannelInfoRequest")
	proto.RegisterType((*GetChannelInfoResponse)(nil), "bnet.protocol.channel.GetChannelInfoResponse")
	proto.RegisterType((*JoinChannelRequest)(nil), "bnet.protocol.channel.JoinChannelRequest")
	proto.RegisterType((*JoinChannelResponse)(nil), "bnet.protocol.channel.JoinChannelResponse")
	proto.RegisterType((*JoinNotification)(nil), "bnet.protocol.channel.JoinNotification")
	proto.RegisterType((*LeaveNotification)(nil), "bnet.protocol.channel.LeaveNotification")
	proto.RegisterType((*Member)(nil), "bnet.protocol.channel.Member")
	proto.RegisterType((*MemberState)(nil), "bnet.protocol.channel.MemberState")
	proto.RegisterType((*Message)(nil), "bnet.protocol.channel.Message")
	proto.RegisterType((*RemoveMemberRequest)(nil), "bnet.protocol.channel.RemoveMemberRequest")
	proto.RegisterType((*RemoveNotification)(nil), "bnet.protocol.channel.RemoveNotification")
	proto.RegisterType((*SendMessageNotification)(nil), "bnet.protocol.channel.SendMessageNotification")
	proto.RegisterType((*SendMessageRequest)(nil), "bnet.protocol.channel.SendMessageRequest")
	proto.RegisterType((*SetRolesRequest)(nil), "bnet.protocol.channel.SetRolesRequest")
	proto.RegisterType((*SubscribeChannelRequest)(nil), "bnet.protocol.channel.SubscribeChannelRequest")
	proto.RegisterType((*SubscribeChannelResponse)(nil), "bnet.protocol.channel.SubscribeChannelResponse")
	proto.RegisterType((*UnsubscribeMemberRequest)(nil), "bnet.protocol.channel.UnsubscribeMemberRequest")
	proto.RegisterType((*UpdateChannelStateNotification)(nil), "bnet.protocol.channel.UpdateChannelStateNotification")
	proto.RegisterType((*UpdateChannelStateRequest)(nil), "bnet.protocol.channel.UpdateChannelStateRequest")
	proto.RegisterType((*UpdateMemberStateNotification)(nil), "bnet.protocol.channel.UpdateMemberStateNotification")
	proto.RegisterType((*UpdateMemberStateRequest)(nil), "bnet.protocol.channel.UpdateMemberStateRequest")
}

func init() { proto.RegisterFile("bnet/protocol/channel/channel.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x58, 0xc1, 0x72, 0x1b, 0x45,
	0x13, 0xfe, 0x47, 0x52, 0x2c, 0xa9, 0x65, 0x45, 0xce, 0x38, 0x4e, 0x36, 0xf9, 0x93, 0x60, 0x26,
	0x97, 0xa4, 0x0a, 0xe4, 0x22, 0x09, 0x89, 0xc9, 0x81, 0xc2, 0x38, 0x71, 0x4a, 0x29, 0x12, 0xc2,
	0x98, 0x40, 0x71, 0xa0, 0xb6, 0x56, 0x3b, 0x23, 0x7b, 0xa9, 0xd5, 0xae, 0xb2, 0x3b, 0x32, 0xf6,
	0x9d, 0x13, 0x57, 0x0a, 0x28, 0x4e, 0x14, 0x1c, 0x78, 0x01, 0x0e, 0x50, 0x14, 0x1c, 0x39, 0x70,
	0x85, 0x57, 0xe0, 0x41, 0xa8, 0xed, 0x99, 0x5d, 0xed, 0x4a, 0xb6, 0xa3, 0x58, 0x26, 0xe4, 0x64,
	0x4d, 0x4f, 0x77, 0xcf, 0xd7, 0x3d, 0x5f, 0x77, 0xcf, 0x1a, 0x2e, 0x77, 0x03, 0xa9, 0x56, 0x06,
	0x51, 0xa8, 0x42, 0x37, 0xf4, 0x57, 0xdc, 0x6d, 0x27, 0x08, 0x64, 0xf6, 0xb7, 0x8d, 0x1b, 0x74,
	0x29, 0x51, 0x6a, 0xa7, 0x4a, 0x6d, 0xb3, 0x79, 0x7e, 0xa5, 0x68, 0xeb, 0x28, 0x15, 0x79, 0xdd,
	0xa1, 0x92, 0xf6, 0x8d, 0x9b, 0xab, 0xc5, 0x95, 0xb6, 0x3d, 0x7f, 0x6b, 0xdf, 0xc3, 0x6c, 0xb9,
	0xab, 0x22, 0xc7, 0x55, 0x52, 0x4c, 0x4a, 0x8c, 0xe1, 0x85, 0xa2, 0x61, 0x86, 0x04, 0x7f, 0xb0,
	0xcf, 0x4b, 0xb0, 0xb0, 0x26, 0xc4, 0x03, 0xd9, 0xef, 0xca, 0x88, 0xcb, 0x27, 0x43, 0x19, 0x2b,
	0x7a, 0x0d, 0x6a, 0xce, 0x96, 0x0c, 0x94, 0xed, 0x09, 0x8b, 0x2c, 0x93, 0x2b, 0x8d, 0x6b, 0x67,
	0xdb, 0xc5, 0x30, 0xee, 0x06, 0xca, 0x53, 0x7b, 0x1d, 0xc1, 0xab, 0xa8, 0xd8, 0x11, 0xf4, 0x2d,
	0x68, 0xf5, 0xd1, 0x89, 0xed, 0x09, 0x89, 0xbb, 0x56, 0x69, 0x5f, 0xd3, 0x8e, 0xd9, 0xe6, 0x27,
	0xb5, 0x7e, 0xba, 0xa6, 0x77, 0x61, 0xde, 0x78, 0x88, 0x95, 0xa3, 0xa4, 0x55, 0x46, 0x73, 0xd6,
	0xde, 0x37, 0x81, 0x6d, 0x8d, 0x78, 0x33, 0xd1, 0xe4, 0x8d, 0xfe, 0x68, 0x41, 0xff, 0x0f, 0xf5,
	0xb0, 0xfb, 0x89, 0x74, 0x11, 0x7d, 0x65, 0x99, 0x5c, 0xa9, 0xf0, 0x9a, 0x16, 0x74, 0x04, 0xbd,
	0x00, 0xf5, 0x78, 0xd8, 0x8d, 0xdd, 0xc8, 0xeb, 0x4a, 0xeb, 0xc4, 0x32, 0xb9, 0x52, 0xe3, 0x23,
	0x01, 0xfb, 0x8b, 0x40, 0x6b, 0x4d, 0x88, 0x87, 0xa1, 0xf2, 0x7a, 0x9e, 0xeb, 0x28, 0x2f, 0x0c,
	0xe8, 0x6b, 0x50, 0x89, 0xa5, 0xdf, 0x33, 0x79, 0xb8, 0x78, 0x28, 0x1a, 0x8e, 0xaa, 0xf4, 0x0d,
	0x98, 0xd3, 0x80, 0xac, 0xd2, 0x72, 0xf9, 0xa9, 0x46, 0x6f, 0x97, 0x16, 0xfe, 0xc7, 0x8d, 0x01,
	0xe5, 0xd0, 0x4c, 0xef, 0x31, 0x9f, 0x84, 0x57, 0xf7, 0xf7, 0x90, 0xbb, 0xeb, 0x75, 0x2d, 0xd1,
	0xf9, 0x98, 0x77, 0x73, 0x2b, 0xf6, 0x2d, 0x81, 0x86, 0xd9, 0xee, 0x04, 0xbd, 0x90, 0x3e, 0x86,
	0x86, 0x90, 0x49, 0xc4, 0x83, 0x24, 0x40, 0x13, 0xd8, 0xf5, 0x69, 0x4f, 0xb8, 0x33, 0x32, 0xe5,
	0x79, 0x3f, 0x33, 0x44, 0xcd, 0xfe, 0x2c, 0xc3, 0xe9, 0xf5, 0x48, 0x3a, 0x4a, 0x9a, 0x43, 0x52,
	0x22, 0xbe, 0x09, 0x27, 0x53, 0x22, 0x1a, 0x4e, 0x91, 0xc3, 0x39, 0xd5, 0x34, 0x74, 0x3c, 0x80,
	0x52, 0xa5, 0xa3, 0x51, 0xea, 0x5f, 0xb8, 0x15, 0x7a, 0x13, 0x20, 0xd5, 0x37, 0x3c, 0x3d, 0xa4,
	0xca, 0xea, 0x46, 0xb5, 0x23, 0x8a, 0xf4, 0x3e, 0x31, 0x46, 0xef, 0x55, 0x68, 0xf8, 0xa1, 0xeb,
	0xf8, 0x36, 0xa6, 0xc1, 0x9a, 0x3b, 0xdc, 0x2b, 0xa0, 0xee, 0x5a, 0xa2, 0x4a, 0x1f, 0x01, 0xd5,
	0x96, 0x85, 0x7c, 0x55, 0xa7, 0xce, 0xd7, 0x02, 0x5a, 0xe7, 0x24, 0xcc, 0x87, 0xa5, 0xb1, 0x3b,
	0x8d, 0x07, 0x61, 0x10, 0x8f, 0x15, 0x28, 0x19, 0x8b, 0xa0, 0x98, 0x96, 0xd2, 0xb4, 0x69, 0x61,
	0x1f, 0x43, 0xeb, 0x8e, 0x17, 0xc7, 0xa1, 0xbf, 0x23, 0x67, 0xe9, 0x62, 0x67, 0x60, 0x2e, 0x92,
	0x4e, 0x1c, 0x06, 0x78, 0x74, 0x93, 0x9b, 0x15, 0xfb, 0xad, 0x04, 0x74, 0xc3, 0x0b, 0x84, 0x89,
	0xe5, 0x5d, 0xa4, 0x7c, 0x4c, 0x5f, 0x82, 0x46, 0xac, 0x9c, 0x48, 0xd9, 0x5e, 0x20, 0xe4, 0x2e,
	0x9e, 0xd2, 0xe4, 0x80, 0xa2, 0x4e, 0x22, 0x49, 0x14, 0xfa, 0xce, 0xae, 0x1d, 0xc9, 0x78, 0xe8,
	0xab, 0xd8, 0x38, 0x85, 0xbe, 0xb3, 0xcb, 0xb5, 0x84, 0x52, 0xa8, 0x04, 0x4e, 0x5f, 0x33, 0xaa,
	0xce, 0xf1, 0x37, 0xb5, 0xa0, 0x3a, 0x88, 0xc2, 0xad, 0xc8, 0xe9, 0x23, 0x2f, 0xaa, 0x3c, 0x5d,
	0x26, 0xf0, 0x30, 0xcf, 0xba, 0x77, 0x55, 0xb9, 0x59, 0xd1, 0xcb, 0xd0, 0x74, 0x9d, 0x81, 0xe3,
	0x7a, 0x6a, 0xcf, 0xee, 0x0d, 0x7d, 0x1f, 0x6f, 0xbe, 0xc9, 0xe7, 0x53, 0xe1, 0xc6, 0xd0, 0xf7,
	0xe9, 0x87, 0xb0, 0x30, 0x1a, 0x2c, 0x3d, 0xcf, 0x57, 0x32, 0x32, 0x17, 0xfc, 0xca, 0x58, 0x5e,
	0x8a, 0xf3, 0x67, 0x2d, 0x5d, 0x6d, 0xa0, 0x0d, 0x6f, 0x39, 0x45, 0x01, 0x7d, 0x19, 0x52, 0x6a,
	0xdb, 0x6a, 0x6f, 0x20, 0xad, 0x1a, 0xc6, 0xd2, 0x30, 0xb2, 0xf7, 0xf7, 0x06, 0x92, 0x7d, 0x43,
	0x0a, 0xf9, 0x3b, 0xae, 0xfa, 0x5e, 0x87, 0x6a, 0xa8, 0xaf, 0xc2, 0x50, 0xe5, 0xea, 0x01, 0x54,
	0x9d, 0xbc, 0x3b, 0x9e, 0x5a, 0xb2, 0x6d, 0x58, 0x2c, 0x40, 0x33, 0x34, 0x7d, 0x0f, 0xaa, 0xc6,
	0xda, 0x22, 0xd8, 0xd0, 0x8e, 0xd2, 0x22, 0xb1, 0xcd, 0xa5, 0x7e, 0xd8, 0x12, 0x2c, 0xde, 0x93,
	0x2a, 0xed, 0xc5, 0xc2, 0x64, 0x81, 0x3d, 0x84, 0xd3, 0x45, 0xb1, 0x41, 0x50, 0xac, 0x05, 0x32,
	0x75, 0x2d, 0xfc, 0x41, 0x60, 0x29, 0xe7, 0x30, 0xe8, 0x85, 0xb3, 0x94, 0xc4, 0x11, 0x2b, 0x32,
	0xa1, 0x7e, 0x4f, 0x2a, 0x77, 0x3b, 0xd7, 0x32, 0x6b, 0x1c, 0x50, 0xa4, 0x3b, 0xe0, 0x65, 0x68,
	0x6a, 0x05, 0xdd, 0x72, 0x62, 0x24, 0x7b, 0x8d, 0xcf, 0xa3, 0x50, 0x77, 0x92, 0x98, 0xd9, 0x70,
	0x66, 0x3c, 0x14, 0x93, 0x9d, 0xbb, 0x23, 0xd6, 0x79, 0x41, 0x2f, 0x34, 0xf1, 0x1c, 0xd4, 0xab,
	0xf2, 0x1e, 0x52, 0x66, 0x26, 0x0b, 0xf6, 0x77, 0x09, 0xe8, 0xfd, 0xd0, 0x0b, 0x5e, 0xcc, 0xc9,
	0x53, 0x4c, 0x7e, 0xf9, 0x68, 0x53, 0x62, 0xfc, 0x11, 0x74, 0x0f, 0x4e, 0xf5, 0x22, 0x4f, 0x06,
	0xc2, 0x76, 0x5c, 0x37, 0x1c, 0x06, 0x66, 0x94, 0x94, 0x0f, 0xf1, 0x8d, 0x3c, 0x6e, 0x69, 0xab,
	0x35, 0x6d, 0xd4, 0x11, 0xf4, 0x2a, 0xe8, 0xb6, 0x6f, 0x67, 0x4f, 0xa8, 0x08, 0x3b, 0x4f, 0x8d,
	0xb7, 0x50, 0xbe, 0x99, 0x89, 0xd9, 0x2f, 0x04, 0x16, 0x0b, 0x69, 0x9e, 0x66, 0x18, 0xdc, 0x86,
	0x73, 0x91, 0x7c, 0x32, 0xf4, 0x22, 0x69, 0x1b, 0xc0, 0x3b, 0x8e, 0xef, 0x09, 0x7c, 0x98, 0x61,
	0x46, 0x6b, 0xfc, 0xac, 0x51, 0xd8, 0xc0, 0xfd, 0x0f, 0xb2, 0x6d, 0x7a, 0x1f, 0xe8, 0x20, 0xf2,
	0x76, 0x3c, 0x5f, 0x6e, 0xc9, 0x2c, 0x50, 0xab, 0xfc, 0xf4, 0x28, 0x4f, 0x8d, 0xcc, 0x4c, 0xa4,
	0xac, 0x03, 0x0b, 0x09, 0xf6, 0xc2, 0xbb, 0xf0, 0xf5, 0xec, 0xb9, 0x33, 0xd5, 0xcb, 0x30, 0x7d,
	0xea, 0x7c, 0x49, 0xe0, 0xd4, 0x3b, 0xd2, 0xd9, 0x91, 0x05, 0x67, 0x47, 0xa9, 0xcb, 0x1b, 0x50,
	0xcf, 0x1e, 0xdc, 0x4f, 0x2b, 0xcb, 0x5a, 0xfa, 0xd4, 0xce, 0x0d, 0xb8, 0x72, 0x61, 0xc0, 0x7d,
	0x0a, 0x73, 0x1a, 0x29, 0xbd, 0x0e, 0xb5, 0x69, 0x39, 0x9f, 0x29, 0xd2, 0x55, 0x38, 0xf1, 0xac,
	0x3c, 0xd7, 0x06, 0xec, 0x77, 0x02, 0x8d, 0x9c, 0x98, 0xde, 0x86, 0x7a, 0x36, 0x5f, 0x4c, 0xe3,
	0xb5, 0xc6, 0xbc, 0x65, 0x03, 0x09, 0xef, 0x6b, 0xa4, 0x9e, 0x0c, 0xd3, 0x28, 0xf4, 0x25, 0x3e,
	0x40, 0x9b, 0x1c, 0x7f, 0xd3, 0x4b, 0x00, 0xd9, 0x85, 0xc6, 0x18, 0x74, 0x85, 0xe7, 0x24, 0xb4,
	0x0d, 0x15, 0x6c, 0x1f, 0xfa, 0x05, 0x76, 0x7e, 0xfc, 0x28, 0xc3, 0xf5, 0xa4, 0x6d, 0xa0, 0x5e,
	0x92, 0xc0, 0x6d, 0x4f, 0x08, 0x19, 0x98, 0xcf, 0x07, 0xb3, 0x62, 0x1f, 0x41, 0xf5, 0x81, 0x8c,
	0x63, 0x67, 0xeb, 0xb8, 0x42, 0x20, 0x69, 0x08, 0xec, 0x6b, 0x02, 0x8b, 0x5c, 0xf6, 0xc3, 0x1d,
	0x39, 0xfb, 0x67, 0xda, 0xf1, 0xb2, 0xe6, 0x2b, 0x02, 0x54, 0x23, 0x7b, 0xc1, 0xe8, 0xfc, 0x33,
	0x81, 0xb3, 0x9b, 0x32, 0x10, 0xe6, 0x4a, 0x66, 0x46, 0xb7, 0x0a, 0xd5, 0xbe, 0x76, 0x65, 0xb0,
	0x5d, 0x3a, 0x90, 0xe1, 0xa8, 0xc5, 0x53, 0x75, 0xba, 0x02, 0x8b, 0xa6, 0x45, 0x09, 0x7b, 0x82,
	0x88, 0x34, 0xdd, 0x7a, 0x94, 0xed, 0xb0, 0x1f, 0x09, 0xd0, 0x1c, 0xf4, 0x59, 0x2e, 0xfb, 0x39,
	0xa2, 0xfe, 0x82, 0x40, 0x6b, 0x53, 0x2a, 0x1e, 0xfa, 0x32, 0x9e, 0x05, 0xf2, 0x7e, 0x25, 0xbc,
	0x9a, 0xa7, 0xc6, 0x14, 0x1d, 0x3c, 0xa3, 0x07, 0xfb, 0x3e, 0xa1, 0x41, 0x3a, 0x84, 0xc6, 0x26,
	0xfc, 0xf3, 0x7c, 0x0b, 0x15, 0xa6, 0x5c, 0xb9, 0x38, 0xe5, 0xd8, 0x2d, 0xb0, 0x26, 0x31, 0x4e,
	0x31, 0x1e, 0xd9, 0x67, 0x04, 0xac, 0xc7, 0x41, 0x36, 0x7b, 0xff, 0xa3, 0xe6, 0xc0, 0x7e, 0x20,
	0x70, 0xe9, 0xf1, 0x40, 0x8c, 0xbe, 0xf4, 0xb0, 0x91, 0xcf, 0x5c, 0x72, 0x8f, 0x60, 0x1e, 0x27,
	0x84, 0x9d, 0xa4, 0x31, 0x63, 0xf0, 0x33, 0x7e, 0x73, 0x37, 0xd0, 0xc5, 0x3a, 0x7a, 0x60, 0xdf,
	0x11, 0x38, 0x37, 0x09, 0x74, 0x96, 0x84, 0x1d, 0x3f, 0xc6, 0x5f, 0x09, 0x5c, 0xd4, 0x18, 0x73,
	0x43, 0x71, 0xe6, 0x5c, 0xde, 0x99, 0xc0, 0x39, 0xe5, 0x7f, 0x68, 0xf2, 0xd8, 0x92, 0xef, 0xbc,
	0x08, 0x9b, 0xbd, 0xb0, 0xb1, 0x46, 0xcb, 0x58, 0xa3, 0x0d, 0x23, 0x4b, 0x4a, 0x9f, 0xfd, 0x94,
	0x50, 0x72, 0x1c, 0xfe, 0x2c, 0x19, 0x7e, 0x5e, 0xc8, 0xbb, 0x73, 0xe8, 0xec, 0xfa, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x96, 0xaa, 0x45, 0xe9, 0xd5, 0x15, 0x00, 0x00,
}
