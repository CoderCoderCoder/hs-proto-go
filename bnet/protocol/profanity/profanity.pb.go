// Code generated by protoc-gen-go.
// source: bnet/protocol/profanity/profanity.proto
// DO NOT EDIT!

package bnet_protocol_profanity

import proto "github.com/golang/protobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

// ref: bnet.protocol.profanity.WordFilter
type WordFilter struct {
	Type             *string `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Regex            *string `protobuf:"bytes,2,req,name=regex" json:"regex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WordFilter) Reset()         { *m = WordFilter{} }
func (m *WordFilter) String() string { return proto.CompactTextString(m) }
func (*WordFilter) ProtoMessage()    {}

func (m *WordFilter) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *WordFilter) GetRegex() string {
	if m != nil && m.Regex != nil {
		return *m.Regex
	}
	return ""
}

// ref: bnet.protocol.profanity.WordFilters
type WordFilters struct {
	Filters          []*WordFilter `protobuf:"bytes,1,rep,name=filters" json:"filters,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *WordFilters) Reset()         { *m = WordFilters{} }
func (m *WordFilters) String() string { return proto.CompactTextString(m) }
func (*WordFilters) ProtoMessage()    {}

func (m *WordFilters) GetFilters() []*WordFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func init() {
}
