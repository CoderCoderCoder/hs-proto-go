// Code generated by protoc-gen-go.
// source: bnet/protocol/channel_extracted/channel_extracted.proto
// DO NOT EDIT!

/*
Package bnet_protocol_channel_extracted is a generated protocol buffer package.

It is generated from these files:
	bnet/protocol/channel_extracted/channel_extracted.proto

It has these top-level messages:
	ChannelDescription
	ChannelInvitation
	ChannelState
	Invitation
	InvitationNotification
	SubscribeToFriendsResponse
*/
package bnet_protocol_channel_extracted

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bnet_protocol_chat "bnet/protocol/chat"
import bnet_protocol_friends "bnet/protocol/friends"
import bnet_protocol_presence "bnet/protocol/presence"
import bnet_protocol "bnet/protocol"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ref: bnet.protocol.channel.ChannelState/Types/PrivacyLevel
type ChannelState_PrivacyLevel int32

const (
	ChannelState_PRIVACYLEVEL_AUTO_INVALID                ChannelState_PrivacyLevel = 0
	ChannelState_PRIVACY_LEVEL_OPEN                       ChannelState_PrivacyLevel = 1
	ChannelState_PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND ChannelState_PrivacyLevel = 2
	ChannelState_PRIVACY_LEVEL_OPEN_INVITATION            ChannelState_PrivacyLevel = 3
	ChannelState_PRIVACY_LEVEL_CLOSED                     ChannelState_PrivacyLevel = 4
)

var ChannelState_PrivacyLevel_name = map[int32]string{
	0: "PRIVACYLEVEL_AUTO_INVALID",
	1: "PRIVACY_LEVEL_OPEN",
	2: "PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND",
	3: "PRIVACY_LEVEL_OPEN_INVITATION",
	4: "PRIVACY_LEVEL_CLOSED",
}
var ChannelState_PrivacyLevel_value = map[string]int32{
	"PRIVACYLEVEL_AUTO_INVALID":                0,
	"PRIVACY_LEVEL_OPEN":                       1,
	"PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND": 2,
	"PRIVACY_LEVEL_OPEN_INVITATION":            3,
	"PRIVACY_LEVEL_CLOSED":                     4,
}

func (x ChannelState_PrivacyLevel) String() string {
	return proto.EnumName(ChannelState_PrivacyLevel_name, int32(x))
}
func (ChannelState_PrivacyLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

// ref: bnet.protocol.channel.ChannelDescription
type ChannelDescription struct {
	ChannelId      *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	CurrentMembers uint32                  `protobuf:"varint,2,opt,name=current_members,json=currentMembers" json:"current_members,omitempty"`
	State          *ChannelState           `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
}

func (m *ChannelDescription) Reset()                    { *m = ChannelDescription{} }
func (m *ChannelDescription) String() string            { return proto.CompactTextString(m) }
func (*ChannelDescription) ProtoMessage()               {}
func (*ChannelDescription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ChannelDescription) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *ChannelDescription) GetCurrentMembers() uint32 {
	if m != nil {
		return m.CurrentMembers
	}
	return 0
}

func (m *ChannelDescription) GetState() *ChannelState {
	if m != nil {
		return m.State
	}
	return nil
}

// ref: bnet.protocol.channel_invitation.ChannelInvitation
type ChannelInvitation struct {
	ChannelDescription *ChannelDescription `protobuf:"bytes,1,opt,name=channel_description,json=channelDescription" json:"channel_description,omitempty"`
	Reserved           bool                `protobuf:"varint,2,opt,name=reserved" json:"reserved,omitempty"`
	Rejoin             bool                `protobuf:"varint,3,opt,name=rejoin" json:"rejoin,omitempty"`
	ServiceType        uint32              `protobuf:"varint,4,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
}

func (m *ChannelInvitation) Reset()                    { *m = ChannelInvitation{} }
func (m *ChannelInvitation) String() string            { return proto.CompactTextString(m) }
func (*ChannelInvitation) ProtoMessage()               {}
func (*ChannelInvitation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ChannelInvitation) GetChannelDescription() *ChannelDescription {
	if m != nil {
		return m.ChannelDescription
	}
	return nil
}

func (m *ChannelInvitation) GetReserved() bool {
	if m != nil {
		return m.Reserved
	}
	return false
}

func (m *ChannelInvitation) GetRejoin() bool {
	if m != nil {
		return m.Rejoin
	}
	return false
}

func (m *ChannelInvitation) GetServiceType() uint32 {
	if m != nil {
		return m.ServiceType
	}
	return 0
}

// ref: bnet.protocol.channel.ChannelState
type ChannelState struct {
	MaxMembers          uint32                               `protobuf:"varint,1,opt,name=max_members,json=maxMembers" json:"max_members,omitempty"`
	MinMembers          uint32                               `protobuf:"varint,2,opt,name=min_members,json=minMembers" json:"min_members,omitempty"`
	Attribute           []*bnet_protocol.Attribute           `protobuf:"bytes,3,rep,name=attribute" json:"attribute,omitempty"`
	Invitation          []*Invitation                        `protobuf:"bytes,4,rep,name=invitation" json:"invitation,omitempty"`
	MaxInvitations      uint32                               `protobuf:"varint,5,opt,name=max_invitations,json=maxInvitations" json:"max_invitations,omitempty"`
	Reason              uint32                               `protobuf:"varint,6,opt,name=reason" json:"reason,omitempty"`
	PrivacyLevel        ChannelState_PrivacyLevel            `protobuf:"varint,7,opt,name=privacy_level,json=privacyLevel,enum=bnet.protocol.channel_extracted.ChannelState_PrivacyLevel" json:"privacy_level,omitempty"`
	Name                string                               `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	DelegateName        string                               `protobuf:"bytes,9,opt,name=delegate_name,json=delegateName" json:"delegate_name,omitempty"`
	ChannelType         string                               `protobuf:"bytes,10,opt,name=channel_type,json=channelType" json:"channel_type,omitempty"`
	Program             uint32                               `protobuf:"fixed32,11,opt,name=program" json:"program,omitempty"`
	AllowOfflineMembers bool                                 `protobuf:"varint,12,opt,name=allow_offline_members,json=allowOfflineMembers" json:"allow_offline_members,omitempty"`
	SubscribeToPresence bool                                 `protobuf:"varint,13,opt,name=subscribe_to_presence,json=subscribeToPresence" json:"subscribe_to_presence,omitempty"`
	Chat                *bnet_protocol_chat.ChannelState     `protobuf:"bytes,100,opt,name=chat" json:"chat,omitempty"`
	Presence            *bnet_protocol_presence.ChannelState `protobuf:"bytes,101,opt,name=presence" json:"presence,omitempty"`
}

func (m *ChannelState) Reset()                    { *m = ChannelState{} }
func (m *ChannelState) String() string            { return proto.CompactTextString(m) }
func (*ChannelState) ProtoMessage()               {}
func (*ChannelState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ChannelState) GetMaxMembers() uint32 {
	if m != nil {
		return m.MaxMembers
	}
	return 0
}

func (m *ChannelState) GetMinMembers() uint32 {
	if m != nil {
		return m.MinMembers
	}
	return 0
}

func (m *ChannelState) GetAttribute() []*bnet_protocol.Attribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *ChannelState) GetInvitation() []*Invitation {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *ChannelState) GetMaxInvitations() uint32 {
	if m != nil {
		return m.MaxInvitations
	}
	return 0
}

func (m *ChannelState) GetReason() uint32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

func (m *ChannelState) GetPrivacyLevel() ChannelState_PrivacyLevel {
	if m != nil {
		return m.PrivacyLevel
	}
	return ChannelState_PRIVACYLEVEL_AUTO_INVALID
}

func (m *ChannelState) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChannelState) GetDelegateName() string {
	if m != nil {
		return m.DelegateName
	}
	return ""
}

func (m *ChannelState) GetChannelType() string {
	if m != nil {
		return m.ChannelType
	}
	return ""
}

func (m *ChannelState) GetProgram() uint32 {
	if m != nil {
		return m.Program
	}
	return 0
}

func (m *ChannelState) GetAllowOfflineMembers() bool {
	if m != nil {
		return m.AllowOfflineMembers
	}
	return false
}

func (m *ChannelState) GetSubscribeToPresence() bool {
	if m != nil {
		return m.SubscribeToPresence
	}
	return false
}

func (m *ChannelState) GetChat() *bnet_protocol_chat.ChannelState {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *ChannelState) GetPresence() *bnet_protocol_presence.ChannelState {
	if m != nil {
		return m.Presence
	}
	return nil
}

// ref: bnet.protocol.invitation.Invitation
type Invitation struct {
	Id                uint64                                  `protobuf:"fixed64,1,opt,name=id" json:"id,omitempty"`
	InviterIdentity   *bnet_protocol.Identity                 `protobuf:"bytes,2,opt,name=inviter_identity,json=inviterIdentity" json:"inviter_identity,omitempty"`
	InviteeIdentity   *bnet_protocol.Identity                 `protobuf:"bytes,3,opt,name=invitee_identity,json=inviteeIdentity" json:"invitee_identity,omitempty"`
	InviterName       string                                  `protobuf:"bytes,4,opt,name=inviter_name,json=inviterName" json:"inviter_name,omitempty"`
	InviteeName       string                                  `protobuf:"bytes,5,opt,name=invitee_name,json=inviteeName" json:"invitee_name,omitempty"`
	InvitationMessage string                                  `protobuf:"bytes,6,opt,name=invitation_message,json=invitationMessage" json:"invitation_message,omitempty"`
	CreationTime      uint64                                  `protobuf:"varint,7,opt,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	ExpirationTime    uint64                                  `protobuf:"varint,8,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
	FriendInvite      *bnet_protocol_friends.FriendInvitation `protobuf:"bytes,103,opt,name=friend_invite,json=friendInvite" json:"friend_invite,omitempty"`
	ChannelInvitation *ChannelInvitation                      `protobuf:"bytes,105,opt,name=channel_invitation,json=channelInvitation" json:"channel_invitation,omitempty"`
}

func (m *Invitation) Reset()                    { *m = Invitation{} }
func (m *Invitation) String() string            { return proto.CompactTextString(m) }
func (*Invitation) ProtoMessage()               {}
func (*Invitation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Invitation) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Invitation) GetInviterIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.InviterIdentity
	}
	return nil
}

func (m *Invitation) GetInviteeIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.InviteeIdentity
	}
	return nil
}

func (m *Invitation) GetInviterName() string {
	if m != nil {
		return m.InviterName
	}
	return ""
}

func (m *Invitation) GetInviteeName() string {
	if m != nil {
		return m.InviteeName
	}
	return ""
}

func (m *Invitation) GetInvitationMessage() string {
	if m != nil {
		return m.InvitationMessage
	}
	return ""
}

func (m *Invitation) GetCreationTime() uint64 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func (m *Invitation) GetExpirationTime() uint64 {
	if m != nil {
		return m.ExpirationTime
	}
	return 0
}

func (m *Invitation) GetFriendInvite() *bnet_protocol_friends.FriendInvitation {
	if m != nil {
		return m.FriendInvite
	}
	return nil
}

func (m *Invitation) GetChannelInvitation() *ChannelInvitation {
	if m != nil {
		return m.ChannelInvitation
	}
	return nil
}

// ref: bnet.protocol.friends.InvitationNotification
type InvitationNotification struct {
	Invitation    *Invitation             `protobuf:"bytes,1,opt,name=invitation" json:"invitation,omitempty"`
	GameAccountId *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
	Reason        uint32                  `protobuf:"varint,3,opt,name=reason" json:"reason,omitempty"`
}

func (m *InvitationNotification) Reset()                    { *m = InvitationNotification{} }
func (m *InvitationNotification) String() string            { return proto.CompactTextString(m) }
func (*InvitationNotification) ProtoMessage()               {}
func (*InvitationNotification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *InvitationNotification) GetInvitation() *Invitation {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *InvitationNotification) GetGameAccountId() *bnet_protocol.EntityId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

func (m *InvitationNotification) GetReason() uint32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

// ref: bnet.protocol.friends.SubscribeToFriendsResponse
type SubscribeToFriendsResponse struct {
	MaxFriends             uint32                          `protobuf:"varint,1,opt,name=max_friends,json=maxFriends" json:"max_friends,omitempty"`
	MaxReceivedInvitations uint32                          `protobuf:"varint,2,opt,name=max_received_invitations,json=maxReceivedInvitations" json:"max_received_invitations,omitempty"`
	MaxSentInvitations     uint32                          `protobuf:"varint,3,opt,name=max_sent_invitations,json=maxSentInvitations" json:"max_sent_invitations,omitempty"`
	Role                   []*bnet_protocol.Role           `protobuf:"bytes,4,rep,name=role" json:"role,omitempty"`
	Friends                []*bnet_protocol_friends.Friend `protobuf:"bytes,5,rep,name=friends" json:"friends,omitempty"`
	SentInvitations        []*Invitation                   `protobuf:"bytes,6,rep,name=sent_invitations,json=sentInvitations" json:"sent_invitations,omitempty"`
	ReceivedInvitations    []*Invitation                   `protobuf:"bytes,7,rep,name=received_invitations,json=receivedInvitations" json:"received_invitations,omitempty"`
}

func (m *SubscribeToFriendsResponse) Reset()                    { *m = SubscribeToFriendsResponse{} }
func (m *SubscribeToFriendsResponse) String() string            { return proto.CompactTextString(m) }
func (*SubscribeToFriendsResponse) ProtoMessage()               {}
func (*SubscribeToFriendsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SubscribeToFriendsResponse) GetMaxFriends() uint32 {
	if m != nil {
		return m.MaxFriends
	}
	return 0
}

func (m *SubscribeToFriendsResponse) GetMaxReceivedInvitations() uint32 {
	if m != nil {
		return m.MaxReceivedInvitations
	}
	return 0
}

func (m *SubscribeToFriendsResponse) GetMaxSentInvitations() uint32 {
	if m != nil {
		return m.MaxSentInvitations
	}
	return 0
}

func (m *SubscribeToFriendsResponse) GetRole() []*bnet_protocol.Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *SubscribeToFriendsResponse) GetFriends() []*bnet_protocol_friends.Friend {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *SubscribeToFriendsResponse) GetSentInvitations() []*Invitation {
	if m != nil {
		return m.SentInvitations
	}
	return nil
}

func (m *SubscribeToFriendsResponse) GetReceivedInvitations() []*Invitation {
	if m != nil {
		return m.ReceivedInvitations
	}
	return nil
}

func init() {
	proto.RegisterType((*ChannelDescription)(nil), "bnet.protocol.channel_extracted.ChannelDescription")
	proto.RegisterType((*ChannelInvitation)(nil), "bnet.protocol.channel_extracted.ChannelInvitation")
	proto.RegisterType((*ChannelState)(nil), "bnet.protocol.channel_extracted.ChannelState")
	proto.RegisterType((*Invitation)(nil), "bnet.protocol.channel_extracted.Invitation")
	proto.RegisterType((*InvitationNotification)(nil), "bnet.protocol.channel_extracted.InvitationNotification")
	proto.RegisterType((*SubscribeToFriendsResponse)(nil), "bnet.protocol.channel_extracted.SubscribeToFriendsResponse")
	proto.RegisterEnum("bnet.protocol.channel_extracted.ChannelState_PrivacyLevel", ChannelState_PrivacyLevel_name, ChannelState_PrivacyLevel_value)
}

func init() {
	proto.RegisterFile("bnet/protocol/channel_extracted/channel_extracted.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1058 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xee, 0xda, 0x4e, 0xec, 0x1c, 0xdb, 0x89, 0x3b, 0x49, 0xc3, 0x12, 0x11, 0xd5, 0x71, 0x41,
	0xb5, 0x54, 0xea, 0x22, 0x17, 0x01, 0x2a, 0x17, 0xe0, 0x26, 0xae, 0xb4, 0xc2, 0xb5, 0xa3, 0x8d,
	0x89, 0x04, 0x37, 0xab, 0xf5, 0xee, 0x49, 0x18, 0xe4, 0xfd, 0xd1, 0xee, 0xc4, 0x38, 0x6f, 0xc0,
	0x23, 0xf0, 0x18, 0x5c, 0x73, 0xc1, 0x33, 0x20, 0xf1, 0x42, 0x68, 0xfe, 0x76, 0xd7, 0x36, 0x4a,
	0xd3, 0xde, 0x78, 0x77, 0xce, 0xf9, 0xbe, 0xb3, 0x33, 0xdf, 0x9c, 0x1f, 0xc3, 0xd7, 0xb3, 0x10,
	0xd9, 0x8b, 0x38, 0x89, 0x58, 0xe4, 0x45, 0xf3, 0x17, 0xde, 0x2f, 0x6e, 0x18, 0xe2, 0xdc, 0xc1,
	0x25, 0x4b, 0x5c, 0x8f, 0xa1, 0xbf, 0x69, 0xe9, 0x09, 0x30, 0x79, 0xcc, 0x89, 0x3d, 0x4d, 0xec,
	0x6d, 0xc0, 0x8e, 0x8e, 0x37, 0x22, 0x33, 0xf1, 0x23, 0x39, 0x47, 0x4f, 0x56, 0xdd, 0x57, 0x09,
	0xc5, 0xd0, 0x4f, 0xf5, 0x53, 0x81, 0x3e, 0x5b, 0x05, 0xc5, 0x09, 0xa6, 0x18, 0x7a, 0x98, 0xbd,
	0x28, 0xd8, 0x27, 0xeb, 0x30, 0xb5, 0x29, 0xf1, 0xd2, 0xf9, 0xcb, 0x00, 0x72, 0x2a, 0xb7, 0x77,
	0x86, 0xa9, 0x97, 0xd0, 0x98, 0xd1, 0x28, 0x24, 0x5f, 0x01, 0xe8, 0x4d, 0x53, 0xdf, 0x34, 0xda,
	0x46, 0xb7, 0xde, 0xff, 0xa8, 0xb7, 0x7a, 0xaa, 0x61, 0xc8, 0x28, 0xbb, 0xb5, 0x7c, 0x7b, 0x47,
	0x41, 0x2d, 0x9f, 0x3c, 0x85, 0x3d, 0xef, 0x26, 0x49, 0x30, 0x64, 0x4e, 0x80, 0xc1, 0x0c, 0x93,
	0xd4, 0x2c, 0xb5, 0x8d, 0x6e, 0xd3, 0xde, 0x55, 0xe6, 0xb7, 0xd2, 0x4a, 0x4e, 0x61, 0x2b, 0x65,
	0x2e, 0x43, 0xb3, 0x2c, 0x62, 0x3f, 0xef, 0xbd, 0x43, 0xb1, 0x9e, 0xda, 0xe4, 0x05, 0x27, 0xd9,
	0x92, 0xdb, 0xf9, 0xc7, 0x80, 0x87, 0xca, 0x6e, 0x85, 0x0b, 0xca, 0x5c, 0xb1, 0x77, 0x1f, 0xf6,
	0x35, 0xdd, 0xcf, 0x8f, 0xa4, 0x0e, 0xf1, 0xf2, 0xbe, 0x1f, 0x2a, 0xa8, 0x61, 0x13, 0x6f, 0x53,
	0xa1, 0x23, 0xa8, 0x71, 0x9d, 0x93, 0x05, 0xfa, 0xe2, 0x88, 0x35, 0x3b, 0x5b, 0x93, 0x43, 0xd8,
	0x4e, 0xf0, 0xd7, 0x88, 0x86, 0xe2, 0x74, 0x35, 0x5b, 0xad, 0xc8, 0x09, 0x34, 0x38, 0x82, 0x7a,
	0xe8, 0xb0, 0xdb, 0x18, 0xcd, 0x8a, 0x90, 0xa6, 0xae, 0x6c, 0xd3, 0xdb, 0x18, 0x3b, 0xbf, 0x57,
	0xa1, 0x51, 0x3c, 0x2a, 0x79, 0x0c, 0xf5, 0xc0, 0x5d, 0x66, 0x6a, 0x1a, 0x82, 0x02, 0x81, 0xbb,
	0xd4, 0x4a, 0x72, 0x00, 0x0d, 0xd7, 0xe4, 0x86, 0x80, 0x86, 0x1a, 0xf0, 0x0a, 0x76, 0x5c, 0xc6,
	0x12, 0x3a, 0xbb, 0x11, 0x72, 0x97, 0xbb, 0xf5, 0xbe, 0xb9, 0xa6, 0xc2, 0x40, 0xfb, 0x5f, 0x97,
	0x5a, 0x0f, 0xec, 0x1c, 0x4e, 0x26, 0x00, 0x34, 0x53, 0xd6, 0xac, 0x08, 0xf2, 0xb3, 0x77, 0x4a,
	0x98, 0x5f, 0x86, 0x88, 0x57, 0x08, 0xc1, 0x13, 0x84, 0x1f, 0x27, 0xb7, 0xa4, 0xe6, 0x96, 0x4c,
	0x90, 0xc0, 0x5d, 0xe6, 0xbc, 0x54, 0x6a, 0xe8, 0xa6, 0x51, 0x68, 0x6e, 0x0b, 0xbf, 0x5a, 0x11,
	0x07, 0x9a, 0x71, 0x42, 0x17, 0xae, 0x77, 0xeb, 0xcc, 0x71, 0x81, 0x73, 0xb3, 0xda, 0x36, 0xba,
	0xbb, 0xfd, 0x57, 0xef, 0x95, 0x40, 0xbd, 0x73, 0x19, 0x62, 0xc4, 0x23, 0xd8, 0x8d, 0xb8, 0xb0,
	0x22, 0x04, 0x2a, 0xa1, 0x1b, 0xa0, 0x59, 0x6b, 0x1b, 0xdd, 0x1d, 0x5b, 0xbc, 0x93, 0x27, 0xd0,
	0xf4, 0x71, 0x8e, 0xd7, 0x2e, 0x43, 0x47, 0x38, 0x77, 0x84, 0xb3, 0xa1, 0x8d, 0x63, 0x0e, 0x3a,
	0x81, 0x86, 0xfe, 0xaa, 0xb8, 0x5d, 0x10, 0x98, 0xba, 0xb2, 0xf1, 0xdb, 0x25, 0x26, 0x54, 0xe3,
	0x24, 0xba, 0x4e, 0xdc, 0xc0, 0xac, 0xb7, 0x8d, 0x6e, 0xd5, 0xd6, 0x4b, 0xd2, 0x87, 0x47, 0xee,
	0x7c, 0x1e, 0xfd, 0xe6, 0x44, 0x57, 0x57, 0x73, 0x1a, 0x62, 0x76, 0x9f, 0x0d, 0x91, 0x41, 0xfb,
	0xc2, 0x39, 0x91, 0x3e, 0x7d, 0xb1, 0x7d, 0x78, 0x94, 0xde, 0xcc, 0x78, 0x4a, 0xce, 0xd0, 0x61,
	0x91, 0xa3, 0x0b, 0xdf, 0x6c, 0x4a, 0x4e, 0xe6, 0x9c, 0x46, 0xe7, 0xca, 0x45, 0xbe, 0x84, 0x0a,
	0xef, 0x33, 0xa6, 0x2f, 0xaa, 0xa1, 0xbd, 0xa9, 0x1a, 0x5b, 0xad, 0x34, 0x81, 0x26, 0xdf, 0x43,
	0x2d, 0x0b, 0x8e, 0x82, 0xf9, 0xe9, 0x1a, 0x33, 0x6b, 0x3a, 0x2b, 0xec, 0x8c, 0xd5, 0xf9, 0xd3,
	0x80, 0x46, 0x51, 0x74, 0x72, 0x0c, 0x1f, 0x9f, 0xdb, 0xd6, 0xe5, 0xe0, 0xf4, 0xa7, 0xd1, 0xf0,
	0x72, 0x38, 0x72, 0x06, 0x3f, 0x4e, 0x27, 0x8e, 0x35, 0xbe, 0x1c, 0x8c, 0xac, 0xb3, 0xd6, 0x03,
	0x72, 0x08, 0x44, 0xb9, 0x1d, 0xe9, 0x9f, 0x9c, 0x0f, 0xc7, 0x2d, 0x83, 0x7c, 0x0e, 0xdd, 0x4d,
	0x3b, 0xe7, 0x59, 0xd3, 0xc1, 0xd4, 0x9a, 0x8c, 0x9d, 0xc1, 0xf8, 0xcc, 0x79, 0x63, 0x5b, 0xc3,
	0xf1, 0x59, 0xab, 0x44, 0x4e, 0xe0, 0xf8, 0x4e, 0x74, 0xab, 0x4c, 0x4c, 0x38, 0x58, 0x85, 0x9c,
	0x8e, 0x26, 0x17, 0xc3, 0xb3, 0x56, 0xa5, 0xf3, 0x47, 0x05, 0xa0, 0xd0, 0x56, 0x76, 0xa1, 0xa4,
	0x5a, 0xe1, 0xb6, 0x5d, 0xa2, 0x3e, 0x79, 0x0d, 0x2d, 0x91, 0xc5, 0x98, 0x38, 0xd4, 0x47, 0xd1,
	0x0b, 0x45, 0xf1, 0x6d, 0x36, 0x4a, 0x4b, 0xb9, 0xed, 0x3d, 0x45, 0xd0, 0x86, 0x3c, 0x06, 0xe6,
	0x31, 0xca, 0xf7, 0x8a, 0x81, 0x59, 0x8c, 0x13, 0x68, 0xe8, 0x7d, 0x88, 0xd4, 0xac, 0xc8, 0xb4,
	0x53, 0x36, 0x9d, 0x99, 0xfa, 0x33, 0x02, 0xb2, 0x55, 0x84, 0xc8, 0xe4, 0x7d, 0x0e, 0x24, 0xaf,
	0x49, 0x27, 0xc0, 0x34, 0x75, 0xaf, 0x51, 0x94, 0xde, 0x8e, 0xfd, 0x30, 0xf7, 0xbc, 0x95, 0x0e,
	0x5e, 0x10, 0x5e, 0x82, 0x12, 0xcc, 0x68, 0x80, 0xa2, 0x0a, 0x2b, 0x76, 0x43, 0x1b, 0xa7, 0x34,
	0x40, 0x5e, 0xeb, 0xb8, 0x8c, 0x69, 0x52, 0x80, 0xd5, 0x04, 0x6c, 0x37, 0x37, 0x0b, 0xe0, 0x08,
	0x9a, 0x72, 0xb4, 0xc9, 0xbe, 0x80, 0xe6, 0xb5, 0xd0, 0xe0, 0xe9, 0x9a, 0x06, 0x7a, 0xfc, 0xbd,
	0x11, 0xcf, 0xfc, 0x6a, 0xec, 0xc6, 0x55, 0x6e, 0x41, 0xe2, 0x02, 0xc9, 0x66, 0x57, 0xde, 0xbb,
	0xa8, 0x08, 0xd9, 0xbf, 0x6f, 0x9b, 0x28, 0x44, 0x7f, 0xe8, 0xad, 0x9b, 0x3a, 0x7f, 0x1b, 0x70,
	0x98, 0x2f, 0xc7, 0x11, 0xa3, 0x57, 0xd4, 0x93, 0x69, 0xf2, 0xc3, 0x4a, 0xc7, 0x94, 0x43, 0xe7,
	0x7d, 0x3a, 0xe6, 0x4a, 0xb7, 0xfc, 0x0e, 0xf6, 0xae, 0xdd, 0x00, 0x1d, 0xd7, 0xf3, 0xa2, 0x9b,
	0x90, 0xf1, 0x59, 0x5c, 0xba, 0x7b, 0x16, 0x37, 0x39, 0x7e, 0x20, 0xe1, 0x96, 0x5f, 0xe8, 0xa2,
	0xe5, 0x62, 0x17, 0xed, 0xfc, 0x5b, 0x86, 0xa3, 0x8b, 0xbc, 0x3d, 0x48, 0x45, 0x53, 0x1b, 0xd3,
	0x38, 0x0a, 0xd3, 0x6c, 0xe8, 0x28, 0xc1, 0x0b, 0x43, 0x47, 0x01, 0xc9, 0x37, 0x60, 0x72, 0x40,
	0x82, 0x1e, 0xd2, 0x05, 0xfa, 0x2b, 0xfd, 0x5c, 0x4e, 0xa0, 0xc3, 0xc0, 0x5d, 0xda, 0xca, 0x5d,
	0xec, 0xeb, 0x5f, 0xc0, 0x01, 0x67, 0xa6, 0xfc, 0x2f, 0x42, 0x91, 0x25, 0xf7, 0x47, 0x02, 0x77,
	0x79, 0x81, 0x21, 0x2b, 0x32, 0x9e, 0x41, 0x25, 0x89, 0xe6, 0xa8, 0xa6, 0xcf, 0xfe, 0xda, 0xc9,
	0xed, 0x68, 0x2e, 0xa7, 0x96, 0x00, 0x91, 0x6f, 0xa1, 0xaa, 0x77, 0xbd, 0x25, 0xf0, 0xc7, 0x77,
	0x26, 0x91, 0x60, 0x6a, 0x06, 0xf9, 0x19, 0x5a, 0x1b, 0xfb, 0xda, 0xfe, 0xb0, 0x99, 0xb7, 0x97,
	0xae, 0x9d, 0x62, 0x06, 0x07, 0xff, 0xab, 0x56, 0xf5, 0xc3, 0xe2, 0xef, 0x27, 0x9b, 0xda, 0xce,
	0xb6, 0x05, 0xff, 0xe5, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8f, 0xb2, 0x47, 0x22, 0xb8, 0x0a,
	0x00, 0x00,
}
