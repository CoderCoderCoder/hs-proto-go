// Code generated by protoc-gen-go.
// source: bnet/protocol/presence/presence.proto
// DO NOT EDIT!

/*
Package bnet_protocol_presence is a generated protocol buffer package.

It is generated from these files:
	bnet/protocol/presence/presence.proto

It has these top-level messages:
	ChannelState
	Field
	FieldKey
	FieldOperation
	OwnershipRequest
	QueryRequest
	QueryResponse
	RichPresence
	SubscribeNotificationRequest
	SubscribeRequest
	UnsubscribeRequest
	UpdateRequest
*/
package bnet_protocol_presence

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bnet_protocol "bnet/protocol"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ref: bnet.protocol.presence.FieldOperation/Types/OperationType
type FieldOperation_OperationType int32

const (
	FieldOperation_SET   FieldOperation_OperationType = 0
	FieldOperation_CLEAR FieldOperation_OperationType = 1
)

var FieldOperation_OperationType_name = map[int32]string{
	0: "SET",
	1: "CLEAR",
}
var FieldOperation_OperationType_value = map[string]int32{
	"SET":   0,
	"CLEAR": 1,
}

func (x FieldOperation_OperationType) String() string {
	return proto.EnumName(FieldOperation_OperationType_name, int32(x))
}
func (FieldOperation_OperationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

// ref: bnet.protocol.presence.ChannelState
type ChannelState struct {
	EntityId       *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	FieldOperation []*FieldOperation       `protobuf:"bytes,2,rep,name=field_operation,json=fieldOperation" json:"field_operation,omitempty"`
	Healing        bool                    `protobuf:"varint,3,opt,name=healing" json:"healing,omitempty"`
}

func (m *ChannelState) Reset()                    { *m = ChannelState{} }
func (m *ChannelState) String() string            { return proto.CompactTextString(m) }
func (*ChannelState) ProtoMessage()               {}
func (*ChannelState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ChannelState) GetEntityId() *bnet_protocol.EntityId {
	if m != nil {
		return m.EntityId
	}
	return nil
}

func (m *ChannelState) GetFieldOperation() []*FieldOperation {
	if m != nil {
		return m.FieldOperation
	}
	return nil
}

func (m *ChannelState) GetHealing() bool {
	if m != nil {
		return m.Healing
	}
	return false
}

// ref: bnet.protocol.presence.Field
type Field struct {
	Key   *FieldKey              `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *bnet_protocol.Variant `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Field) Reset()                    { *m = Field{} }
func (m *Field) String() string            { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()               {}
func (*Field) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Field) GetKey() *FieldKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Field) GetValue() *bnet_protocol.Variant {
	if m != nil {
		return m.Value
	}
	return nil
}

// ref: bnet.protocol.presence.FieldKey
type FieldKey struct {
	Program uint32 `protobuf:"varint,1,opt,name=program" json:"program,omitempty"`
	Group   uint32 `protobuf:"varint,2,opt,name=group" json:"group,omitempty"`
	Field   uint32 `protobuf:"varint,3,opt,name=field" json:"field,omitempty"`
	Index   uint64 `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
}

func (m *FieldKey) Reset()                    { *m = FieldKey{} }
func (m *FieldKey) String() string            { return proto.CompactTextString(m) }
func (*FieldKey) ProtoMessage()               {}
func (*FieldKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FieldKey) GetProgram() uint32 {
	if m != nil {
		return m.Program
	}
	return 0
}

func (m *FieldKey) GetGroup() uint32 {
	if m != nil {
		return m.Group
	}
	return 0
}

func (m *FieldKey) GetField() uint32 {
	if m != nil {
		return m.Field
	}
	return 0
}

func (m *FieldKey) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

// ref: bnet.protocol.presence.FieldOperation
type FieldOperation struct {
	Field     *Field                       `protobuf:"bytes,1,opt,name=field" json:"field,omitempty"`
	Operation FieldOperation_OperationType `protobuf:"varint,2,opt,name=operation,enum=bnet.protocol.presence.FieldOperation_OperationType" json:"operation,omitempty"`
}

func (m *FieldOperation) Reset()                    { *m = FieldOperation{} }
func (m *FieldOperation) String() string            { return proto.CompactTextString(m) }
func (*FieldOperation) ProtoMessage()               {}
func (*FieldOperation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *FieldOperation) GetField() *Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *FieldOperation) GetOperation() FieldOperation_OperationType {
	if m != nil {
		return m.Operation
	}
	return FieldOperation_SET
}

// ref: bnet.protocol.presence.OwnershipRequest
type OwnershipRequest struct {
	EntityId         *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	ReleaseOwnership bool                    `protobuf:"varint,2,opt,name=release_ownership,json=releaseOwnership" json:"release_ownership,omitempty"`
}

func (m *OwnershipRequest) Reset()                    { *m = OwnershipRequest{} }
func (m *OwnershipRequest) String() string            { return proto.CompactTextString(m) }
func (*OwnershipRequest) ProtoMessage()               {}
func (*OwnershipRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *OwnershipRequest) GetEntityId() *bnet_protocol.EntityId {
	if m != nil {
		return m.EntityId
	}
	return nil
}

func (m *OwnershipRequest) GetReleaseOwnership() bool {
	if m != nil {
		return m.ReleaseOwnership
	}
	return false
}

// ref: bnet.protocol.presence.QueryRequest
type QueryRequest struct {
	EntityId *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Key      []*FieldKey             `protobuf:"bytes,2,rep,name=key" json:"key,omitempty"`
}

func (m *QueryRequest) Reset()                    { *m = QueryRequest{} }
func (m *QueryRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()               {}
func (*QueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *QueryRequest) GetEntityId() *bnet_protocol.EntityId {
	if m != nil {
		return m.EntityId
	}
	return nil
}

func (m *QueryRequest) GetKey() []*FieldKey {
	if m != nil {
		return m.Key
	}
	return nil
}

// ref: bnet.protocol.presence.QueryResponse
type QueryResponse struct {
	Field []*Field `protobuf:"bytes,2,rep,name=field" json:"field,omitempty"`
}

func (m *QueryResponse) Reset()                    { *m = QueryResponse{} }
func (m *QueryResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()               {}
func (*QueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *QueryResponse) GetField() []*Field {
	if m != nil {
		return m.Field
	}
	return nil
}

// ref: bnet.protocol.presence.RichPresence
type RichPresence struct {
	ProgramId uint32 `protobuf:"fixed32,1,opt,name=program_id,json=programId" json:"program_id,omitempty"`
	StreamId  uint32 `protobuf:"fixed32,2,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	Index     uint32 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
}

func (m *RichPresence) Reset()                    { *m = RichPresence{} }
func (m *RichPresence) String() string            { return proto.CompactTextString(m) }
func (*RichPresence) ProtoMessage()               {}
func (*RichPresence) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RichPresence) GetProgramId() uint32 {
	if m != nil {
		return m.ProgramId
	}
	return 0
}

func (m *RichPresence) GetStreamId() uint32 {
	if m != nil {
		return m.StreamId
	}
	return 0
}

func (m *RichPresence) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

// ref: bnet.protocol.presence.SubscribeNotificationRequest
type SubscribeNotificationRequest struct {
	EntityId *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
}

func (m *SubscribeNotificationRequest) Reset()                    { *m = SubscribeNotificationRequest{} }
func (m *SubscribeNotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*SubscribeNotificationRequest) ProtoMessage()               {}
func (*SubscribeNotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *SubscribeNotificationRequest) GetEntityId() *bnet_protocol.EntityId {
	if m != nil {
		return m.EntityId
	}
	return nil
}

// ref: bnet.protocol.presence.SubscribeRequest
type SubscribeRequest struct {
	AgentId   *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	EntityId  *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	ObjectId  uint64                  `protobuf:"varint,3,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	ProgramId []uint32                `protobuf:"fixed32,4,rep,name=program_id,json=programId" json:"program_id,omitempty"`
}

func (m *SubscribeRequest) Reset()                    { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string            { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()               {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *SubscribeRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *SubscribeRequest) GetEntityId() *bnet_protocol.EntityId {
	if m != nil {
		return m.EntityId
	}
	return nil
}

func (m *SubscribeRequest) GetObjectId() uint64 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *SubscribeRequest) GetProgramId() []uint32 {
	if m != nil {
		return m.ProgramId
	}
	return nil
}

// ref: bnet.protocol.presence.UnsubscribeRequest
type UnsubscribeRequest struct {
	AgentId  *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	EntityId *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
}

func (m *UnsubscribeRequest) Reset()                    { *m = UnsubscribeRequest{} }
func (m *UnsubscribeRequest) String() string            { return proto.CompactTextString(m) }
func (*UnsubscribeRequest) ProtoMessage()               {}
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *UnsubscribeRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *UnsubscribeRequest) GetEntityId() *bnet_protocol.EntityId {
	if m != nil {
		return m.EntityId
	}
	return nil
}

// ref: bnet.protocol.presence.UpdateRequest
type UpdateRequest struct {
	EntityId       *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	FieldOperation []*FieldOperation       `protobuf:"bytes,2,rep,name=field_operation,json=fieldOperation" json:"field_operation,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *UpdateRequest) GetEntityId() *bnet_protocol.EntityId {
	if m != nil {
		return m.EntityId
	}
	return nil
}

func (m *UpdateRequest) GetFieldOperation() []*FieldOperation {
	if m != nil {
		return m.FieldOperation
	}
	return nil
}

func init() {
	proto.RegisterType((*ChannelState)(nil), "bnet.protocol.presence.ChannelState")
	proto.RegisterType((*Field)(nil), "bnet.protocol.presence.Field")
	proto.RegisterType((*FieldKey)(nil), "bnet.protocol.presence.FieldKey")
	proto.RegisterType((*FieldOperation)(nil), "bnet.protocol.presence.FieldOperation")
	proto.RegisterType((*OwnershipRequest)(nil), "bnet.protocol.presence.OwnershipRequest")
	proto.RegisterType((*QueryRequest)(nil), "bnet.protocol.presence.QueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "bnet.protocol.presence.QueryResponse")
	proto.RegisterType((*RichPresence)(nil), "bnet.protocol.presence.RichPresence")
	proto.RegisterType((*SubscribeNotificationRequest)(nil), "bnet.protocol.presence.SubscribeNotificationRequest")
	proto.RegisterType((*SubscribeRequest)(nil), "bnet.protocol.presence.SubscribeRequest")
	proto.RegisterType((*UnsubscribeRequest)(nil), "bnet.protocol.presence.UnsubscribeRequest")
	proto.RegisterType((*UpdateRequest)(nil), "bnet.protocol.presence.UpdateRequest")
	proto.RegisterEnum("bnet.protocol.presence.FieldOperation_OperationType", FieldOperation_OperationType_name, FieldOperation_OperationType_value)
}

func init() { proto.RegisterFile("bnet/protocol/presence/presence.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 587 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x54, 0x5f, 0x6b, 0x13, 0x41,
	0x10, 0xef, 0x25, 0x8d, 0xb9, 0x4c, 0x9b, 0x1a, 0x17, 0xa9, 0xc1, 0xb6, 0x10, 0x57, 0x94, 0x80,
	0x72, 0x85, 0xb4, 0xe8, 0xb3, 0x96, 0x8a, 0x41, 0xb1, 0xba, 0x69, 0x7d, 0xad, 0x97, 0xbb, 0x49,
	0xb2, 0x7a, 0xee, 0x9e, 0x7b, 0x7b, 0x6a, 0x40, 0xfc, 0x20, 0x7e, 0x0d, 0x5f, 0xc5, 0xcf, 0x26,
	0xb7, 0x7b, 0x9b, 0xf6, 0x8a, 0xd4, 0x62, 0x11, 0xdf, 0x76, 0x66, 0x7e, 0xf3, 0x9b, 0x7f, 0xbf,
	0x3b, 0xb8, 0x33, 0x16, 0xa8, 0xb7, 0x53, 0x25, 0xb5, 0x8c, 0x64, 0xb2, 0x9d, 0x2a, 0xcc, 0x50,
	0x44, 0xb8, 0x78, 0x04, 0x26, 0x44, 0xd6, 0x0b, 0x58, 0xe0, 0x60, 0x81, 0x8b, 0xde, 0xdc, 0x3c,
	0x9b, 0xbe, 0x00, 0x48, 0x2d, 0xe9, 0x77, 0x0f, 0x56, 0xf7, 0x66, 0xa1, 0x10, 0x98, 0x8c, 0x74,
	0xa8, 0x91, 0xec, 0x42, 0x0b, 0x85, 0xe6, 0x7a, 0x7e, 0xcc, 0xe3, 0xae, 0xd7, 0xf3, 0xfa, 0x2b,
	0x83, 0x1b, 0x41, 0x95, 0x7a, 0xdf, 0xc4, 0x87, 0x31, 0xf3, 0xb1, 0x7c, 0x91, 0x11, 0x5c, 0x9d,
	0x70, 0x4c, 0xe2, 0x63, 0x99, 0xa2, 0x0a, 0x35, 0x97, 0xa2, 0x5b, 0xeb, 0xd5, 0xfb, 0x2b, 0x83,
	0xbb, 0xc1, 0xef, 0xdb, 0x0a, 0x9e, 0x14, 0xf0, 0x03, 0x87, 0x7e, 0x5c, 0xeb, 0x2c, 0xb1, 0xb5,
	0x49, 0xc5, 0x47, 0xba, 0xd0, 0x9c, 0x61, 0x98, 0x70, 0x31, 0xed, 0xd6, 0x7b, 0x5e, 0xdf, 0x67,
	0xce, 0xa4, 0x1c, 0x1a, 0x26, 0x9f, 0x0c, 0xa0, 0xfe, 0x0e, 0xe7, 0x65, 0x9f, 0xbd, 0x73, 0x6b,
	0x3d, 0xc3, 0x39, 0x2b, 0xc0, 0xe4, 0x3e, 0x34, 0x3e, 0x86, 0x49, 0x8e, 0xdd, 0x9a, 0xc9, 0x5a,
	0x3f, 0x93, 0xf5, 0x3a, 0x54, 0x3c, 0x14, 0x9a, 0x59, 0x10, 0x9d, 0x80, 0xef, 0xd2, 0x8b, 0x86,
	0x52, 0x25, 0xa7, 0x2a, 0x7c, 0x6f, 0x2a, 0xb6, 0x99, 0x33, 0xc9, 0x75, 0x68, 0x4c, 0x95, 0xcc,
	0x53, 0xc3, 0xd9, 0x66, 0xd6, 0x28, 0xbc, 0x66, 0x24, 0xd3, 0x7e, 0x9b, 0x59, 0xa3, 0xf0, 0x72,
	0x11, 0xe3, 0xe7, 0xee, 0x72, 0xcf, 0xeb, 0x2f, 0x33, 0x6b, 0xd0, 0x9f, 0x1e, 0xac, 0x55, 0x77,
	0x42, 0x76, 0x5c, 0xba, 0x1d, 0x6f, 0xeb, 0xdc, 0xf1, 0x1c, 0x3b, 0x83, 0xd6, 0xe9, 0x1b, 0x78,
	0xfd, 0xb5, 0xc1, 0xee, 0xc5, 0x6e, 0x10, 0x2c, 0x5e, 0x87, 0xf3, 0x14, 0xd9, 0x09, 0x0d, 0xbd,
	0x0d, 0xed, 0x4a, 0x8c, 0x34, 0xa1, 0x3e, 0xda, 0x3f, 0xec, 0x2c, 0x91, 0x16, 0x34, 0xf6, 0x9e,
	0xef, 0x3f, 0x62, 0x1d, 0x8f, 0xe6, 0xd0, 0x39, 0xf8, 0x24, 0x50, 0x65, 0x33, 0x9e, 0x32, 0xfc,
	0x90, 0x63, 0xa6, 0xff, 0x52, 0x4c, 0xf7, 0xe0, 0x9a, 0xc2, 0x04, 0xc3, 0x0c, 0x8f, 0xa5, 0x63,
	0x34, 0xa3, 0xf8, 0xac, 0x53, 0x06, 0x16, 0x95, 0xe8, 0x17, 0x58, 0x7d, 0x95, 0xa3, 0x9a, 0x5f,
	0xae, 0xe4, 0x03, 0xab, 0x23, 0xab, 0xd9, 0x3f, 0xea, 0xc8, 0xa8, 0xb5, 0x48, 0xa0, 0x4f, 0xa1,
	0x5d, 0x56, 0xcf, 0x52, 0x29, 0x32, 0x24, 0x0f, 0xdd, 0xcd, 0x2c, 0xd5, 0xf9, 0x37, 0x33, 0x3c,
	0x16, 0x4f, 0xdf, 0xc0, 0x2a, 0xe3, 0xd1, 0xec, 0x65, 0x09, 0x20, 0x5b, 0x00, 0xa5, 0xb8, 0xdc,
	0x20, 0x4d, 0xd6, 0x2a, 0x3d, 0xc3, 0x98, 0x6c, 0x40, 0x2b, 0xd3, 0x0a, 0x6d, 0xb4, 0x66, 0xa2,
	0xbe, 0x75, 0x0c, 0x4f, 0x29, 0xac, 0xd4, 0x9d, 0x55, 0xd8, 0x21, 0x6c, 0x8e, 0xf2, 0x71, 0x16,
	0x29, 0x3e, 0xc6, 0x17, 0x52, 0xf3, 0x09, 0x8f, 0xcc, 0x45, 0x2f, 0xb5, 0x39, 0xfa, 0xc3, 0x83,
	0xce, 0x82, 0xd6, 0x51, 0x0d, 0xc0, 0x0f, 0xa7, 0x28, 0xf4, 0x05, 0x98, 0x9a, 0x06, 0x38, 0x8c,
	0xab, 0xe5, 0x6b, 0x17, 0x3d, 0xdc, 0x06, 0xb4, 0xe4, 0xf8, 0x2d, 0x46, 0xa6, 0x54, 0xdd, 0x7c,
	0x50, 0xbe, 0x75, 0x0c, 0x63, 0x72, 0xab, 0xb2, 0xc3, 0xe5, 0x5e, 0xbd, 0xdf, 0x34, 0x2b, 0x3f,
	0xd9, 0x23, 0xfd, 0x0a, 0xe4, 0x48, 0x64, 0xff, 0xad, 0x7f, 0xfa, 0xcd, 0x83, 0xf6, 0x51, 0x1a,
	0x87, 0x1a, 0x2f, 0x27, 0xe0, 0x7f, 0xf1, 0x03, 0x1e, 0x5f, 0x31, 0x59, 0x3b, 0xbf, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x3e, 0x9e, 0x0d, 0xdd, 0x82, 0x06, 0x00, 0x00,
}
