// Code generated by protoc-gen-go.
// source: github.com/HearthSim/hs-proto-go/bnet/challenge_service/challenge_service.proto
// DO NOT EDIT!

/*
Package challenge_service is a generated protocol buffer package.

It is generated from these files:
	github.com/HearthSim/hs-proto-go/bnet/challenge_service/challenge_service.proto

It has these top-level messages:
	Challenge
	ChallengePickedRequest
	ChallengePickedResponse
	ChallengeAnsweredRequest
	ChallengeAnsweredResponse
	ChallengeCancelledRequest
	SendChallengeToUserRequest
	SendChallengeToUserResponse
	ChallengeUserRequest
	ChallengeResultRequest
	ChallengeExternalRequest
	ChallengeExternalResult
*/
package challenge_service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import attribute "github.com/HearthSim/hs-proto-go/bnet/attribute"
import entity "github.com/HearthSim/hs-proto-go/bnet/entity"
import rpc "github.com/HearthSim/hs-proto-go/bnet/rpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Challenge struct {
	Type             *uint32 `protobuf:"fixed32,1,req,name=type" json:"type,omitempty"`
	Info             *string `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	Answer           *string `protobuf:"bytes,3,opt,name=answer" json:"answer,omitempty"`
	Retries          *uint32 `protobuf:"varint,4,opt,name=retries" json:"retries,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Challenge) Reset()                    { *m = Challenge{} }
func (m *Challenge) String() string            { return proto.CompactTextString(m) }
func (*Challenge) ProtoMessage()               {}
func (*Challenge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Challenge) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Challenge) GetInfo() string {
	if m != nil && m.Info != nil {
		return *m.Info
	}
	return ""
}

func (m *Challenge) GetAnswer() string {
	if m != nil && m.Answer != nil {
		return *m.Answer
	}
	return ""
}

func (m *Challenge) GetRetries() uint32 {
	if m != nil && m.Retries != nil {
		return *m.Retries
	}
	return 0
}

type ChallengePickedRequest struct {
	Challenge            *uint32 `protobuf:"fixed32,1,req,name=challenge" json:"challenge,omitempty"`
	Id                   *uint32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	NewChallengeProtocol *bool   `protobuf:"varint,3,opt,name=new_challenge_protocol,json=newChallengeProtocol,def=0" json:"new_challenge_protocol,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *ChallengePickedRequest) Reset()                    { *m = ChallengePickedRequest{} }
func (m *ChallengePickedRequest) String() string            { return proto.CompactTextString(m) }
func (*ChallengePickedRequest) ProtoMessage()               {}
func (*ChallengePickedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

const Default_ChallengePickedRequest_NewChallengeProtocol bool = false

func (m *ChallengePickedRequest) GetChallenge() uint32 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *ChallengePickedRequest) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChallengePickedRequest) GetNewChallengeProtocol() bool {
	if m != nil && m.NewChallengeProtocol != nil {
		return *m.NewChallengeProtocol
	}
	return Default_ChallengePickedRequest_NewChallengeProtocol
}

type ChallengePickedResponse struct {
	Data             []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ChallengePickedResponse) Reset()                    { *m = ChallengePickedResponse{} }
func (m *ChallengePickedResponse) String() string            { return proto.CompactTextString(m) }
func (*ChallengePickedResponse) ProtoMessage()               {}
func (*ChallengePickedResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ChallengePickedResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ChallengeAnsweredRequest struct {
	Answer           *string `protobuf:"bytes,1,req,name=answer" json:"answer,omitempty"`
	Data             []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Id               *uint32 `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChallengeAnsweredRequest) Reset()                    { *m = ChallengeAnsweredRequest{} }
func (m *ChallengeAnsweredRequest) String() string            { return proto.CompactTextString(m) }
func (*ChallengeAnsweredRequest) ProtoMessage()               {}
func (*ChallengeAnsweredRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ChallengeAnsweredRequest) GetAnswer() string {
	if m != nil && m.Answer != nil {
		return *m.Answer
	}
	return ""
}

func (m *ChallengeAnsweredRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ChallengeAnsweredRequest) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type ChallengeAnsweredResponse struct {
	Data             []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	DoRetry          *bool  `protobuf:"varint,2,opt,name=do_retry,json=doRetry" json:"do_retry,omitempty"`
	RecordNotFound   *bool  `protobuf:"varint,3,opt,name=record_not_found,json=recordNotFound" json:"record_not_found,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ChallengeAnsweredResponse) Reset()                    { *m = ChallengeAnsweredResponse{} }
func (m *ChallengeAnsweredResponse) String() string            { return proto.CompactTextString(m) }
func (*ChallengeAnsweredResponse) ProtoMessage()               {}
func (*ChallengeAnsweredResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ChallengeAnsweredResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ChallengeAnsweredResponse) GetDoRetry() bool {
	if m != nil && m.DoRetry != nil {
		return *m.DoRetry
	}
	return false
}

func (m *ChallengeAnsweredResponse) GetRecordNotFound() bool {
	if m != nil && m.RecordNotFound != nil {
		return *m.RecordNotFound
	}
	return false
}

type ChallengeCancelledRequest struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChallengeCancelledRequest) Reset()                    { *m = ChallengeCancelledRequest{} }
func (m *ChallengeCancelledRequest) String() string            { return proto.CompactTextString(m) }
func (*ChallengeCancelledRequest) ProtoMessage()               {}
func (*ChallengeCancelledRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ChallengeCancelledRequest) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type SendChallengeToUserRequest struct {
	PeerId           *rpc.ProcessId         `protobuf:"bytes,1,opt,name=peer_id,json=peerId" json:"peer_id,omitempty"`
	GameAccountId    *entity.EntityId       `protobuf:"bytes,2,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
	Challenges       []*Challenge           `protobuf:"bytes,3,rep,name=challenges" json:"challenges,omitempty"`
	Context          *uint32                `protobuf:"fixed32,4,req,name=context" json:"context,omitempty"`
	Timeout          *uint64                `protobuf:"varint,5,opt,name=timeout" json:"timeout,omitempty"`
	Attributes       []*attribute.Attribute `protobuf:"bytes,6,rep,name=attributes" json:"attributes,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *SendChallengeToUserRequest) Reset()                    { *m = SendChallengeToUserRequest{} }
func (m *SendChallengeToUserRequest) String() string            { return proto.CompactTextString(m) }
func (*SendChallengeToUserRequest) ProtoMessage()               {}
func (*SendChallengeToUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SendChallengeToUserRequest) GetPeerId() *rpc.ProcessId {
	if m != nil {
		return m.PeerId
	}
	return nil
}

func (m *SendChallengeToUserRequest) GetGameAccountId() *entity.EntityId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

func (m *SendChallengeToUserRequest) GetChallenges() []*Challenge {
	if m != nil {
		return m.Challenges
	}
	return nil
}

func (m *SendChallengeToUserRequest) GetContext() uint32 {
	if m != nil && m.Context != nil {
		return *m.Context
	}
	return 0
}

func (m *SendChallengeToUserRequest) GetTimeout() uint64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

func (m *SendChallengeToUserRequest) GetAttributes() []*attribute.Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type SendChallengeToUserResponse struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SendChallengeToUserResponse) Reset()                    { *m = SendChallengeToUserResponse{} }
func (m *SendChallengeToUserResponse) String() string            { return proto.CompactTextString(m) }
func (*SendChallengeToUserResponse) ProtoMessage()               {}
func (*SendChallengeToUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SendChallengeToUserResponse) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type ChallengeUserRequest struct {
	Challenges       []*Challenge           `protobuf:"bytes,1,rep,name=challenges" json:"challenges,omitempty"`
	Context          *uint32                `protobuf:"fixed32,2,req,name=context" json:"context,omitempty"`
	Id               *uint32                `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Deadline         *uint64                `protobuf:"varint,4,opt,name=deadline" json:"deadline,omitempty"`
	Attributes       []*attribute.Attribute `protobuf:"bytes,5,rep,name=attributes" json:"attributes,omitempty"`
	GameAccountId    *entity.EntityId       `protobuf:"bytes,6,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ChallengeUserRequest) Reset()                    { *m = ChallengeUserRequest{} }
func (m *ChallengeUserRequest) String() string            { return proto.CompactTextString(m) }
func (*ChallengeUserRequest) ProtoMessage()               {}
func (*ChallengeUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ChallengeUserRequest) GetChallenges() []*Challenge {
	if m != nil {
		return m.Challenges
	}
	return nil
}

func (m *ChallengeUserRequest) GetContext() uint32 {
	if m != nil && m.Context != nil {
		return *m.Context
	}
	return 0
}

func (m *ChallengeUserRequest) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChallengeUserRequest) GetDeadline() uint64 {
	if m != nil && m.Deadline != nil {
		return *m.Deadline
	}
	return 0
}

func (m *ChallengeUserRequest) GetAttributes() []*attribute.Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *ChallengeUserRequest) GetGameAccountId() *entity.EntityId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

type ChallengeResultRequest struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type             *uint32 `protobuf:"fixed32,2,opt,name=type" json:"type,omitempty"`
	ErrorId          *uint32 `protobuf:"varint,3,opt,name=error_id,json=errorId" json:"error_id,omitempty"`
	Answer           []byte  `protobuf:"bytes,4,opt,name=answer" json:"answer,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChallengeResultRequest) Reset()                    { *m = ChallengeResultRequest{} }
func (m *ChallengeResultRequest) String() string            { return proto.CompactTextString(m) }
func (*ChallengeResultRequest) ProtoMessage()               {}
func (*ChallengeResultRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ChallengeResultRequest) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChallengeResultRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *ChallengeResultRequest) GetErrorId() uint32 {
	if m != nil && m.ErrorId != nil {
		return *m.ErrorId
	}
	return 0
}

func (m *ChallengeResultRequest) GetAnswer() []byte {
	if m != nil {
		return m.Answer
	}
	return nil
}

type ChallengeExternalRequest struct {
	RequestToken     *string `protobuf:"bytes,1,opt,name=request_token,json=requestToken" json:"request_token,omitempty"`
	PayloadType      *string `protobuf:"bytes,2,opt,name=payload_type,json=payloadType" json:"payload_type,omitempty"`
	Payload          []byte  `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChallengeExternalRequest) Reset()                    { *m = ChallengeExternalRequest{} }
func (m *ChallengeExternalRequest) String() string            { return proto.CompactTextString(m) }
func (*ChallengeExternalRequest) ProtoMessage()               {}
func (*ChallengeExternalRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ChallengeExternalRequest) GetRequestToken() string {
	if m != nil && m.RequestToken != nil {
		return *m.RequestToken
	}
	return ""
}

func (m *ChallengeExternalRequest) GetPayloadType() string {
	if m != nil && m.PayloadType != nil {
		return *m.PayloadType
	}
	return ""
}

func (m *ChallengeExternalRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type ChallengeExternalResult struct {
	RequestToken     *string `protobuf:"bytes,1,opt,name=request_token,json=requestToken" json:"request_token,omitempty"`
	Passed           *bool   `protobuf:"varint,2,opt,name=passed,def=1" json:"passed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChallengeExternalResult) Reset()                    { *m = ChallengeExternalResult{} }
func (m *ChallengeExternalResult) String() string            { return proto.CompactTextString(m) }
func (*ChallengeExternalResult) ProtoMessage()               {}
func (*ChallengeExternalResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

const Default_ChallengeExternalResult_Passed bool = true

func (m *ChallengeExternalResult) GetRequestToken() string {
	if m != nil && m.RequestToken != nil {
		return *m.RequestToken
	}
	return ""
}

func (m *ChallengeExternalResult) GetPassed() bool {
	if m != nil && m.Passed != nil {
		return *m.Passed
	}
	return Default_ChallengeExternalResult_Passed
}

func init() {
	proto.RegisterType((*Challenge)(nil), "challenge_service.Challenge")
	proto.RegisterType((*ChallengePickedRequest)(nil), "challenge_service.ChallengePickedRequest")
	proto.RegisterType((*ChallengePickedResponse)(nil), "challenge_service.ChallengePickedResponse")
	proto.RegisterType((*ChallengeAnsweredRequest)(nil), "challenge_service.ChallengeAnsweredRequest")
	proto.RegisterType((*ChallengeAnsweredResponse)(nil), "challenge_service.ChallengeAnsweredResponse")
	proto.RegisterType((*ChallengeCancelledRequest)(nil), "challenge_service.ChallengeCancelledRequest")
	proto.RegisterType((*SendChallengeToUserRequest)(nil), "challenge_service.SendChallengeToUserRequest")
	proto.RegisterType((*SendChallengeToUserResponse)(nil), "challenge_service.SendChallengeToUserResponse")
	proto.RegisterType((*ChallengeUserRequest)(nil), "challenge_service.ChallengeUserRequest")
	proto.RegisterType((*ChallengeResultRequest)(nil), "challenge_service.ChallengeResultRequest")
	proto.RegisterType((*ChallengeExternalRequest)(nil), "challenge_service.ChallengeExternalRequest")
	proto.RegisterType((*ChallengeExternalResult)(nil), "challenge_service.ChallengeExternalResult")
}

func init() {
	proto.RegisterFile("github.com/HearthSim/hs-proto-go/bnet/challenge_service/challenge_service.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 737 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x54, 0x4b, 0x6b, 0x23, 0x47,
	0x10, 0x66, 0x46, 0xb2, 0x1e, 0x25, 0xc9, 0x8f, 0xc6, 0x38, 0x63, 0xc5, 0x07, 0x65, 0x72, 0x88,
	0x20, 0x48, 0x02, 0x25, 0x87, 0xc4, 0x09, 0x04, 0x63, 0x1c, 0xa2, 0x8b, 0x63, 0xda, 0x4e, 0x4e,
	0x0b, 0xc3, 0x78, 0xba, 0x24, 0x0d, 0x1e, 0x75, 0x6b, 0xbb, 0x7b, 0xd6, 0x16, 0xec, 0x6d, 0x6f,
	0xfb, 0x47, 0xf6, 0x6f, 0x2e, 0xd3, 0xf3, 0xb4, 0x65, 0x83, 0xd8, 0xc3, 0x30, 0x55, 0xd5, 0x55,
	0xf5, 0xd5, 0x57, 0x5d, 0xd5, 0xf0, 0xef, 0x22, 0xd4, 0xcb, 0xf8, 0x7e, 0x1c, 0x88, 0xd5, 0xe4,
	0x1f, 0xf4, 0xa5, 0x5e, 0xde, 0x86, 0xab, 0xc9, 0x52, 0x8d, 0xd6, 0x52, 0x68, 0x31, 0x5a, 0x88,
	0xc9, 0x3d, 0x47, 0x3d, 0x09, 0x96, 0x7e, 0x14, 0x21, 0x5f, 0xa0, 0xa7, 0x50, 0x7e, 0x08, 0x03,
	0xdc, 0xb6, 0x8c, 0x4d, 0x04, 0x39, 0xda, 0x3a, 0xe8, 0xff, 0xb5, 0x1b, 0x86, 0xaf, 0xb5, 0x0c,
	0xef, 0x63, 0x8d, 0xa5, 0x94, 0xe6, 0xec, 0xff, 0xbe, 0x5b, 0x02, 0xe4, 0x3a, 0xd4, 0x9b, 0xec,
	0x97, 0x85, 0xfe, 0xb2, 0x5b, 0xa8, 0x5c, 0x07, 0xc9, 0x97, 0x06, 0xb9, 0x08, 0xed, 0xcb, 0x9c,
	0x05, 0x21, 0x50, 0xd7, 0x9b, 0x35, 0x3a, 0xd6, 0xc0, 0x1e, 0x36, 0xa9, 0x91, 0x13, 0x5b, 0xc8,
	0xe7, 0xc2, 0xb1, 0x07, 0xd6, 0xb0, 0x4d, 0x8d, 0x4c, 0x4e, 0xa0, 0xe1, 0x73, 0xf5, 0x88, 0xd2,
	0xa9, 0x19, 0x6b, 0xa6, 0x11, 0x07, 0x9a, 0x12, 0xb5, 0x0c, 0x51, 0x39, 0xf5, 0x81, 0x35, 0xec,
	0xd1, 0x5c, 0x75, 0x3f, 0x59, 0x70, 0x52, 0xe0, 0xdc, 0x84, 0xc1, 0x03, 0x32, 0x8a, 0xef, 0x63,
	0x54, 0x9a, 0x9c, 0x41, 0xbb, 0xe8, 0x63, 0x86, 0x5c, 0x1a, 0xc8, 0x3e, 0xd8, 0x21, 0x33, 0xe0,
	0x3d, 0x6a, 0x87, 0x8c, 0xfc, 0x01, 0x27, 0x1c, 0x1f, 0xbd, 0xb2, 0xf3, 0x86, 0x46, 0x20, 0x22,
	0x53, 0x4a, 0xeb, 0x7c, 0x6f, 0xee, 0x47, 0x0a, 0xe9, 0x31, 0xc7, 0xc7, 0x12, 0x2f, 0x73, 0x71,
	0x47, 0xf0, 0xdd, 0x56, 0x11, 0x6a, 0x2d, 0xb8, 0x32, 0x34, 0x99, 0xaf, 0x7d, 0xc7, 0x1a, 0x58,
	0xc3, 0x2e, 0x35, 0xb2, 0xfb, 0x3f, 0x38, 0x85, 0xfb, 0x85, 0x61, 0x58, 0x56, 0x5d, 0xb6, 0x20,
	0x29, 0xb9, 0x6c, 0x41, 0x9e, 0xc7, 0x2e, 0xf3, 0x64, 0x1c, 0x6a, 0x39, 0x07, 0x57, 0xc3, 0xe9,
	0x2b, 0x79, 0xdf, 0x2e, 0x84, 0x9c, 0x42, 0x8b, 0x09, 0x2f, 0xe9, 0xe5, 0xc6, 0x24, 0x6e, 0xd1,
	0x26, 0x13, 0x34, 0x51, 0xc9, 0x10, 0x0e, 0x25, 0x06, 0x42, 0x32, 0x8f, 0x0b, 0xed, 0xcd, 0x45,
	0xcc, 0x53, 0xa4, 0x16, 0xdd, 0x4f, 0xed, 0xd7, 0x42, 0xff, 0x9d, 0x58, 0xdd, 0x9f, 0x2b, 0xa8,
	0x97, 0x3e, 0x0f, 0x30, 0x8a, 0x4a, 0x3a, 0x69, 0x89, 0x56, 0x51, 0xe2, 0x17, 0x1b, 0xfa, 0xb7,
	0xc8, 0x59, 0x11, 0x71, 0x27, 0xfe, 0x53, 0x28, 0x73, 0xf7, 0x9f, 0xa0, 0xb9, 0x46, 0x94, 0x5e,
	0x16, 0xd3, 0x99, 0xee, 0x8f, 0x93, 0x91, 0xba, 0x91, 0x22, 0x40, 0xa5, 0x66, 0x8c, 0x36, 0x92,
	0xe3, 0x19, 0x23, 0xbf, 0xc1, 0xc1, 0xc2, 0x5f, 0xa1, 0xe7, 0x07, 0x81, 0x88, 0xb9, 0xf6, 0xb2,
	0xbb, 0xec, 0x4c, 0x0f, 0xc7, 0xd9, 0xec, 0x5e, 0x99, 0xdf, 0x8c, 0xd1, 0x5e, 0xe2, 0x78, 0x91,
	0xfa, 0xcd, 0x18, 0xf9, 0x13, 0xa0, 0xb8, 0x64, 0xe5, 0xd4, 0x06, 0xb5, 0x61, 0x67, 0x7a, 0x36,
	0xde, 0x5e, 0xc5, 0xa2, 0x42, 0x5a, 0xf1, 0x4f, 0x26, 0x31, 0x10, 0x5c, 0xe3, 0x93, 0x76, 0xea,
	0x66, 0xa4, 0x72, 0x35, 0x39, 0xd1, 0xe1, 0x0a, 0x45, 0xac, 0x9d, 0xbd, 0x81, 0x35, 0xac, 0xd3,
	0x5c, 0x25, 0xbf, 0x02, 0x14, 0xdb, 0xa8, 0x9c, 0x86, 0x41, 0x3c, 0x1e, 0x97, 0x0b, 0x7a, 0x91,
	0x4b, 0xb4, 0xe2, 0xe7, 0x8e, 0xe0, 0xfb, 0x57, 0x1b, 0x95, 0x5d, 0xe7, 0xcb, 0xc6, 0x7e, 0xb6,
	0xe1, 0xb8, 0xf0, 0xad, 0xb6, 0xf4, 0x39, 0x5f, 0xeb, 0xdb, 0xf9, 0xda, 0xcf, 0xf9, 0xbe, 0x18,
	0x3e, 0xd2, 0x87, 0x16, 0x43, 0x9f, 0x45, 0x21, 0x47, 0xb3, 0xa4, 0x75, 0x5a, 0xe8, 0x2f, 0x3a,
	0xb0, 0xb7, 0x5b, 0x07, 0x5e, 0xbb, 0xe3, 0xc6, 0x4e, 0x77, 0xec, 0x8a, 0xca, 0xa3, 0x40, 0x51,
	0xc5, 0x91, 0x7e, 0x63, 0x1e, 0x8b, 0x97, 0x29, 0x19, 0x9e, 0xfc, 0x65, 0x3a, 0x85, 0x16, 0x4a,
	0x29, 0xcc, 0x14, 0xa6, 0xfc, 0x9a, 0x46, 0x9f, 0xb1, 0xca, 0x76, 0xd6, 0xcd, 0x1a, 0x65, 0x9a,
	0xfb, 0xb1, 0xb2, 0xd1, 0x57, 0x4f, 0x1a, 0x25, 0xf7, 0xa3, 0x1c, 0xf2, 0x47, 0xe8, 0xc9, 0x54,
	0xf4, 0xb4, 0x78, 0x40, 0x6e, 0xd0, 0xdb, 0xb4, 0x9b, 0x19, 0xef, 0x12, 0x1b, 0xf9, 0x01, 0xba,
	0x6b, 0x7f, 0x13, 0x09, 0x9f, 0x79, 0x45, 0x3d, 0x6d, 0xda, 0xc9, 0x6c, 0x77, 0x49, 0x59, 0x0e,
	0x34, 0x33, 0xd5, 0x54, 0xd5, 0xa5, 0xb9, 0xea, 0xbe, 0xab, 0x3c, 0x3f, 0x25, 0x7a, 0x42, 0x7b,
	0x37, 0xf0, 0x33, 0x68, 0xac, 0x7d, 0xa5, 0x30, 0xdd, 0xa1, 0xd6, 0x79, 0x5d, 0xcb, 0x18, 0x69,
	0x66, 0x9b, 0x1e, 0xc1, 0x41, 0x91, 0xfd, 0x5a, 0xe8, 0x70, 0xbe, 0x99, 0x12, 0x38, 0x2c, 0x4c,
	0xb7, 0xe9, 0xfc, 0x7c, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x82, 0x1b, 0x29, 0xde, 0x06, 0x07, 0x00,
	0x00,
}
