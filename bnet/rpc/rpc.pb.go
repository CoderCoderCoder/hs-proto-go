// Code generated by protoc-gen-go.
// source: github.com/HearthSim/hs-proto-go/bnet/rpc/rpc.proto
// DO NOT EDIT!

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	github.com/HearthSim/hs-proto-go/bnet/rpc/rpc.proto

It has these top-level messages:
	NORESPONSE
	Address
	ProcessId
	ObjectAddress
	NoData
	ErrorInfo
	Header
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type NORESPONSE struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *NORESPONSE) Reset()                    { *m = NORESPONSE{} }
func (m *NORESPONSE) String() string            { return proto.CompactTextString(m) }
func (*NORESPONSE) ProtoMessage()               {}
func (*NORESPONSE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Address struct {
	Address          *string `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	Port             *uint32 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Address) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *Address) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

type ProcessId struct {
	Label            *uint32 `protobuf:"varint,1,req,name=label" json:"label,omitempty"`
	Epoch            *uint32 `protobuf:"varint,2,req,name=epoch" json:"epoch,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProcessId) Reset()                    { *m = ProcessId{} }
func (m *ProcessId) String() string            { return proto.CompactTextString(m) }
func (*ProcessId) ProtoMessage()               {}
func (*ProcessId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProcessId) GetLabel() uint32 {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return 0
}

func (m *ProcessId) GetEpoch() uint32 {
	if m != nil && m.Epoch != nil {
		return *m.Epoch
	}
	return 0
}

type ObjectAddress struct {
	Host             *ProcessId `protobuf:"bytes,1,req,name=host" json:"host,omitempty"`
	ObjectId         *uint64    `protobuf:"varint,2,opt,name=object_id,def=0" json:"object_id,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *ObjectAddress) Reset()                    { *m = ObjectAddress{} }
func (m *ObjectAddress) String() string            { return proto.CompactTextString(m) }
func (*ObjectAddress) ProtoMessage()               {}
func (*ObjectAddress) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

const Default_ObjectAddress_ObjectId uint64 = 0

func (m *ObjectAddress) GetHost() *ProcessId {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *ObjectAddress) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return Default_ObjectAddress_ObjectId
}

type NoData struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *NoData) Reset()                    { *m = NoData{} }
func (m *NoData) String() string            { return proto.CompactTextString(m) }
func (*NoData) ProtoMessage()               {}
func (*NoData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ErrorInfo struct {
	ObjectAddress    *ObjectAddress `protobuf:"bytes,1,req,name=object_address" json:"object_address,omitempty"`
	Status           *uint32        `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	ServiceHash      *uint32        `protobuf:"varint,3,req,name=service_hash" json:"service_hash,omitempty"`
	MethodId         *uint32        `protobuf:"varint,4,req,name=method_id" json:"method_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ErrorInfo) Reset()                    { *m = ErrorInfo{} }
func (m *ErrorInfo) String() string            { return proto.CompactTextString(m) }
func (*ErrorInfo) ProtoMessage()               {}
func (*ErrorInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ErrorInfo) GetObjectAddress() *ObjectAddress {
	if m != nil {
		return m.ObjectAddress
	}
	return nil
}

func (m *ErrorInfo) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *ErrorInfo) GetServiceHash() uint32 {
	if m != nil && m.ServiceHash != nil {
		return *m.ServiceHash
	}
	return 0
}

func (m *ErrorInfo) GetMethodId() uint32 {
	if m != nil && m.MethodId != nil {
		return *m.MethodId
	}
	return 0
}

type Header struct {
	ServiceId        *uint32      `protobuf:"varint,1,req,name=service_id" json:"service_id,omitempty"`
	MethodId         *uint32      `protobuf:"varint,2,opt,name=method_id" json:"method_id,omitempty"`
	Token            *uint32      `protobuf:"varint,3,req,name=token" json:"token,omitempty"`
	ObjectId         *uint64      `protobuf:"varint,4,opt,name=object_id,def=0" json:"object_id,omitempty"`
	Size             *uint32      `protobuf:"varint,5,opt,name=size,def=0" json:"size,omitempty"`
	Status           *uint32      `protobuf:"varint,6,opt,name=status,def=0" json:"status,omitempty"`
	Error            []*ErrorInfo `protobuf:"bytes,7,rep,name=error" json:"error,omitempty"`
	Timeout          *uint64      `protobuf:"varint,8,opt,name=timeout" json:"timeout,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

const Default_Header_ObjectId uint64 = 0
const Default_Header_Size uint32 = 0
const Default_Header_Status uint32 = 0

func (m *Header) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *Header) GetMethodId() uint32 {
	if m != nil && m.MethodId != nil {
		return *m.MethodId
	}
	return 0
}

func (m *Header) GetToken() uint32 {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return 0
}

func (m *Header) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return Default_Header_ObjectId
}

func (m *Header) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return Default_Header_Size
}

func (m *Header) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_Header_Status
}

func (m *Header) GetError() []*ErrorInfo {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Header) GetTimeout() uint64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

func init() {
	proto.RegisterType((*NORESPONSE)(nil), "rpc.NORESPONSE")
	proto.RegisterType((*Address)(nil), "rpc.Address")
	proto.RegisterType((*ProcessId)(nil), "rpc.ProcessId")
	proto.RegisterType((*ObjectAddress)(nil), "rpc.ObjectAddress")
	proto.RegisterType((*NoData)(nil), "rpc.NoData")
	proto.RegisterType((*ErrorInfo)(nil), "rpc.ErrorInfo")
	proto.RegisterType((*Header)(nil), "rpc.Header")
}

var fileDescriptor0 = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x51, 0xcb, 0x4e, 0xf2, 0x40,
	0x14, 0x4e, 0xa1, 0x14, 0x7a, 0xa0, 0xfc, 0x61, 0xf2, 0x2f, 0xba, 0xd0, 0x84, 0x74, 0x85, 0x26,
	0x50, 0x83, 0x3b, 0x77, 0x46, 0x49, 0x64, 0x03, 0x44, 0x1e, 0x80, 0xf4, 0x32, 0x32, 0x55, 0xca,
	0x69, 0x66, 0x0e, 0x2e, 0x7c, 0x22, 0x1f, 0xd3, 0x99, 0xe1, 0x26, 0x71, 0xd1, 0x64, 0xe6, 0xcc,
	0x77, 0xbe, 0x5b, 0xe1, 0x7e, 0x5d, 0x90, 0xd8, 0xa5, 0xa3, 0x0c, 0xcb, 0xf8, 0x85, 0x27, 0x92,
	0xc4, 0xb2, 0x28, 0x63, 0xa1, 0x86, 0x95, 0x44, 0xc2, 0xe1, 0x1a, 0xe3, 0x74, 0xcb, 0x29, 0x96,
	0x55, 0x66, 0xbe, 0x91, 0x9d, 0xb2, 0xba, 0x3e, 0x46, 0x1d, 0x80, 0xd9, 0xfc, 0x75, 0xb2, 0x5c,
	0xcc, 0x67, 0xcb, 0x49, 0x34, 0x80, 0xe6, 0x63, 0x9e, 0x4b, 0xae, 0x14, 0xfb, 0x07, 0xcd, 0x64,
	0x7f, 0x0c, 0x9d, 0x7e, 0x6d, 0xe0, 0xb3, 0x0e, 0xb8, 0x15, 0x4a, 0x0a, 0x6b, 0x7d, 0x67, 0x10,
	0x44, 0x37, 0xe0, 0x2f, 0x24, 0x66, 0xfa, 0x79, 0x9a, 0xb3, 0x00, 0x1a, 0x9b, 0x24, 0xe5, 0x1b,
	0x8b, 0x0c, 0xcc, 0x95, 0x57, 0x98, 0x09, 0x0d, 0xd5, 0xd7, 0xe8, 0x09, 0x82, 0x79, 0xfa, 0xce,
	0x33, 0x3a, 0x52, 0x5f, 0x81, 0x2b, 0x50, 0x91, 0x45, 0xb7, 0xc7, 0xdd, 0x91, 0xb1, 0x74, 0x26,
	0xfb, 0x0f, 0x3e, 0x5a, 0xf8, 0xaa, 0xc8, 0xad, 0x98, 0xfb, 0xe0, 0xdc, 0x45, 0x2d, 0xf0, 0x66,
	0xf8, 0x9c, 0x50, 0x12, 0x55, 0xe0, 0x4f, 0xa4, 0x44, 0x39, 0xdd, 0xbe, 0x21, 0xbb, 0x85, 0xee,
	0x01, 0xfc, 0xdb, 0x6c, 0x7b, 0xcc, 0x2c, 0xe9, 0xa5, 0x6c, 0x17, 0x3c, 0x45, 0x09, 0xed, 0xd4,
	0xde, 0x97, 0x16, 0xea, 0x28, 0x2e, 0x3f, 0x8b, 0x8c, 0xaf, 0x44, 0xa2, 0x44, 0x58, 0xb7, 0xd3,
	0x1e, 0xf8, 0x25, 0x27, 0x81, 0xb9, 0x91, 0x77, 0x6d, 0x80, 0x6f, 0x07, 0x3c, 0xdd, 0x6a, 0xce,
	0x25, 0x63, 0x00, 0xc7, 0x1d, 0xfd, 0xec, 0xfc, 0xdd, 0xb0, 0xed, 0x98, 0x06, 0x08, 0x3f, 0xf8,
	0xf6, 0xc0, 0x79, 0x11, 0xc9, 0x3d, 0x44, 0xd2, 0x0d, 0xbb, 0xaa, 0xf8, 0xe2, 0x61, 0xc3, 0xac,
	0x98, 0x41, 0xef, 0x64, 0xd0, 0x3b, 0x8e, 0xae, 0x75, 0x95, 0x26, 0x6c, 0xd8, 0xec, 0xd7, 0x4f,
	0x5d, 0x9d, 0xe3, 0xeb, 0x9f, 0x44, 0x45, 0xc9, 0x71, 0x47, 0x61, 0xcb, 0xd0, 0xfe, 0x04, 0x00,
	0x00, 0xff, 0xff, 0xb0, 0x83, 0xbd, 0xaa, 0x09, 0x02, 0x00, 0x00,
}
