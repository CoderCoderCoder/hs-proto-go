// Code generated by protoc-gen-go.
// source: pegasus/spectator/spectator.proto
// DO NOT EDIT!

/*
Package pegasus_spectator is a generated protocol buffer package.

It is generated from these files:
	pegasus/spectator/spectator.proto

It has these top-level messages:
	Invite
	JoinInfo
	PartyQuestInfo
	PartyServerInfo
*/
package pegasus_spectator

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import pegasus_pegasusshared "github.com/HearthSim/hs-proto-go/pegasus/pegasusshared"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Invite struct {
	InviterGameAccountId *pegasus_pegasusshared.BnetId `protobuf:"bytes,1,req,name=inviter_game_account_id,json=inviterGameAccountId" json:"inviter_game_account_id,omitempty"`
	JoinInfo             *JoinInfo                     `protobuf:"bytes,2,req,name=join_info,json=joinInfo" json:"join_info,omitempty"`
	XXX_unrecognized     []byte                        `json:"-"`
}

func (m *Invite) Reset()                    { *m = Invite{} }
func (m *Invite) String() string            { return proto.CompactTextString(m) }
func (*Invite) ProtoMessage()               {}
func (*Invite) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Invite) GetInviterGameAccountId() *pegasus_pegasusshared.BnetId {
	if m != nil {
		return m.InviterGameAccountId
	}
	return nil
}

func (m *Invite) GetJoinInfo() *JoinInfo {
	if m != nil {
		return m.JoinInfo
	}
	return nil
}

type JoinInfo struct {
	ServerIpAddress      *string                           `protobuf:"bytes,1,opt,name=server_ip_address,json=serverIpAddress" json:"server_ip_address,omitempty"`
	ServerPort           *uint32                           `protobuf:"varint,2,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	GameHandle           *int32                            `protobuf:"varint,3,opt,name=game_handle,json=gameHandle" json:"game_handle,omitempty"`
	SecretKey            *string                           `protobuf:"bytes,4,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	IsJoinable           *bool                             `protobuf:"varint,5,opt,name=is_joinable,json=isJoinable" json:"is_joinable,omitempty"`
	CurrentNumSpectators *int32                            `protobuf:"varint,6,opt,name=current_num_spectators,json=currentNumSpectators" json:"current_num_spectators,omitempty"`
	MaxNumSpectators     *int32                            `protobuf:"varint,7,opt,name=max_num_spectators,json=maxNumSpectators" json:"max_num_spectators,omitempty"`
	GameType             *pegasus_pegasusshared.GameType   `protobuf:"varint,8,opt,name=game_type,json=gameType,enum=pegasus.pegasusshared.GameType,def=0" json:"game_type,omitempty"`
	MissionId            *int32                            `protobuf:"varint,9,opt,name=mission_id,json=missionId" json:"mission_id,omitempty"`
	SpectatedPlayers     []*pegasus_pegasusshared.BnetId   `protobuf:"bytes,10,rep,name=spectated_players,json=spectatedPlayers" json:"spectated_players,omitempty"`
	PartyId              *pegasus_pegasusshared.BnetId     `protobuf:"bytes,11,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	FormatType           *pegasus_pegasusshared.FormatType `protobuf:"varint,12,opt,name=format_type,json=formatType,enum=pegasus.pegasusshared.FormatType,def=0" json:"format_type,omitempty"`
	XXX_unrecognized     []byte                            `json:"-"`
}

func (m *JoinInfo) Reset()                    { *m = JoinInfo{} }
func (m *JoinInfo) String() string            { return proto.CompactTextString(m) }
func (*JoinInfo) ProtoMessage()               {}
func (*JoinInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

const Default_JoinInfo_GameType pegasus_pegasusshared.GameType = pegasus_pegasusshared.GameType_GT_UNKNOWN
const Default_JoinInfo_FormatType pegasus_pegasusshared.FormatType = pegasus_pegasusshared.FormatType_FT_UNKNOWN

func (m *JoinInfo) GetServerIpAddress() string {
	if m != nil && m.ServerIpAddress != nil {
		return *m.ServerIpAddress
	}
	return ""
}

func (m *JoinInfo) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *JoinInfo) GetGameHandle() int32 {
	if m != nil && m.GameHandle != nil {
		return *m.GameHandle
	}
	return 0
}

func (m *JoinInfo) GetSecretKey() string {
	if m != nil && m.SecretKey != nil {
		return *m.SecretKey
	}
	return ""
}

func (m *JoinInfo) GetIsJoinable() bool {
	if m != nil && m.IsJoinable != nil {
		return *m.IsJoinable
	}
	return false
}

func (m *JoinInfo) GetCurrentNumSpectators() int32 {
	if m != nil && m.CurrentNumSpectators != nil {
		return *m.CurrentNumSpectators
	}
	return 0
}

func (m *JoinInfo) GetMaxNumSpectators() int32 {
	if m != nil && m.MaxNumSpectators != nil {
		return *m.MaxNumSpectators
	}
	return 0
}

func (m *JoinInfo) GetGameType() pegasus_pegasusshared.GameType {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return Default_JoinInfo_GameType
}

func (m *JoinInfo) GetMissionId() int32 {
	if m != nil && m.MissionId != nil {
		return *m.MissionId
	}
	return 0
}

func (m *JoinInfo) GetSpectatedPlayers() []*pegasus_pegasusshared.BnetId {
	if m != nil {
		return m.SpectatedPlayers
	}
	return nil
}

func (m *JoinInfo) GetPartyId() *pegasus_pegasusshared.BnetId {
	if m != nil {
		return m.PartyId
	}
	return nil
}

func (m *JoinInfo) GetFormatType() pegasus_pegasusshared.FormatType {
	if m != nil && m.FormatType != nil {
		return *m.FormatType
	}
	return Default_JoinInfo_FormatType
}

type PartyQuestInfo struct {
	QuestIds         []int32 `protobuf:"varint,1,rep,name=quest_ids,json=questIds" json:"quest_ids,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PartyQuestInfo) Reset()                    { *m = PartyQuestInfo{} }
func (m *PartyQuestInfo) String() string            { return proto.CompactTextString(m) }
func (*PartyQuestInfo) ProtoMessage()               {}
func (*PartyQuestInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PartyQuestInfo) GetQuestIds() []int32 {
	if m != nil {
		return m.QuestIds
	}
	return nil
}

type PartyServerInfo struct {
	ServerIpAddress  *string                           `protobuf:"bytes,1,opt,name=server_ip_address,json=serverIpAddress" json:"server_ip_address,omitempty"`
	ServerPort       *uint32                           `protobuf:"varint,2,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	GameHandle       *int32                            `protobuf:"varint,3,opt,name=game_handle,json=gameHandle" json:"game_handle,omitempty"`
	SecretKey        *string                           `protobuf:"bytes,4,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	GameType         *pegasus_pegasusshared.GameType   `protobuf:"varint,5,opt,name=game_type,json=gameType,enum=pegasus.pegasusshared.GameType,def=0" json:"game_type,omitempty"`
	MissionId        *int32                            `protobuf:"varint,6,opt,name=mission_id,json=missionId" json:"mission_id,omitempty"`
	FormatType       *pegasus_pegasusshared.FormatType `protobuf:"varint,7,opt,name=format_type,json=formatType,enum=pegasus.pegasusshared.FormatType,def=0" json:"format_type,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *PartyServerInfo) Reset()                    { *m = PartyServerInfo{} }
func (m *PartyServerInfo) String() string            { return proto.CompactTextString(m) }
func (*PartyServerInfo) ProtoMessage()               {}
func (*PartyServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

const Default_PartyServerInfo_GameType pegasus_pegasusshared.GameType = pegasus_pegasusshared.GameType_GT_UNKNOWN
const Default_PartyServerInfo_FormatType pegasus_pegasusshared.FormatType = pegasus_pegasusshared.FormatType_FT_UNKNOWN

func (m *PartyServerInfo) GetServerIpAddress() string {
	if m != nil && m.ServerIpAddress != nil {
		return *m.ServerIpAddress
	}
	return ""
}

func (m *PartyServerInfo) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *PartyServerInfo) GetGameHandle() int32 {
	if m != nil && m.GameHandle != nil {
		return *m.GameHandle
	}
	return 0
}

func (m *PartyServerInfo) GetSecretKey() string {
	if m != nil && m.SecretKey != nil {
		return *m.SecretKey
	}
	return ""
}

func (m *PartyServerInfo) GetGameType() pegasus_pegasusshared.GameType {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return Default_PartyServerInfo_GameType
}

func (m *PartyServerInfo) GetMissionId() int32 {
	if m != nil && m.MissionId != nil {
		return *m.MissionId
	}
	return 0
}

func (m *PartyServerInfo) GetFormatType() pegasus_pegasusshared.FormatType {
	if m != nil && m.FormatType != nil {
		return *m.FormatType
	}
	return Default_PartyServerInfo_FormatType
}

func init() {
	proto.RegisterType((*Invite)(nil), "pegasus.spectator.Invite")
	proto.RegisterType((*JoinInfo)(nil), "pegasus.spectator.JoinInfo")
	proto.RegisterType((*PartyQuestInfo)(nil), "pegasus.spectator.PartyQuestInfo")
	proto.RegisterType((*PartyServerInfo)(nil), "pegasus.spectator.PartyServerInfo")
}

func init() { proto.RegisterFile("pegasus/spectator/spectator.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0x93, 0x26, 0xb1, 0x27, 0xd0, 0x36, 0xab, 0x0a, 0x2c, 0xaa, 0xaa, 0x6e, 0x4e, 0x06,
	0x41, 0x90, 0x2a, 0x0e, 0x15, 0xb7, 0x72, 0x68, 0xeb, 0x54, 0x0a, 0xc1, 0x0d, 0xe2, 0xb8, 0x5a,
	0xb2, 0x93, 0x74, 0x4b, 0xec, 0x35, 0xbb, 0xeb, 0xaa, 0xfe, 0x13, 0xfe, 0x8c, 0x03, 0x3f, 0x83,
	0xbc, 0x76, 0x52, 0x25, 0xa8, 0xea, 0x01, 0x0e, 0x9c, 0xbc, 0x7e, 0xf3, 0xde, 0xcc, 0x3c, 0xcd,
	0x83, 0xa3, 0x0c, 0xe7, 0x4c, 0xe7, 0xfa, 0xad, 0xce, 0x70, 0x6a, 0x98, 0x91, 0xea, 0xfe, 0x35,
	0xc8, 0x94, 0x34, 0x92, 0xf4, 0x6a, 0xca, 0x60, 0x55, 0x78, 0xf1, 0x72, 0xa9, 0xaa, 0xbf, 0xfa,
	0x9a, 0x29, 0xe4, 0xeb, 0x7f, 0x95, 0xba, 0xff, 0xc3, 0x81, 0x76, 0x94, 0xde, 0x0a, 0x83, 0x64,
	0x02, 0xcf, 0x85, 0x7d, 0x29, 0x3a, 0x67, 0x09, 0x52, 0x36, 0x9d, 0xca, 0x3c, 0x35, 0x54, 0x70,
	0xdf, 0x09, 0x1a, 0x61, 0xf7, 0xf8, 0x60, 0xb0, 0x1c, 0xb5, 0xde, 0xe9, 0x43, 0x8a, 0x26, 0xe2,
	0xf1, 0x5e, 0xad, 0x3e, 0x67, 0x09, 0x9e, 0x56, 0xda, 0x88, 0x93, 0x13, 0xf0, 0x6e, 0xa4, 0x48,
	0xa9, 0x48, 0x67, 0xd2, 0x6f, 0xd8, 0x3e, 0xfb, 0x83, 0x3f, 0x56, 0x1e, 0x0c, 0xa5, 0x48, 0xa3,
	0x74, 0x26, 0x63, 0xf7, 0xa6, 0x7e, 0xf5, 0x7f, 0x6d, 0x81, 0xbb, 0x84, 0xc9, 0x2b, 0xe8, 0x69,
	0x54, 0xb7, 0xa8, 0xa8, 0xc8, 0x28, 0xe3, 0x5c, 0xa1, 0xd6, 0xbe, 0x13, 0x38, 0xa1, 0x17, 0xef,
	0x54, 0x85, 0x28, 0x3b, 0xad, 0x60, 0x72, 0x08, 0xdd, 0x9a, 0x9b, 0x49, 0x65, 0xfc, 0x46, 0xe0,
	0x84, 0x4f, 0x63, 0xa8, 0xa0, 0xb1, 0x54, 0xa6, 0x24, 0x58, 0x87, 0xd7, 0x2c, 0xe5, 0x0b, 0xf4,
	0x9b, 0x81, 0x13, 0xb6, 0x62, 0x28, 0xa1, 0x0b, 0x8b, 0x90, 0x03, 0x00, 0x8d, 0x53, 0x85, 0x86,
	0x7e, 0xc3, 0xc2, 0xdf, 0xb2, 0x63, 0xbc, 0x0a, 0xb9, 0xc4, 0xa2, 0xd4, 0x0b, 0x4d, 0xcb, 0x45,
	0xd9, 0xd7, 0x05, 0xfa, 0xad, 0xc0, 0x09, 0xdd, 0x18, 0x84, 0x1e, 0xd6, 0x08, 0x79, 0x07, 0xcf,
	0xa6, 0xb9, 0x52, 0x98, 0x1a, 0x9a, 0xe6, 0x09, 0x5d, 0xd9, 0xd4, 0x7e, 0xdb, 0xce, 0xda, 0xab,
	0xab, 0xa3, 0x3c, 0xb9, 0x5a, 0xd5, 0xc8, 0x6b, 0x20, 0x09, 0xbb, 0xdb, 0x54, 0x74, 0xac, 0x62,
	0x37, 0x61, 0x77, 0xeb, 0xec, 0x0b, 0xf0, 0xac, 0x09, 0x53, 0x64, 0xe8, 0xbb, 0x81, 0x13, 0x6e,
	0x1f, 0x1f, 0x3e, 0x70, 0xa0, 0xf2, 0x22, 0x93, 0x22, 0xc3, 0xf7, 0x70, 0x3e, 0xa1, 0x9f, 0x47,
	0x97, 0xa3, 0x8f, 0x5f, 0x46, 0xb1, 0x3b, 0xaf, 0xd1, 0xd2, 0x6d, 0x22, 0xb4, 0x16, 0x32, 0x2d,
	0x6f, 0xed, 0xd9, 0x79, 0x5e, 0x8d, 0x44, 0x9c, 0x0c, 0xa1, 0x57, 0xaf, 0x83, 0x9c, 0x66, 0x0b,
	0x56, 0xa0, 0xd2, 0x3e, 0x04, 0xcd, 0xc7, 0x13, 0xb1, 0xbb, 0xd2, 0x8d, 0x2b, 0x19, 0x39, 0x01,
	0x37, 0x63, 0xca, 0x14, 0xe5, 0xa0, 0x6e, 0xe0, 0x3c, 0xde, 0xa2, 0x63, 0xe9, 0x11, 0x27, 0x23,
	0xe8, 0xce, 0xa4, 0x4a, 0x98, 0xa9, 0x0c, 0x3f, 0xb1, 0x86, 0x8f, 0x1e, 0x10, 0x9f, 0x59, 0x66,
	0x65, 0xf9, 0xec, 0xde, 0x32, 0xcc, 0x56, 0x78, 0xff, 0x0d, 0x6c, 0x8f, 0xcb, 0xd6, 0x9f, 0x72,
	0xd4, 0xc6, 0x46, 0x6c, 0x1f, 0xbc, 0xef, 0xe5, 0x0f, 0x15, 0xbc, 0x8c, 0x56, 0x33, 0x6c, 0xc5,
	0xae, 0x05, 0x22, 0xae, 0xfb, 0x3f, 0x1b, 0xb0, 0x63, 0xf9, 0x57, 0x55, 0xd8, 0xfe, 0xbb, 0x4c,
	0xae, 0xc5, 0xa1, 0xf5, 0xef, 0xe2, 0xd0, 0xde, 0x8c, 0xc3, 0xc6, 0x21, 0x3a, 0x7f, 0x79, 0x88,
	0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x85, 0xb2, 0x54, 0xcf, 0xe3, 0x04, 0x00, 0x00,
}
