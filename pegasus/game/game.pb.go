// Code generated by protoc-gen-go.
// source: github.com/HearthSim/hs-proto-go/pegasus/game/game.proto
// DO NOT EDIT!

/*
Package game is a generated protocol buffer package.

It is generated from these files:
	github.com/HearthSim/hs-proto-go/pegasus/game/game.proto

It has these top-level messages:
	Tag
	Entity
	SubOption
	Option
	Player
	Handshake
	Ping
	GetGameState
	ChooseOption
	ChooseEntities
	MouseInfo
	UserUI
	Concede
	InviteToSpectate
	RemoveSpectators
	Pong
	GameSetup
	DebugMessage
	AllOptions
	NAckOption
	EntityChoices
	EntitiesChosen
	HistoryBlock
	HistoryMeta
	ClientHistoryMeta
	PowerHistoryCreateGame
	PowerHistoryEntity
	PowerHistoryHide
	PowerHistoryTagChange
	PowerHistoryMetaData
	PowerHistoryStart
	PowerHistoryEnd
	PowerHistoryData
	PowerHistory
	TurnTimer
	GameCanceled
	SpectatorHandshake
	ServerResult
	SpectatorChange
	SpectatorRemoved
	SpectatorNotify
*/
package game

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import shared "github.com/HearthSim/hs-proto-go/pegasus/shared"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Option_Type int32

const (
	Option_PASS     Option_Type = 1
	Option_END_TURN Option_Type = 2
	Option_POWER    Option_Type = 3
)

var Option_Type_name = map[int32]string{
	1: "PASS",
	2: "END_TURN",
	3: "POWER",
}
var Option_Type_value = map[string]int32{
	"PASS":     1,
	"END_TURN": 2,
	"POWER":    3,
}

func (x Option_Type) Enum() *Option_Type {
	p := new(Option_Type)
	*p = x
	return p
}
func (x Option_Type) String() string {
	return proto.EnumName(Option_Type_name, int32(x))
}
func (x *Option_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Option_Type_value, data, "Option_Type")
	if err != nil {
		return err
	}
	*x = Option_Type(value)
	return nil
}
func (Option_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type Handshake_PacketID int32

const (
	Handshake_ID Handshake_PacketID = 168
)

var Handshake_PacketID_name = map[int32]string{
	168: "ID",
}
var Handshake_PacketID_value = map[string]int32{
	"ID": 168,
}

func (x Handshake_PacketID) Enum() *Handshake_PacketID {
	p := new(Handshake_PacketID)
	*p = x
	return p
}
func (x Handshake_PacketID) String() string {
	return proto.EnumName(Handshake_PacketID_name, int32(x))
}
func (x *Handshake_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Handshake_PacketID_value, data, "Handshake_PacketID")
	if err != nil {
		return err
	}
	*x = Handshake_PacketID(value)
	return nil
}
func (Handshake_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

type Ping_PacketID int32

const (
	Ping_ID Ping_PacketID = 115
)

var Ping_PacketID_name = map[int32]string{
	115: "ID",
}
var Ping_PacketID_value = map[string]int32{
	"ID": 115,
}

func (x Ping_PacketID) Enum() *Ping_PacketID {
	p := new(Ping_PacketID)
	*p = x
	return p
}
func (x Ping_PacketID) String() string {
	return proto.EnumName(Ping_PacketID_name, int32(x))
}
func (x *Ping_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Ping_PacketID_value, data, "Ping_PacketID")
	if err != nil {
		return err
	}
	*x = Ping_PacketID(value)
	return nil
}
func (Ping_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

type GetGameState_PacketID int32

const (
	GetGameState_ID GetGameState_PacketID = 1
)

var GetGameState_PacketID_name = map[int32]string{
	1: "ID",
}
var GetGameState_PacketID_value = map[string]int32{
	"ID": 1,
}

func (x GetGameState_PacketID) Enum() *GetGameState_PacketID {
	p := new(GetGameState_PacketID)
	*p = x
	return p
}
func (x GetGameState_PacketID) String() string {
	return proto.EnumName(GetGameState_PacketID_name, int32(x))
}
func (x *GetGameState_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetGameState_PacketID_value, data, "GetGameState_PacketID")
	if err != nil {
		return err
	}
	*x = GetGameState_PacketID(value)
	return nil
}
func (GetGameState_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

type ChooseOption_PacketID int32

const (
	ChooseOption_ID ChooseOption_PacketID = 2
)

var ChooseOption_PacketID_name = map[int32]string{
	2: "ID",
}
var ChooseOption_PacketID_value = map[string]int32{
	"ID": 2,
}

func (x ChooseOption_PacketID) Enum() *ChooseOption_PacketID {
	p := new(ChooseOption_PacketID)
	*p = x
	return p
}
func (x ChooseOption_PacketID) String() string {
	return proto.EnumName(ChooseOption_PacketID_name, int32(x))
}
func (x *ChooseOption_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChooseOption_PacketID_value, data, "ChooseOption_PacketID")
	if err != nil {
		return err
	}
	*x = ChooseOption_PacketID(value)
	return nil
}
func (ChooseOption_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

type ChooseEntities_PacketID int32

const (
	ChooseEntities_ID ChooseEntities_PacketID = 3
)

var ChooseEntities_PacketID_name = map[int32]string{
	3: "ID",
}
var ChooseEntities_PacketID_value = map[string]int32{
	"ID": 3,
}

func (x ChooseEntities_PacketID) Enum() *ChooseEntities_PacketID {
	p := new(ChooseEntities_PacketID)
	*p = x
	return p
}
func (x ChooseEntities_PacketID) String() string {
	return proto.EnumName(ChooseEntities_PacketID_name, int32(x))
}
func (x *ChooseEntities_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChooseEntities_PacketID_value, data, "ChooseEntities_PacketID")
	if err != nil {
		return err
	}
	*x = ChooseEntities_PacketID(value)
	return nil
}
func (ChooseEntities_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 0} }

type UserUI_PacketID int32

const (
	UserUI_ID UserUI_PacketID = 15
)

var UserUI_PacketID_name = map[int32]string{
	15: "ID",
}
var UserUI_PacketID_value = map[string]int32{
	"ID": 15,
}

func (x UserUI_PacketID) Enum() *UserUI_PacketID {
	p := new(UserUI_PacketID)
	*p = x
	return p
}
func (x UserUI_PacketID) String() string {
	return proto.EnumName(UserUI_PacketID_name, int32(x))
}
func (x *UserUI_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserUI_PacketID_value, data, "UserUI_PacketID")
	if err != nil {
		return err
	}
	*x = UserUI_PacketID(value)
	return nil
}
func (UserUI_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 0} }

type Concede_PacketID int32

const (
	Concede_ID Concede_PacketID = 11
)

var Concede_PacketID_name = map[int32]string{
	11: "ID",
}
var Concede_PacketID_value = map[string]int32{
	"ID": 11,
}

func (x Concede_PacketID) Enum() *Concede_PacketID {
	p := new(Concede_PacketID)
	*p = x
	return p
}
func (x Concede_PacketID) String() string {
	return proto.EnumName(Concede_PacketID_name, int32(x))
}
func (x *Concede_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Concede_PacketID_value, data, "Concede_PacketID")
	if err != nil {
		return err
	}
	*x = Concede_PacketID(value)
	return nil
}
func (Concede_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 0} }

type InviteToSpectate_PacketID int32

const (
	InviteToSpectate_ID InviteToSpectate_PacketID = 25
)

var InviteToSpectate_PacketID_name = map[int32]string{
	25: "ID",
}
var InviteToSpectate_PacketID_value = map[string]int32{
	"ID": 25,
}

func (x InviteToSpectate_PacketID) Enum() *InviteToSpectate_PacketID {
	p := new(InviteToSpectate_PacketID)
	*p = x
	return p
}
func (x InviteToSpectate_PacketID) String() string {
	return proto.EnumName(InviteToSpectate_PacketID_name, int32(x))
}
func (x *InviteToSpectate_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InviteToSpectate_PacketID_value, data, "InviteToSpectate_PacketID")
	if err != nil {
		return err
	}
	*x = InviteToSpectate_PacketID(value)
	return nil
}
func (InviteToSpectate_PacketID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{13, 0}
}

type RemoveSpectators_PacketID int32

const (
	RemoveSpectators_ID RemoveSpectators_PacketID = 26
)

var RemoveSpectators_PacketID_name = map[int32]string{
	26: "ID",
}
var RemoveSpectators_PacketID_value = map[string]int32{
	"ID": 26,
}

func (x RemoveSpectators_PacketID) Enum() *RemoveSpectators_PacketID {
	p := new(RemoveSpectators_PacketID)
	*p = x
	return p
}
func (x RemoveSpectators_PacketID) String() string {
	return proto.EnumName(RemoveSpectators_PacketID_name, int32(x))
}
func (x *RemoveSpectators_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RemoveSpectators_PacketID_value, data, "RemoveSpectators_PacketID")
	if err != nil {
		return err
	}
	*x = RemoveSpectators_PacketID(value)
	return nil
}
func (RemoveSpectators_PacketID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14, 0}
}

type Pong_PacketID int32

const (
	Pong_ID Pong_PacketID = 116
)

var Pong_PacketID_name = map[int32]string{
	116: "ID",
}
var Pong_PacketID_value = map[string]int32{
	"ID": 116,
}

func (x Pong_PacketID) Enum() *Pong_PacketID {
	p := new(Pong_PacketID)
	*p = x
	return p
}
func (x Pong_PacketID) String() string {
	return proto.EnumName(Pong_PacketID_name, int32(x))
}
func (x *Pong_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Pong_PacketID_value, data, "Pong_PacketID")
	if err != nil {
		return err
	}
	*x = Pong_PacketID(value)
	return nil
}
func (Pong_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{15, 0} }

type GameSetup_PacketID int32

const (
	GameSetup_ID GameSetup_PacketID = 16
)

var GameSetup_PacketID_name = map[int32]string{
	16: "ID",
}
var GameSetup_PacketID_value = map[string]int32{
	"ID": 16,
}

func (x GameSetup_PacketID) Enum() *GameSetup_PacketID {
	p := new(GameSetup_PacketID)
	*p = x
	return p
}
func (x GameSetup_PacketID) String() string {
	return proto.EnumName(GameSetup_PacketID_name, int32(x))
}
func (x *GameSetup_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameSetup_PacketID_value, data, "GameSetup_PacketID")
	if err != nil {
		return err
	}
	*x = GameSetup_PacketID(value)
	return nil
}
func (GameSetup_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{16, 0} }

type DebugMessage_PacketID int32

const (
	DebugMessage_ID DebugMessage_PacketID = 5
)

var DebugMessage_PacketID_name = map[int32]string{
	5: "ID",
}
var DebugMessage_PacketID_value = map[string]int32{
	"ID": 5,
}

func (x DebugMessage_PacketID) Enum() *DebugMessage_PacketID {
	p := new(DebugMessage_PacketID)
	*p = x
	return p
}
func (x DebugMessage_PacketID) String() string {
	return proto.EnumName(DebugMessage_PacketID_name, int32(x))
}
func (x *DebugMessage_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DebugMessage_PacketID_value, data, "DebugMessage_PacketID")
	if err != nil {
		return err
	}
	*x = DebugMessage_PacketID(value)
	return nil
}
func (DebugMessage_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{17, 0} }

type AllOptions_PacketID int32

const (
	AllOptions_ID AllOptions_PacketID = 14
)

var AllOptions_PacketID_name = map[int32]string{
	14: "ID",
}
var AllOptions_PacketID_value = map[string]int32{
	"ID": 14,
}

func (x AllOptions_PacketID) Enum() *AllOptions_PacketID {
	p := new(AllOptions_PacketID)
	*p = x
	return p
}
func (x AllOptions_PacketID) String() string {
	return proto.EnumName(AllOptions_PacketID_name, int32(x))
}
func (x *AllOptions_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AllOptions_PacketID_value, data, "AllOptions_PacketID")
	if err != nil {
		return err
	}
	*x = AllOptions_PacketID(value)
	return nil
}
func (AllOptions_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{18, 0} }

type NAckOption_PacketID int32

const (
	NAckOption_ID NAckOption_PacketID = 10
)

var NAckOption_PacketID_name = map[int32]string{
	10: "ID",
}
var NAckOption_PacketID_value = map[string]int32{
	"ID": 10,
}

func (x NAckOption_PacketID) Enum() *NAckOption_PacketID {
	p := new(NAckOption_PacketID)
	*p = x
	return p
}
func (x NAckOption_PacketID) String() string {
	return proto.EnumName(NAckOption_PacketID_name, int32(x))
}
func (x *NAckOption_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NAckOption_PacketID_value, data, "NAckOption_PacketID")
	if err != nil {
		return err
	}
	*x = NAckOption_PacketID(value)
	return nil
}
func (NAckOption_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{19, 0} }

type EntityChoices_PacketID int32

const (
	EntityChoices_ID EntityChoices_PacketID = 17
)

var EntityChoices_PacketID_name = map[int32]string{
	17: "ID",
}
var EntityChoices_PacketID_value = map[string]int32{
	"ID": 17,
}

func (x EntityChoices_PacketID) Enum() *EntityChoices_PacketID {
	p := new(EntityChoices_PacketID)
	*p = x
	return p
}
func (x EntityChoices_PacketID) String() string {
	return proto.EnumName(EntityChoices_PacketID_name, int32(x))
}
func (x *EntityChoices_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EntityChoices_PacketID_value, data, "EntityChoices_PacketID")
	if err != nil {
		return err
	}
	*x = EntityChoices_PacketID(value)
	return nil
}
func (EntityChoices_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{20, 0} }

type EntitiesChosen_PacketID int32

const (
	EntitiesChosen_ID EntitiesChosen_PacketID = 13
)

var EntitiesChosen_PacketID_name = map[int32]string{
	13: "ID",
}
var EntitiesChosen_PacketID_value = map[string]int32{
	"ID": 13,
}

func (x EntitiesChosen_PacketID) Enum() *EntitiesChosen_PacketID {
	p := new(EntitiesChosen_PacketID)
	*p = x
	return p
}
func (x EntitiesChosen_PacketID) String() string {
	return proto.EnumName(EntitiesChosen_PacketID_name, int32(x))
}
func (x *EntitiesChosen_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EntitiesChosen_PacketID_value, data, "EntitiesChosen_PacketID")
	if err != nil {
		return err
	}
	*x = EntitiesChosen_PacketID(value)
	return nil
}
func (EntitiesChosen_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{21, 0} }

type HistoryBlock_Type int32

const (
	HistoryBlock_INVALID HistoryBlock_Type = 0
	HistoryBlock_ATTACK  HistoryBlock_Type = 1
	HistoryBlock_JOUST   HistoryBlock_Type = 2
	HistoryBlock_POWER   HistoryBlock_Type = 3
	HistoryBlock_TRIGGER HistoryBlock_Type = 5
	HistoryBlock_DEATHS  HistoryBlock_Type = 6
	HistoryBlock_PLAY    HistoryBlock_Type = 7
	HistoryBlock_FATIGUE HistoryBlock_Type = 8
	HistoryBlock_RITUAL  HistoryBlock_Type = 9
)

var HistoryBlock_Type_name = map[int32]string{
	0: "INVALID",
	1: "ATTACK",
	2: "JOUST",
	3: "POWER",
	5: "TRIGGER",
	6: "DEATHS",
	7: "PLAY",
	8: "FATIGUE",
	9: "RITUAL",
}
var HistoryBlock_Type_value = map[string]int32{
	"INVALID": 0,
	"ATTACK":  1,
	"JOUST":   2,
	"POWER":   3,
	"TRIGGER": 5,
	"DEATHS":  6,
	"PLAY":    7,
	"FATIGUE": 8,
	"RITUAL":  9,
}

func (x HistoryBlock_Type) Enum() *HistoryBlock_Type {
	p := new(HistoryBlock_Type)
	*p = x
	return p
}
func (x HistoryBlock_Type) String() string {
	return proto.EnumName(HistoryBlock_Type_name, int32(x))
}
func (x *HistoryBlock_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HistoryBlock_Type_value, data, "HistoryBlock_Type")
	if err != nil {
		return err
	}
	*x = HistoryBlock_Type(value)
	return nil
}
func (HistoryBlock_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{22, 0} }

type HistoryMeta_Type int32

const (
	HistoryMeta_TARGET         HistoryMeta_Type = 0
	HistoryMeta_DAMAGE         HistoryMeta_Type = 1
	HistoryMeta_HEALING        HistoryMeta_Type = 2
	HistoryMeta_JOUST          HistoryMeta_Type = 3
	HistoryMeta_CLIENT_HISTORY HistoryMeta_Type = 4
	HistoryMeta_SHOW_BIG_CARD  HistoryMeta_Type = 5
	HistoryMeta_EFFECT_TIMING  HistoryMeta_Type = 6
)

var HistoryMeta_Type_name = map[int32]string{
	0: "TARGET",
	1: "DAMAGE",
	2: "HEALING",
	3: "JOUST",
	4: "CLIENT_HISTORY",
	5: "SHOW_BIG_CARD",
	6: "EFFECT_TIMING",
}
var HistoryMeta_Type_value = map[string]int32{
	"TARGET":         0,
	"DAMAGE":         1,
	"HEALING":        2,
	"JOUST":          3,
	"CLIENT_HISTORY": 4,
	"SHOW_BIG_CARD":  5,
	"EFFECT_TIMING":  6,
}

func (x HistoryMeta_Type) Enum() *HistoryMeta_Type {
	p := new(HistoryMeta_Type)
	*p = x
	return p
}
func (x HistoryMeta_Type) String() string {
	return proto.EnumName(HistoryMeta_Type_name, int32(x))
}
func (x *HistoryMeta_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HistoryMeta_Type_value, data, "HistoryMeta_Type")
	if err != nil {
		return err
	}
	*x = HistoryMeta_Type(value)
	return nil
}
func (HistoryMeta_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{23, 0} }

type ClientHistoryMeta_Type int32

const (
	ClientHistoryMeta_INVALID       ClientHistoryMeta_Type = 0
	ClientHistoryMeta_SHOW_BIG_CARD ClientHistoryMeta_Type = 1
)

var ClientHistoryMeta_Type_name = map[int32]string{
	0: "INVALID",
	1: "SHOW_BIG_CARD",
}
var ClientHistoryMeta_Type_value = map[string]int32{
	"INVALID":       0,
	"SHOW_BIG_CARD": 1,
}

func (x ClientHistoryMeta_Type) Enum() *ClientHistoryMeta_Type {
	p := new(ClientHistoryMeta_Type)
	*p = x
	return p
}
func (x ClientHistoryMeta_Type) String() string {
	return proto.EnumName(ClientHistoryMeta_Type_name, int32(x))
}
func (x *ClientHistoryMeta_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientHistoryMeta_Type_value, data, "ClientHistoryMeta_Type")
	if err != nil {
		return err
	}
	*x = ClientHistoryMeta_Type(value)
	return nil
}
func (ClientHistoryMeta_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{24, 0} }

type PowerHistory_PacketID int32

const (
	PowerHistory_ID PowerHistory_PacketID = 19
)

var PowerHistory_PacketID_name = map[int32]string{
	19: "ID",
}
var PowerHistory_PacketID_value = map[string]int32{
	"ID": 19,
}

func (x PowerHistory_PacketID) Enum() *PowerHistory_PacketID {
	p := new(PowerHistory_PacketID)
	*p = x
	return p
}
func (x PowerHistory_PacketID) String() string {
	return proto.EnumName(PowerHistory_PacketID_name, int32(x))
}
func (x *PowerHistory_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PowerHistory_PacketID_value, data, "PowerHistory_PacketID")
	if err != nil {
		return err
	}
	*x = PowerHistory_PacketID(value)
	return nil
}
func (PowerHistory_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{33, 0} }

type TurnTimer_PacketID int32

const (
	TurnTimer_ID TurnTimer_PacketID = 9
)

var TurnTimer_PacketID_name = map[int32]string{
	9: "ID",
}
var TurnTimer_PacketID_value = map[string]int32{
	"ID": 9,
}

func (x TurnTimer_PacketID) Enum() *TurnTimer_PacketID {
	p := new(TurnTimer_PacketID)
	*p = x
	return p
}
func (x TurnTimer_PacketID) String() string {
	return proto.EnumName(TurnTimer_PacketID_name, int32(x))
}
func (x *TurnTimer_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TurnTimer_PacketID_value, data, "TurnTimer_PacketID")
	if err != nil {
		return err
	}
	*x = TurnTimer_PacketID(value)
	return nil
}
func (TurnTimer_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{34, 0} }

type GameCanceled_Reason int32

const (
	GameCanceled_OPPONENT_TIMEOUT GameCanceled_Reason = 1
)

var GameCanceled_Reason_name = map[int32]string{
	1: "OPPONENT_TIMEOUT",
}
var GameCanceled_Reason_value = map[string]int32{
	"OPPONENT_TIMEOUT": 1,
}

func (x GameCanceled_Reason) Enum() *GameCanceled_Reason {
	p := new(GameCanceled_Reason)
	*p = x
	return p
}
func (x GameCanceled_Reason) String() string {
	return proto.EnumName(GameCanceled_Reason_name, int32(x))
}
func (x *GameCanceled_Reason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameCanceled_Reason_value, data, "GameCanceled_Reason")
	if err != nil {
		return err
	}
	*x = GameCanceled_Reason(value)
	return nil
}
func (GameCanceled_Reason) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{35, 0} }

type GameCanceled_PacketID int32

const (
	GameCanceled_ID GameCanceled_PacketID = 12
)

var GameCanceled_PacketID_name = map[int32]string{
	12: "ID",
}
var GameCanceled_PacketID_value = map[string]int32{
	"ID": 12,
}

func (x GameCanceled_PacketID) Enum() *GameCanceled_PacketID {
	p := new(GameCanceled_PacketID)
	*p = x
	return p
}
func (x GameCanceled_PacketID) String() string {
	return proto.EnumName(GameCanceled_PacketID_name, int32(x))
}
func (x *GameCanceled_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameCanceled_PacketID_value, data, "GameCanceled_PacketID")
	if err != nil {
		return err
	}
	*x = GameCanceled_PacketID(value)
	return nil
}
func (GameCanceled_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{35, 1} }

type SpectatorHandshake_PacketID int32

const (
	SpectatorHandshake_ID SpectatorHandshake_PacketID = 22
)

var SpectatorHandshake_PacketID_name = map[int32]string{
	22: "ID",
}
var SpectatorHandshake_PacketID_value = map[string]int32{
	"ID": 22,
}

func (x SpectatorHandshake_PacketID) Enum() *SpectatorHandshake_PacketID {
	p := new(SpectatorHandshake_PacketID)
	*p = x
	return p
}
func (x SpectatorHandshake_PacketID) String() string {
	return proto.EnumName(SpectatorHandshake_PacketID_name, int32(x))
}
func (x *SpectatorHandshake_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SpectatorHandshake_PacketID_value, data, "SpectatorHandshake_PacketID")
	if err != nil {
		return err
	}
	*x = SpectatorHandshake_PacketID(value)
	return nil
}
func (SpectatorHandshake_PacketID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{36, 0}
}

type ServerResult_Code int32

const (
	ServerResult_RESULT_OK         ServerResult_Code = 0
	ServerResult_RESULT_RETRY      ServerResult_Code = 1
	ServerResult_RESULT_NOT_EXISTS ServerResult_Code = 2
)

var ServerResult_Code_name = map[int32]string{
	0: "RESULT_OK",
	1: "RESULT_RETRY",
	2: "RESULT_NOT_EXISTS",
}
var ServerResult_Code_value = map[string]int32{
	"RESULT_OK":         0,
	"RESULT_RETRY":      1,
	"RESULT_NOT_EXISTS": 2,
}

func (x ServerResult_Code) Enum() *ServerResult_Code {
	p := new(ServerResult_Code)
	*p = x
	return p
}
func (x ServerResult_Code) String() string {
	return proto.EnumName(ServerResult_Code_name, int32(x))
}
func (x *ServerResult_Code) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerResult_Code_value, data, "ServerResult_Code")
	if err != nil {
		return err
	}
	*x = ServerResult_Code(value)
	return nil
}
func (ServerResult_Code) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{37, 0} }

type ServerResult_Constants int32

const (
	ServerResult_DEFAULT_RETRY_SECONDS ServerResult_Constants = 2
)

var ServerResult_Constants_name = map[int32]string{
	2: "DEFAULT_RETRY_SECONDS",
}
var ServerResult_Constants_value = map[string]int32{
	"DEFAULT_RETRY_SECONDS": 2,
}

func (x ServerResult_Constants) Enum() *ServerResult_Constants {
	p := new(ServerResult_Constants)
	*p = x
	return p
}
func (x ServerResult_Constants) String() string {
	return proto.EnumName(ServerResult_Constants_name, int32(x))
}
func (x *ServerResult_Constants) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerResult_Constants_value, data, "ServerResult_Constants")
	if err != nil {
		return err
	}
	*x = ServerResult_Constants(value)
	return nil
}
func (ServerResult_Constants) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{37, 1} }

type ServerResult_PacketID int32

const (
	ServerResult_ID ServerResult_PacketID = 23
)

var ServerResult_PacketID_name = map[int32]string{
	23: "ID",
}
var ServerResult_PacketID_value = map[string]int32{
	"ID": 23,
}

func (x ServerResult_PacketID) Enum() *ServerResult_PacketID {
	p := new(ServerResult_PacketID)
	*p = x
	return p
}
func (x ServerResult_PacketID) String() string {
	return proto.EnumName(ServerResult_PacketID_name, int32(x))
}
func (x *ServerResult_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerResult_PacketID_value, data, "ServerResult_PacketID")
	if err != nil {
		return err
	}
	*x = ServerResult_PacketID(value)
	return nil
}
func (ServerResult_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{37, 2} }

type SpectatorRemoved_SpectatorRemovedReason int32

const (
	SpectatorRemoved_SPECTATOR_REMOVED_REASON_KICKED   SpectatorRemoved_SpectatorRemovedReason = 0
	SpectatorRemoved_SPECTATOR_REMOVED_REASON_GAMEOVER SpectatorRemoved_SpectatorRemovedReason = 1
)

var SpectatorRemoved_SpectatorRemovedReason_name = map[int32]string{
	0: "SPECTATOR_REMOVED_REASON_KICKED",
	1: "SPECTATOR_REMOVED_REASON_GAMEOVER",
}
var SpectatorRemoved_SpectatorRemovedReason_value = map[string]int32{
	"SPECTATOR_REMOVED_REASON_KICKED":   0,
	"SPECTATOR_REMOVED_REASON_GAMEOVER": 1,
}

func (x SpectatorRemoved_SpectatorRemovedReason) Enum() *SpectatorRemoved_SpectatorRemovedReason {
	p := new(SpectatorRemoved_SpectatorRemovedReason)
	*p = x
	return p
}
func (x SpectatorRemoved_SpectatorRemovedReason) String() string {
	return proto.EnumName(SpectatorRemoved_SpectatorRemovedReason_name, int32(x))
}
func (x *SpectatorRemoved_SpectatorRemovedReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SpectatorRemoved_SpectatorRemovedReason_value, data, "SpectatorRemoved_SpectatorRemovedReason")
	if err != nil {
		return err
	}
	*x = SpectatorRemoved_SpectatorRemovedReason(value)
	return nil
}
func (SpectatorRemoved_SpectatorRemovedReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{39, 0}
}

type SpectatorNotify_PacketID int32

const (
	SpectatorNotify_ID SpectatorNotify_PacketID = 24
)

var SpectatorNotify_PacketID_name = map[int32]string{
	24: "ID",
}
var SpectatorNotify_PacketID_value = map[string]int32{
	"ID": 24,
}

func (x SpectatorNotify_PacketID) Enum() *SpectatorNotify_PacketID {
	p := new(SpectatorNotify_PacketID)
	*p = x
	return p
}
func (x SpectatorNotify_PacketID) String() string {
	return proto.EnumName(SpectatorNotify_PacketID_name, int32(x))
}
func (x *SpectatorNotify_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SpectatorNotify_PacketID_value, data, "SpectatorNotify_PacketID")
	if err != nil {
		return err
	}
	*x = SpectatorNotify_PacketID(value)
	return nil
}
func (SpectatorNotify_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{40, 0} }

type Tag struct {
	Name             *int32 `protobuf:"varint,1,req,name=name" json:"name,omitempty"`
	Value            *int32 `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Tag) GetName() int32 {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return 0
}

func (m *Tag) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type Entity struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Tags             []*Tag `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Entity) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Entity) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type SubOption struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Targets          []int32 `protobuf:"varint,3,rep,packed,name=targets" json:"targets,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SubOption) Reset()                    { *m = SubOption{} }
func (m *SubOption) String() string            { return proto.CompactTextString(m) }
func (*SubOption) ProtoMessage()               {}
func (*SubOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SubOption) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SubOption) GetTargets() []int32 {
	if m != nil {
		return m.Targets
	}
	return nil
}

type Option struct {
	Type             *Option_Type `protobuf:"varint,1,req,name=type,enum=game.Option_Type" json:"type,omitempty"`
	MainOption       *SubOption   `protobuf:"bytes,2,opt,name=main_option" json:"main_option,omitempty"`
	SubOptions       []*SubOption `protobuf:"bytes,3,rep,name=sub_options" json:"sub_options,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Option) Reset()                    { *m = Option{} }
func (m *Option) String() string            { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()               {}
func (*Option) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Option) GetType() Option_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Option_PASS
}

func (m *Option) GetMainOption() *SubOption {
	if m != nil {
		return m.MainOption
	}
	return nil
}

func (m *Option) GetSubOptions() []*SubOption {
	if m != nil {
		return m.SubOptions
	}
	return nil
}

type Player struct {
	Id               *int32         `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	GameAccountId    *shared.BnetId `protobuf:"bytes,2,req,name=game_account_id" json:"game_account_id,omitempty"`
	CardBack         *int32         `protobuf:"varint,3,req,name=card_back" json:"card_back,omitempty"`
	Entity           *Entity        `protobuf:"bytes,4,req,name=entity" json:"entity,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Player) Reset()                    { *m = Player{} }
func (m *Player) String() string            { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()               {}
func (*Player) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Player) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Player) GetGameAccountId() *shared.BnetId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

func (m *Player) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

func (m *Player) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type Handshake struct {
	GameHandle       *int32           `protobuf:"varint,1,req,name=game_handle" json:"game_handle,omitempty"`
	Password         *string          `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	ClientHandle     *int64           `protobuf:"varint,3,req,name=client_handle" json:"client_handle,omitempty"`
	Mission          *int32           `protobuf:"varint,4,opt,name=mission" json:"mission,omitempty"`
	Version          *string          `protobuf:"bytes,5,req,name=version" json:"version,omitempty"`
	Platform         *shared.Platform `protobuf:"bytes,7,req,name=platform" json:"platform,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Handshake) Reset()                    { *m = Handshake{} }
func (m *Handshake) String() string            { return proto.CompactTextString(m) }
func (*Handshake) ProtoMessage()               {}
func (*Handshake) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Handshake) GetGameHandle() int32 {
	if m != nil && m.GameHandle != nil {
		return *m.GameHandle
	}
	return 0
}

func (m *Handshake) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *Handshake) GetClientHandle() int64 {
	if m != nil && m.ClientHandle != nil {
		return *m.ClientHandle
	}
	return 0
}

func (m *Handshake) GetMission() int32 {
	if m != nil && m.Mission != nil {
		return *m.Mission
	}
	return 0
}

func (m *Handshake) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *Handshake) GetPlatform() *shared.Platform {
	if m != nil {
		return m.Platform
	}
	return nil
}

type Ping struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Ping) Reset()                    { *m = Ping{} }
func (m *Ping) String() string            { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()               {}
func (*Ping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type GetGameState struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetGameState) Reset()                    { *m = GetGameState{} }
func (m *GetGameState) String() string            { return proto.CompactTextString(m) }
func (*GetGameState) ProtoMessage()               {}
func (*GetGameState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ChooseOption struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Index            *int32 `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	Target           *int32 `protobuf:"varint,3,req,name=target" json:"target,omitempty"`
	SubOption        *int32 `protobuf:"varint,4,opt,name=sub_option" json:"sub_option,omitempty"`
	Position         *int32 `protobuf:"varint,5,opt,name=position" json:"position,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ChooseOption) Reset()                    { *m = ChooseOption{} }
func (m *ChooseOption) String() string            { return proto.CompactTextString(m) }
func (*ChooseOption) ProtoMessage()               {}
func (*ChooseOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ChooseOption) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChooseOption) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *ChooseOption) GetTarget() int32 {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return 0
}

func (m *ChooseOption) GetSubOption() int32 {
	if m != nil && m.SubOption != nil {
		return *m.SubOption
	}
	return 0
}

func (m *ChooseOption) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

type ChooseEntities struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Entities         []int32 `protobuf:"varint,2,rep,packed,name=entities" json:"entities,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChooseEntities) Reset()                    { *m = ChooseEntities{} }
func (m *ChooseEntities) String() string            { return proto.CompactTextString(m) }
func (*ChooseEntities) ProtoMessage()               {}
func (*ChooseEntities) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ChooseEntities) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChooseEntities) GetEntities() []int32 {
	if m != nil {
		return m.Entities
	}
	return nil
}

type MouseInfo struct {
	ArrowOrigin      *int32 `protobuf:"varint,1,req,name=arrow_origin" json:"arrow_origin,omitempty"`
	HeldCard         *int32 `protobuf:"varint,2,req,name=held_card" json:"held_card,omitempty"`
	OverCard         *int32 `protobuf:"varint,3,req,name=over_card" json:"over_card,omitempty"`
	X                *int32 `protobuf:"varint,4,req,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,5,req,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MouseInfo) Reset()                    { *m = MouseInfo{} }
func (m *MouseInfo) String() string            { return proto.CompactTextString(m) }
func (*MouseInfo) ProtoMessage()               {}
func (*MouseInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *MouseInfo) GetArrowOrigin() int32 {
	if m != nil && m.ArrowOrigin != nil {
		return *m.ArrowOrigin
	}
	return 0
}

func (m *MouseInfo) GetHeldCard() int32 {
	if m != nil && m.HeldCard != nil {
		return *m.HeldCard
	}
	return 0
}

func (m *MouseInfo) GetOverCard() int32 {
	if m != nil && m.OverCard != nil {
		return *m.OverCard
	}
	return 0
}

func (m *MouseInfo) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *MouseInfo) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type UserUI struct {
	MouseInfo        *MouseInfo `protobuf:"bytes,1,opt,name=mouse_info" json:"mouse_info,omitempty"`
	Emote            *int32     `protobuf:"varint,2,opt,name=emote" json:"emote,omitempty"`
	PlayerId         *int32     `protobuf:"varint,3,opt,name=player_id" json:"player_id,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *UserUI) Reset()                    { *m = UserUI{} }
func (m *UserUI) String() string            { return proto.CompactTextString(m) }
func (*UserUI) ProtoMessage()               {}
func (*UserUI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *UserUI) GetMouseInfo() *MouseInfo {
	if m != nil {
		return m.MouseInfo
	}
	return nil
}

func (m *UserUI) GetEmote() int32 {
	if m != nil && m.Emote != nil {
		return *m.Emote
	}
	return 0
}

func (m *UserUI) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type Concede struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Concede) Reset()                    { *m = Concede{} }
func (m *Concede) String() string            { return proto.CompactTextString(m) }
func (*Concede) ProtoMessage()               {}
func (*Concede) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type InviteToSpectate struct {
	TargetBnetAccountId *shared.BnetId `protobuf:"bytes,1,opt,name=target_bnet_account_id" json:"target_bnet_account_id,omitempty"`
	TargetGameAccountId *shared.BnetId `protobuf:"bytes,2,req,name=target_game_account_id" json:"target_game_account_id,omitempty"`
	XXX_unrecognized    []byte         `json:"-"`
}

func (m *InviteToSpectate) Reset()                    { *m = InviteToSpectate{} }
func (m *InviteToSpectate) String() string            { return proto.CompactTextString(m) }
func (*InviteToSpectate) ProtoMessage()               {}
func (*InviteToSpectate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *InviteToSpectate) GetTargetBnetAccountId() *shared.BnetId {
	if m != nil {
		return m.TargetBnetAccountId
	}
	return nil
}

func (m *InviteToSpectate) GetTargetGameAccountId() *shared.BnetId {
	if m != nil {
		return m.TargetGameAccountId
	}
	return nil
}

type RemoveSpectators struct {
	TargetGameaccountIds        []*shared.BnetId `protobuf:"bytes,1,rep,name=target_gameaccount_ids" json:"target_gameaccount_ids,omitempty"`
	KickAllSpectators           *bool            `protobuf:"varint,2,opt,name=kick_all_spectators,def=0" json:"kick_all_spectators,omitempty"`
	RegenerateSpectatorPassword *bool            `protobuf:"varint,3,opt,name=regenerate_spectator_password,def=0" json:"regenerate_spectator_password,omitempty"`
	XXX_unrecognized            []byte           `json:"-"`
}

func (m *RemoveSpectators) Reset()                    { *m = RemoveSpectators{} }
func (m *RemoveSpectators) String() string            { return proto.CompactTextString(m) }
func (*RemoveSpectators) ProtoMessage()               {}
func (*RemoveSpectators) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

const Default_RemoveSpectators_KickAllSpectators bool = false
const Default_RemoveSpectators_RegenerateSpectatorPassword bool = false

func (m *RemoveSpectators) GetTargetGameaccountIds() []*shared.BnetId {
	if m != nil {
		return m.TargetGameaccountIds
	}
	return nil
}

func (m *RemoveSpectators) GetKickAllSpectators() bool {
	if m != nil && m.KickAllSpectators != nil {
		return *m.KickAllSpectators
	}
	return Default_RemoveSpectators_KickAllSpectators
}

func (m *RemoveSpectators) GetRegenerateSpectatorPassword() bool {
	if m != nil && m.RegenerateSpectatorPassword != nil {
		return *m.RegenerateSpectatorPassword
	}
	return Default_RemoveSpectators_RegenerateSpectatorPassword
}

type Pong struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Pong) Reset()                    { *m = Pong{} }
func (m *Pong) String() string            { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()               {}
func (*Pong) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type GameSetup struct {
	Board                       *int32 `protobuf:"varint,1,req,name=board" json:"board,omitempty"`
	MaxSecretsPerPlayer         *int32 `protobuf:"varint,2,req,name=max_secrets_per_player" json:"max_secrets_per_player,omitempty"`
	MaxFriendlyMinionsPerPlayer *int32 `protobuf:"varint,3,req,name=max_friendly_minions_per_player" json:"max_friendly_minions_per_player,omitempty"`
	KeepAliveFrequencySeconds   *int32 `protobuf:"varint,4,opt,name=keep_alive_frequency_seconds" json:"keep_alive_frequency_seconds,omitempty"`
	DisconnectWhenStuckSeconds  *int32 `protobuf:"varint,5,opt,name=disconnect_when_stuck_seconds" json:"disconnect_when_stuck_seconds,omitempty"`
	XXX_unrecognized            []byte `json:"-"`
}

func (m *GameSetup) Reset()                    { *m = GameSetup{} }
func (m *GameSetup) String() string            { return proto.CompactTextString(m) }
func (*GameSetup) ProtoMessage()               {}
func (*GameSetup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GameSetup) GetBoard() int32 {
	if m != nil && m.Board != nil {
		return *m.Board
	}
	return 0
}

func (m *GameSetup) GetMaxSecretsPerPlayer() int32 {
	if m != nil && m.MaxSecretsPerPlayer != nil {
		return *m.MaxSecretsPerPlayer
	}
	return 0
}

func (m *GameSetup) GetMaxFriendlyMinionsPerPlayer() int32 {
	if m != nil && m.MaxFriendlyMinionsPerPlayer != nil {
		return *m.MaxFriendlyMinionsPerPlayer
	}
	return 0
}

func (m *GameSetup) GetKeepAliveFrequencySeconds() int32 {
	if m != nil && m.KeepAliveFrequencySeconds != nil {
		return *m.KeepAliveFrequencySeconds
	}
	return 0
}

func (m *GameSetup) GetDisconnectWhenStuckSeconds() int32 {
	if m != nil && m.DisconnectWhenStuckSeconds != nil {
		return *m.DisconnectWhenStuckSeconds
	}
	return 0
}

type DebugMessage struct {
	Message          *string `protobuf:"bytes,1,req,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DebugMessage) Reset()                    { *m = DebugMessage{} }
func (m *DebugMessage) String() string            { return proto.CompactTextString(m) }
func (*DebugMessage) ProtoMessage()               {}
func (*DebugMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *DebugMessage) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type AllOptions struct {
	Id               *int32    `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Options          []*Option `protobuf:"bytes,2,rep,name=options" json:"options,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *AllOptions) Reset()                    { *m = AllOptions{} }
func (m *AllOptions) String() string            { return proto.CompactTextString(m) }
func (*AllOptions) ProtoMessage()               {}
func (*AllOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *AllOptions) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *AllOptions) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type NAckOption struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NAckOption) Reset()                    { *m = NAckOption{} }
func (m *NAckOption) String() string            { return proto.CompactTextString(m) }
func (*NAckOption) ProtoMessage()               {}
func (*NAckOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *NAckOption) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type EntityChoices struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	ChoiceType       *int32  `protobuf:"varint,2,req,name=choice_type" json:"choice_type,omitempty"`
	CountMin         *int32  `protobuf:"varint,4,req,name=count_min" json:"count_min,omitempty"`
	CountMax         *int32  `protobuf:"varint,5,req,name=count_max" json:"count_max,omitempty"`
	Entities         []int32 `protobuf:"varint,6,rep,packed,name=entities" json:"entities,omitempty"`
	Source           *int32  `protobuf:"varint,7,opt,name=source" json:"source,omitempty"`
	PlayerId         *int32  `protobuf:"varint,8,req,name=player_id" json:"player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EntityChoices) Reset()                    { *m = EntityChoices{} }
func (m *EntityChoices) String() string            { return proto.CompactTextString(m) }
func (*EntityChoices) ProtoMessage()               {}
func (*EntityChoices) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *EntityChoices) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *EntityChoices) GetChoiceType() int32 {
	if m != nil && m.ChoiceType != nil {
		return *m.ChoiceType
	}
	return 0
}

func (m *EntityChoices) GetCountMin() int32 {
	if m != nil && m.CountMin != nil {
		return *m.CountMin
	}
	return 0
}

func (m *EntityChoices) GetCountMax() int32 {
	if m != nil && m.CountMax != nil {
		return *m.CountMax
	}
	return 0
}

func (m *EntityChoices) GetEntities() []int32 {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *EntityChoices) GetSource() int32 {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return 0
}

func (m *EntityChoices) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type EntitiesChosen struct {
	ChooseEntities   *ChooseEntities `protobuf:"bytes,3,req,name=choose_entities" json:"choose_entities,omitempty"`
	PlayerId         *int32          `protobuf:"varint,4,req,name=player_id" json:"player_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *EntitiesChosen) Reset()                    { *m = EntitiesChosen{} }
func (m *EntitiesChosen) String() string            { return proto.CompactTextString(m) }
func (*EntitiesChosen) ProtoMessage()               {}
func (*EntitiesChosen) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *EntitiesChosen) GetChooseEntities() *ChooseEntities {
	if m != nil {
		return m.ChooseEntities
	}
	return nil
}

func (m *EntitiesChosen) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type HistoryBlock struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *HistoryBlock) Reset()                    { *m = HistoryBlock{} }
func (m *HistoryBlock) String() string            { return proto.CompactTextString(m) }
func (*HistoryBlock) ProtoMessage()               {}
func (*HistoryBlock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

type HistoryMeta struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *HistoryMeta) Reset()                    { *m = HistoryMeta{} }
func (m *HistoryMeta) String() string            { return proto.CompactTextString(m) }
func (*HistoryMeta) ProtoMessage()               {}
func (*HistoryMeta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type ClientHistoryMeta struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ClientHistoryMeta) Reset()                    { *m = ClientHistoryMeta{} }
func (m *ClientHistoryMeta) String() string            { return proto.CompactTextString(m) }
func (*ClientHistoryMeta) ProtoMessage()               {}
func (*ClientHistoryMeta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type PowerHistoryCreateGame struct {
	GameEntity       *Entity   `protobuf:"bytes,1,req,name=game_entity" json:"game_entity,omitempty"`
	Players          []*Player `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *PowerHistoryCreateGame) Reset()                    { *m = PowerHistoryCreateGame{} }
func (m *PowerHistoryCreateGame) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryCreateGame) ProtoMessage()               {}
func (*PowerHistoryCreateGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *PowerHistoryCreateGame) GetGameEntity() *Entity {
	if m != nil {
		return m.GameEntity
	}
	return nil
}

func (m *PowerHistoryCreateGame) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type PowerHistoryEntity struct {
	Entity           *int32  `protobuf:"varint,1,req,name=entity" json:"entity,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Tags             []*Tag  `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PowerHistoryEntity) Reset()                    { *m = PowerHistoryEntity{} }
func (m *PowerHistoryEntity) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryEntity) ProtoMessage()               {}
func (*PowerHistoryEntity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *PowerHistoryEntity) GetEntity() int32 {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return 0
}

func (m *PowerHistoryEntity) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PowerHistoryEntity) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type PowerHistoryHide struct {
	Entity           *int32 `protobuf:"varint,1,req,name=entity" json:"entity,omitempty"`
	Zone             *int32 `protobuf:"varint,2,req,name=zone" json:"zone,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PowerHistoryHide) Reset()                    { *m = PowerHistoryHide{} }
func (m *PowerHistoryHide) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryHide) ProtoMessage()               {}
func (*PowerHistoryHide) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *PowerHistoryHide) GetEntity() int32 {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return 0
}

func (m *PowerHistoryHide) GetZone() int32 {
	if m != nil && m.Zone != nil {
		return *m.Zone
	}
	return 0
}

type PowerHistoryTagChange struct {
	Entity           *int32 `protobuf:"varint,1,req,name=entity" json:"entity,omitempty"`
	Tag              *int32 `protobuf:"varint,2,req,name=tag" json:"tag,omitempty"`
	Value            *int32 `protobuf:"varint,3,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PowerHistoryTagChange) Reset()                    { *m = PowerHistoryTagChange{} }
func (m *PowerHistoryTagChange) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryTagChange) ProtoMessage()               {}
func (*PowerHistoryTagChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *PowerHistoryTagChange) GetEntity() int32 {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return 0
}

func (m *PowerHistoryTagChange) GetTag() int32 {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return 0
}

func (m *PowerHistoryTagChange) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type PowerHistoryMetaData struct {
	Info             []int32           `protobuf:"varint,2,rep,packed,name=info" json:"info,omitempty"`
	Type             *HistoryMeta_Type `protobuf:"varint,3,opt,name=type,enum=game.HistoryMeta_Type,def=0" json:"type,omitempty"`
	Data             *int32            `protobuf:"varint,4,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PowerHistoryMetaData) Reset()                    { *m = PowerHistoryMetaData{} }
func (m *PowerHistoryMetaData) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryMetaData) ProtoMessage()               {}
func (*PowerHistoryMetaData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

const Default_PowerHistoryMetaData_Type HistoryMeta_Type = HistoryMeta_TARGET

func (m *PowerHistoryMetaData) GetInfo() []int32 {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *PowerHistoryMetaData) GetType() HistoryMeta_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_PowerHistoryMetaData_Type
}

func (m *PowerHistoryMetaData) GetData() int32 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

type PowerHistoryStart struct {
	Type             *HistoryBlock_Type `protobuf:"varint,1,req,name=type,enum=game.HistoryBlock_Type" json:"type,omitempty"`
	Index            *int32             `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	Source           *int32             `protobuf:"varint,3,req,name=source" json:"source,omitempty"`
	Target           *int32             `protobuf:"varint,4,req,name=target" json:"target,omitempty"`
	EffectCardId     *string            `protobuf:"bytes,5,opt,name=effect_card_id" json:"effect_card_id,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *PowerHistoryStart) Reset()                    { *m = PowerHistoryStart{} }
func (m *PowerHistoryStart) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryStart) ProtoMessage()               {}
func (*PowerHistoryStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *PowerHistoryStart) GetType() HistoryBlock_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return HistoryBlock_INVALID
}

func (m *PowerHistoryStart) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *PowerHistoryStart) GetSource() int32 {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return 0
}

func (m *PowerHistoryStart) GetTarget() int32 {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return 0
}

func (m *PowerHistoryStart) GetEffectCardId() string {
	if m != nil && m.EffectCardId != nil {
		return *m.EffectCardId
	}
	return ""
}

type PowerHistoryEnd struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *PowerHistoryEnd) Reset()                    { *m = PowerHistoryEnd{} }
func (m *PowerHistoryEnd) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryEnd) ProtoMessage()               {}
func (*PowerHistoryEnd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

type PowerHistoryData struct {
	FullEntity       *PowerHistoryEntity     `protobuf:"bytes,1,opt,name=full_entity" json:"full_entity,omitempty"`
	ShowEntity       *PowerHistoryEntity     `protobuf:"bytes,2,opt,name=show_entity" json:"show_entity,omitempty"`
	HideEntity       *PowerHistoryHide       `protobuf:"bytes,3,opt,name=hide_entity" json:"hide_entity,omitempty"`
	TagChange        *PowerHistoryTagChange  `protobuf:"bytes,4,opt,name=tag_change" json:"tag_change,omitempty"`
	CreateGame       *PowerHistoryCreateGame `protobuf:"bytes,5,opt,name=create_game" json:"create_game,omitempty"`
	PowerStart       *PowerHistoryStart      `protobuf:"bytes,6,opt,name=power_start" json:"power_start,omitempty"`
	PowerEnd         *PowerHistoryEnd        `protobuf:"bytes,7,opt,name=power_end" json:"power_end,omitempty"`
	MetaData         *PowerHistoryMetaData   `protobuf:"bytes,8,opt,name=meta_data" json:"meta_data,omitempty"`
	ChangeEntity     *PowerHistoryEntity     `protobuf:"bytes,9,opt,name=change_entity" json:"change_entity,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *PowerHistoryData) Reset()                    { *m = PowerHistoryData{} }
func (m *PowerHistoryData) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryData) ProtoMessage()               {}
func (*PowerHistoryData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *PowerHistoryData) GetFullEntity() *PowerHistoryEntity {
	if m != nil {
		return m.FullEntity
	}
	return nil
}

func (m *PowerHistoryData) GetShowEntity() *PowerHistoryEntity {
	if m != nil {
		return m.ShowEntity
	}
	return nil
}

func (m *PowerHistoryData) GetHideEntity() *PowerHistoryHide {
	if m != nil {
		return m.HideEntity
	}
	return nil
}

func (m *PowerHistoryData) GetTagChange() *PowerHistoryTagChange {
	if m != nil {
		return m.TagChange
	}
	return nil
}

func (m *PowerHistoryData) GetCreateGame() *PowerHistoryCreateGame {
	if m != nil {
		return m.CreateGame
	}
	return nil
}

func (m *PowerHistoryData) GetPowerStart() *PowerHistoryStart {
	if m != nil {
		return m.PowerStart
	}
	return nil
}

func (m *PowerHistoryData) GetPowerEnd() *PowerHistoryEnd {
	if m != nil {
		return m.PowerEnd
	}
	return nil
}

func (m *PowerHistoryData) GetMetaData() *PowerHistoryMetaData {
	if m != nil {
		return m.MetaData
	}
	return nil
}

func (m *PowerHistoryData) GetChangeEntity() *PowerHistoryEntity {
	if m != nil {
		return m.ChangeEntity
	}
	return nil
}

type PowerHistory struct {
	List             []*PowerHistoryData `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *PowerHistory) Reset()                    { *m = PowerHistory{} }
func (m *PowerHistory) String() string            { return proto.CompactTextString(m) }
func (*PowerHistory) ProtoMessage()               {}
func (*PowerHistory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *PowerHistory) GetList() []*PowerHistoryData {
	if m != nil {
		return m.List
	}
	return nil
}

type TurnTimer struct {
	Seconds          *int32 `protobuf:"varint,1,req,name=seconds" json:"seconds,omitempty"`
	Turn             *int32 `protobuf:"varint,2,req,name=turn" json:"turn,omitempty"`
	Show             *bool  `protobuf:"varint,3,req,name=show" json:"show,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TurnTimer) Reset()                    { *m = TurnTimer{} }
func (m *TurnTimer) String() string            { return proto.CompactTextString(m) }
func (*TurnTimer) ProtoMessage()               {}
func (*TurnTimer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *TurnTimer) GetSeconds() int32 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *TurnTimer) GetTurn() int32 {
	if m != nil && m.Turn != nil {
		return *m.Turn
	}
	return 0
}

func (m *TurnTimer) GetShow() bool {
	if m != nil && m.Show != nil {
		return *m.Show
	}
	return false
}

type GameCanceled struct {
	Reason           *GameCanceled_Reason `protobuf:"varint,1,req,name=reason,enum=game.GameCanceled_Reason" json:"reason,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *GameCanceled) Reset()                    { *m = GameCanceled{} }
func (m *GameCanceled) String() string            { return proto.CompactTextString(m) }
func (*GameCanceled) ProtoMessage()               {}
func (*GameCanceled) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *GameCanceled) GetReason() GameCanceled_Reason {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return GameCanceled_OPPONENT_TIMEOUT
}

type SpectatorHandshake struct {
	GameHandle       *int32           `protobuf:"varint,1,req,name=game_handle" json:"game_handle,omitempty"`
	Password         *string          `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	Version          *string          `protobuf:"bytes,3,req,name=version" json:"version,omitempty"`
	Platform         *shared.Platform `protobuf:"bytes,4,req,name=platform" json:"platform,omitempty"`
	GameAccountId    *shared.BnetId   `protobuf:"bytes,5,req,name=game_account_id" json:"game_account_id,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SpectatorHandshake) Reset()                    { *m = SpectatorHandshake{} }
func (m *SpectatorHandshake) String() string            { return proto.CompactTextString(m) }
func (*SpectatorHandshake) ProtoMessage()               {}
func (*SpectatorHandshake) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *SpectatorHandshake) GetGameHandle() int32 {
	if m != nil && m.GameHandle != nil {
		return *m.GameHandle
	}
	return 0
}

func (m *SpectatorHandshake) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *SpectatorHandshake) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *SpectatorHandshake) GetPlatform() *shared.Platform {
	if m != nil {
		return m.Platform
	}
	return nil
}

func (m *SpectatorHandshake) GetGameAccountId() *shared.BnetId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

type ServerResult struct {
	ResultCode        *int32   `protobuf:"varint,1,req,name=result_code" json:"result_code,omitempty"`
	RetryDelaySeconds *float32 `protobuf:"fixed32,2,opt,name=retry_delay_seconds" json:"retry_delay_seconds,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *ServerResult) Reset()                    { *m = ServerResult{} }
func (m *ServerResult) String() string            { return proto.CompactTextString(m) }
func (*ServerResult) ProtoMessage()               {}
func (*ServerResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *ServerResult) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *ServerResult) GetRetryDelaySeconds() float32 {
	if m != nil && m.RetryDelaySeconds != nil {
		return *m.RetryDelaySeconds
	}
	return 0
}

type SpectatorChange struct {
	GameAccountId    *shared.BnetId `protobuf:"bytes,1,req,name=game_account_id" json:"game_account_id,omitempty"`
	IsRemoved        *bool          `protobuf:"varint,2,req,name=is_removed" json:"is_removed,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SpectatorChange) Reset()                    { *m = SpectatorChange{} }
func (m *SpectatorChange) String() string            { return proto.CompactTextString(m) }
func (*SpectatorChange) ProtoMessage()               {}
func (*SpectatorChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *SpectatorChange) GetGameAccountId() *shared.BnetId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

func (m *SpectatorChange) GetIsRemoved() bool {
	if m != nil && m.IsRemoved != nil {
		return *m.IsRemoved
	}
	return false
}

type SpectatorRemoved struct {
	ReasonCode       *int32         `protobuf:"varint,1,req,name=reason_code" json:"reason_code,omitempty"`
	RemovedBy        *shared.BnetId `protobuf:"bytes,2,opt,name=removed_by" json:"removed_by,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SpectatorRemoved) Reset()                    { *m = SpectatorRemoved{} }
func (m *SpectatorRemoved) String() string            { return proto.CompactTextString(m) }
func (*SpectatorRemoved) ProtoMessage()               {}
func (*SpectatorRemoved) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *SpectatorRemoved) GetReasonCode() int32 {
	if m != nil && m.ReasonCode != nil {
		return *m.ReasonCode
	}
	return 0
}

func (m *SpectatorRemoved) GetRemovedBy() *shared.BnetId {
	if m != nil {
		return m.RemovedBy
	}
	return nil
}

type SpectatorNotify struct {
	PlayerId                *int32             `protobuf:"varint,1,req,name=player_id" json:"player_id,omitempty"`
	ChooseOption            *ChooseOption      `protobuf:"bytes,2,opt,name=choose_option" json:"choose_option,omitempty"`
	SpectatorChange         []*SpectatorChange `protobuf:"bytes,4,rep,name=spectator_change" json:"spectator_change,omitempty"`
	SpectatorPasswordUpdate *string            `protobuf:"bytes,5,opt,name=spectator_password_update" json:"spectator_password_update,omitempty"`
	SpectatorRemoved        *SpectatorRemoved  `protobuf:"bytes,6,opt,name=spectator_removed" json:"spectator_removed,omitempty"`
	XXX_unrecognized        []byte             `json:"-"`
}

func (m *SpectatorNotify) Reset()                    { *m = SpectatorNotify{} }
func (m *SpectatorNotify) String() string            { return proto.CompactTextString(m) }
func (*SpectatorNotify) ProtoMessage()               {}
func (*SpectatorNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *SpectatorNotify) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *SpectatorNotify) GetChooseOption() *ChooseOption {
	if m != nil {
		return m.ChooseOption
	}
	return nil
}

func (m *SpectatorNotify) GetSpectatorChange() []*SpectatorChange {
	if m != nil {
		return m.SpectatorChange
	}
	return nil
}

func (m *SpectatorNotify) GetSpectatorPasswordUpdate() string {
	if m != nil && m.SpectatorPasswordUpdate != nil {
		return *m.SpectatorPasswordUpdate
	}
	return ""
}

func (m *SpectatorNotify) GetSpectatorRemoved() *SpectatorRemoved {
	if m != nil {
		return m.SpectatorRemoved
	}
	return nil
}

func init() {
	proto.RegisterType((*Tag)(nil), "game.Tag")
	proto.RegisterType((*Entity)(nil), "game.Entity")
	proto.RegisterType((*SubOption)(nil), "game.SubOption")
	proto.RegisterType((*Option)(nil), "game.Option")
	proto.RegisterType((*Player)(nil), "game.Player")
	proto.RegisterType((*Handshake)(nil), "game.Handshake")
	proto.RegisterType((*Ping)(nil), "game.Ping")
	proto.RegisterType((*GetGameState)(nil), "game.GetGameState")
	proto.RegisterType((*ChooseOption)(nil), "game.ChooseOption")
	proto.RegisterType((*ChooseEntities)(nil), "game.ChooseEntities")
	proto.RegisterType((*MouseInfo)(nil), "game.MouseInfo")
	proto.RegisterType((*UserUI)(nil), "game.UserUI")
	proto.RegisterType((*Concede)(nil), "game.Concede")
	proto.RegisterType((*InviteToSpectate)(nil), "game.InviteToSpectate")
	proto.RegisterType((*RemoveSpectators)(nil), "game.RemoveSpectators")
	proto.RegisterType((*Pong)(nil), "game.Pong")
	proto.RegisterType((*GameSetup)(nil), "game.GameSetup")
	proto.RegisterType((*DebugMessage)(nil), "game.DebugMessage")
	proto.RegisterType((*AllOptions)(nil), "game.AllOptions")
	proto.RegisterType((*NAckOption)(nil), "game.NAckOption")
	proto.RegisterType((*EntityChoices)(nil), "game.EntityChoices")
	proto.RegisterType((*EntitiesChosen)(nil), "game.EntitiesChosen")
	proto.RegisterType((*HistoryBlock)(nil), "game.HistoryBlock")
	proto.RegisterType((*HistoryMeta)(nil), "game.HistoryMeta")
	proto.RegisterType((*ClientHistoryMeta)(nil), "game.ClientHistoryMeta")
	proto.RegisterType((*PowerHistoryCreateGame)(nil), "game.PowerHistoryCreateGame")
	proto.RegisterType((*PowerHistoryEntity)(nil), "game.PowerHistoryEntity")
	proto.RegisterType((*PowerHistoryHide)(nil), "game.PowerHistoryHide")
	proto.RegisterType((*PowerHistoryTagChange)(nil), "game.PowerHistoryTagChange")
	proto.RegisterType((*PowerHistoryMetaData)(nil), "game.PowerHistoryMetaData")
	proto.RegisterType((*PowerHistoryStart)(nil), "game.PowerHistoryStart")
	proto.RegisterType((*PowerHistoryEnd)(nil), "game.PowerHistoryEnd")
	proto.RegisterType((*PowerHistoryData)(nil), "game.PowerHistoryData")
	proto.RegisterType((*PowerHistory)(nil), "game.PowerHistory")
	proto.RegisterType((*TurnTimer)(nil), "game.TurnTimer")
	proto.RegisterType((*GameCanceled)(nil), "game.GameCanceled")
	proto.RegisterType((*SpectatorHandshake)(nil), "game.SpectatorHandshake")
	proto.RegisterType((*ServerResult)(nil), "game.ServerResult")
	proto.RegisterType((*SpectatorChange)(nil), "game.SpectatorChange")
	proto.RegisterType((*SpectatorRemoved)(nil), "game.SpectatorRemoved")
	proto.RegisterType((*SpectatorNotify)(nil), "game.SpectatorNotify")
	proto.RegisterEnum("game.Option_Type", Option_Type_name, Option_Type_value)
	proto.RegisterEnum("game.Handshake_PacketID", Handshake_PacketID_name, Handshake_PacketID_value)
	proto.RegisterEnum("game.Ping_PacketID", Ping_PacketID_name, Ping_PacketID_value)
	proto.RegisterEnum("game.GetGameState_PacketID", GetGameState_PacketID_name, GetGameState_PacketID_value)
	proto.RegisterEnum("game.ChooseOption_PacketID", ChooseOption_PacketID_name, ChooseOption_PacketID_value)
	proto.RegisterEnum("game.ChooseEntities_PacketID", ChooseEntities_PacketID_name, ChooseEntities_PacketID_value)
	proto.RegisterEnum("game.UserUI_PacketID", UserUI_PacketID_name, UserUI_PacketID_value)
	proto.RegisterEnum("game.Concede_PacketID", Concede_PacketID_name, Concede_PacketID_value)
	proto.RegisterEnum("game.InviteToSpectate_PacketID", InviteToSpectate_PacketID_name, InviteToSpectate_PacketID_value)
	proto.RegisterEnum("game.RemoveSpectators_PacketID", RemoveSpectators_PacketID_name, RemoveSpectators_PacketID_value)
	proto.RegisterEnum("game.Pong_PacketID", Pong_PacketID_name, Pong_PacketID_value)
	proto.RegisterEnum("game.GameSetup_PacketID", GameSetup_PacketID_name, GameSetup_PacketID_value)
	proto.RegisterEnum("game.DebugMessage_PacketID", DebugMessage_PacketID_name, DebugMessage_PacketID_value)
	proto.RegisterEnum("game.AllOptions_PacketID", AllOptions_PacketID_name, AllOptions_PacketID_value)
	proto.RegisterEnum("game.NAckOption_PacketID", NAckOption_PacketID_name, NAckOption_PacketID_value)
	proto.RegisterEnum("game.EntityChoices_PacketID", EntityChoices_PacketID_name, EntityChoices_PacketID_value)
	proto.RegisterEnum("game.EntitiesChosen_PacketID", EntitiesChosen_PacketID_name, EntitiesChosen_PacketID_value)
	proto.RegisterEnum("game.HistoryBlock_Type", HistoryBlock_Type_name, HistoryBlock_Type_value)
	proto.RegisterEnum("game.HistoryMeta_Type", HistoryMeta_Type_name, HistoryMeta_Type_value)
	proto.RegisterEnum("game.ClientHistoryMeta_Type", ClientHistoryMeta_Type_name, ClientHistoryMeta_Type_value)
	proto.RegisterEnum("game.PowerHistory_PacketID", PowerHistory_PacketID_name, PowerHistory_PacketID_value)
	proto.RegisterEnum("game.TurnTimer_PacketID", TurnTimer_PacketID_name, TurnTimer_PacketID_value)
	proto.RegisterEnum("game.GameCanceled_Reason", GameCanceled_Reason_name, GameCanceled_Reason_value)
	proto.RegisterEnum("game.GameCanceled_PacketID", GameCanceled_PacketID_name, GameCanceled_PacketID_value)
	proto.RegisterEnum("game.SpectatorHandshake_PacketID", SpectatorHandshake_PacketID_name, SpectatorHandshake_PacketID_value)
	proto.RegisterEnum("game.ServerResult_Code", ServerResult_Code_name, ServerResult_Code_value)
	proto.RegisterEnum("game.ServerResult_Constants", ServerResult_Constants_name, ServerResult_Constants_value)
	proto.RegisterEnum("game.ServerResult_PacketID", ServerResult_PacketID_name, ServerResult_PacketID_value)
	proto.RegisterEnum("game.SpectatorRemoved_SpectatorRemovedReason", SpectatorRemoved_SpectatorRemovedReason_name, SpectatorRemoved_SpectatorRemovedReason_value)
	proto.RegisterEnum("game.SpectatorNotify_PacketID", SpectatorNotify_PacketID_name, SpectatorNotify_PacketID_value)
}

var fileDescriptor0 = []byte{
	// 1988 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x58, 0x4f, 0x6f, 0xdb, 0xd8,
	0x11, 0x2f, 0x4d, 0x49, 0x16, 0x47, 0x8a, 0x4c, 0xd3, 0x89, 0xe3, 0x64, 0x93, 0x4d, 0xf3, 0xf6,
	0x5f, 0x82, 0xc6, 0x76, 0xeb, 0x5e, 0x8a, 0x6d, 0x51, 0x80, 0x91, 0x68, 0x59, 0xb5, 0x2d, 0x19,
	0x12, 0x9d, 0xed, 0x16, 0x28, 0x08, 0x9a, 0x7c, 0x92, 0x08, 0x4b, 0xa4, 0x96, 0xa4, 0x9c, 0xa8,
	0x97, 0xa2, 0x97, 0x7e, 0x8e, 0x02, 0xed, 0x61, 0x2f, 0x3d, 0xf4, 0x58, 0xa0, 0xc7, 0x7e, 0x9a,
	0x7e, 0x8a, 0xce, 0xfb, 0x23, 0x89, 0x92, 0xe8, 0x36, 0x7b, 0x89, 0xa9, 0xc7, 0x79, 0xf3, 0xe6,
	0xfd, 0xe6, 0x37, 0xbf, 0x19, 0x06, 0x7e, 0x31, 0x08, 0xd2, 0xe1, 0xf4, 0xe6, 0xc8, 0x8b, 0xc6,
	0xc7, 0x67, 0xd4, 0x8d, 0xd3, 0x61, 0x2f, 0x18, 0x1f, 0x0f, 0x93, 0xc3, 0x49, 0x1c, 0xa5, 0xd1,
	0xe1, 0x20, 0x3a, 0x9e, 0xd0, 0x81, 0x9b, 0x4c, 0x93, 0xe3, 0x81, 0x3b, 0xa6, 0xfc, 0x9f, 0x23,
	0xfe, 0xca, 0x28, 0xb0, 0xe7, 0xa7, 0xbf, 0xfa, 0xe8, 0xfd, 0xc9, 0xd0, 0x8d, 0xa9, 0x2f, 0xff,
	0x08, 0x1f, 0x84, 0x80, 0x6a, 0xbb, 0x03, 0xa3, 0x0a, 0x85, 0x10, 0x9d, 0x1d, 0x28, 0x3f, 0xde,
	0x7a, 0x55, 0x34, 0x1e, 0x40, 0xf1, 0xce, 0x1d, 0x4d, 0xe9, 0xc1, 0x16, 0xfb, 0x49, 0x0e, 0xa1,
	0x64, 0x85, 0x69, 0x90, 0xce, 0x0c, 0x80, 0xad, 0xc0, 0x97, 0x46, 0x8f, 0xa1, 0x90, 0xba, 0x83,
	0x04, 0x6d, 0xd4, 0x57, 0x95, 0x13, 0xed, 0x88, 0x07, 0x86, 0xbe, 0xc8, 0x1b, 0xd0, 0x7a, 0xd3,
	0x9b, 0xce, 0x24, 0x0d, 0xa2, 0x70, 0x65, 0xc7, 0x1e, 0x6c, 0xa7, 0x6e, 0x3c, 0xa0, 0x69, 0x72,
	0xa0, 0xe2, 0xa6, 0xe2, 0xdb, 0x2d, 0x5d, 0x21, 0x7f, 0x51, 0xa0, 0x24, 0x6d, 0x5f, 0xa0, 0xc7,
	0xd9, 0x44, 0x04, 0x51, 0x3b, 0xd9, 0x15, 0x1e, 0xc5, 0xbb, 0x23, 0x1b, 0x5f, 0x18, 0x9f, 0x43,
	0x65, 0xec, 0x06, 0xa1, 0x13, 0xf1, 0x35, 0x3c, 0x59, 0xc1, 0x93, 0x77, 0x84, 0xdd, 0xf2, 0x48,
	0xb4, 0x4a, 0xa6, 0x37, 0xd2, 0x48, 0x1c, 0xb5, 0x69, 0x45, 0x5e, 0x43, 0x81, 0xfb, 0x2c, 0x43,
	0xe1, 0xca, 0xec, 0xf5, 0x74, 0x05, 0x31, 0x28, 0x5b, 0xed, 0x86, 0x63, 0x5f, 0x77, 0xdb, 0xfa,
	0x96, 0xa1, 0x41, 0xf1, 0xaa, 0xf3, 0x8d, 0xd5, 0xd5, 0x55, 0x12, 0x42, 0xe9, 0x6a, 0xe4, 0xce,
	0x68, 0xbc, 0x72, 0x9b, 0xaf, 0x60, 0x87, 0xb9, 0x74, 0x5c, 0xcf, 0x8b, 0xa6, 0x61, 0xea, 0xe0,
	0x0b, 0x06, 0x57, 0xe5, 0xa4, 0x76, 0x24, 0x11, 0x7e, 0x1b, 0xd2, 0xb4, 0xe5, 0x1b, 0xbb, 0xa0,
	0x79, 0x6e, 0xec, 0x3b, 0x37, 0xae, 0x77, 0x8b, 0xd1, 0xb0, 0xbd, 0xcf, 0xa0, 0x44, 0x39, 0xa2,
	0x07, 0x05, 0xbe, 0xa5, 0x2a, 0xa2, 0x13, 0x28, 0x93, 0xbf, 0x29, 0xa0, 0x9d, 0xb9, 0xa1, 0x8f,
	0x6e, 0x6e, 0x29, 0xa2, 0x56, 0xe1, 0xe7, 0x0c, 0x71, 0x65, 0x34, 0xcf, 0x90, 0x0e, 0xe5, 0x89,
	0x9b, 0x24, 0xef, 0xa3, 0x58, 0x9c, 0xaa, 0x19, 0x8f, 0xe0, 0x81, 0x37, 0x0a, 0xd0, 0xeb, 0xdc,
	0x90, 0x9d, 0xa4, 0x1a, 0x3b, 0xb0, 0x3d, 0x0e, 0x92, 0x84, 0xc1, 0x55, 0x40, 0xb8, 0x8a, 0x6c,
	0xe1, 0x8e, 0xc6, 0x7c, 0xa1, 0xc8, 0x37, 0x12, 0x74, 0x35, 0x72, 0xd3, 0x7e, 0x14, 0x8f, 0x0f,
	0xb6, 0x79, 0x34, 0xfa, 0xfc, 0x02, 0x57, 0x72, 0x9d, 0xec, 0x41, 0xf9, 0x0a, 0xa3, 0xc7, 0xeb,
	0x34, 0x8c, 0x6d, 0xd8, 0x6a, 0x35, 0xf4, 0xef, 0x15, 0xf2, 0x14, 0x91, 0x0b, 0xc2, 0x01, 0x31,
	0x32, 0x2f, 0x4b, 0xfc, 0x65, 0x82, 0xb4, 0xaa, 0x36, 0x69, 0xda, 0xc4, 0xb8, 0x7b, 0xa9, 0x9b,
	0xd2, 0x1c, 0x1b, 0x85, 0x24, 0x50, 0xad, 0x0f, 0xa3, 0x28, 0xa1, 0x39, 0x54, 0x41, 0x06, 0x06,
	0xa1, 0x4f, 0x3f, 0x08, 0x06, 0x1a, 0x35, 0x28, 0x09, 0xe6, 0x48, 0xfc, 0xd0, 0x76, 0x99, 0x62,
	0x79, 0x31, 0x06, 0x49, 0x94, 0x04, 0xa9, 0xb8, 0x19, 0xae, 0xe4, 0x1c, 0xba, 0x45, 0x4e, 0xa1,
	0x26, 0x0e, 0xe5, 0x58, 0x07, 0x34, 0x59, 0x39, 0xf6, 0x21, 0x94, 0xa9, 0x5c, 0xe7, 0xbc, 0x16,
	0x14, 0xdd, 0xf4, 0xa3, 0x92, 0xdf, 0x83, 0x76, 0x19, 0x4d, 0x13, 0xda, 0x0a, 0xfb, 0x11, 0x6e,
	0xab, 0xba, 0x71, 0x1c, 0xbd, 0x77, 0xa2, 0x38, 0x18, 0x04, 0xa1, 0x74, 0x86, 0x79, 0x1f, 0xd2,
	0x91, 0xef, 0xb0, 0xe4, 0xcb, 0x7b, 0xe0, 0x52, 0x84, 0xe8, 0x8b, 0x25, 0x71, 0x15, 0x0d, 0x94,
	0x0f, 0x9c, 0x05, 0xfc, 0x71, 0xc6, 0x93, 0x52, 0x24, 0x1e, 0x94, 0xae, 0x13, 0x1a, 0x5f, 0xb7,
	0x8c, 0xcf, 0x00, 0xc6, 0xec, 0x20, 0x27, 0xc0, 0x93, 0xd0, 0x73, 0x86, 0xf2, 0xcb, 0x00, 0x10,
	0x2e, 0x3a, 0x8e, 0x52, 0xca, 0x4b, 0x82, 0x1f, 0x33, 0xe1, 0x84, 0x65, 0xa4, 0x54, 0xef, 0xc1,
	0x62, 0x87, 0x3c, 0x87, 0xed, 0x7a, 0x14, 0x7a, 0xd4, 0xcf, 0xcb, 0x4f, 0x85, 0xfc, 0x59, 0x01,
	0xbd, 0x15, 0xde, 0x05, 0x29, 0xb5, 0xa3, 0xde, 0x84, 0x7a, 0x2c, 0x91, 0xc6, 0x11, 0xec, 0x8b,
	0x4c, 0x38, 0x37, 0xc8, 0xee, 0x2c, 0xf9, 0x45, 0x68, 0xeb, 0xe4, 0x5f, 0xda, 0x7f, 0x54, 0xb1,
	0xe4, 0x04, 0xf2, 0x84, 0x7c, 0x8f, 0x81, 0x74, 0xf1, 0x7e, 0x77, 0x54, 0x86, 0x11, 0xc5, 0xc9,
	0x9a, 0xe3, 0xa5, 0xdf, 0x04, 0x03, 0x51, 0x73, 0x02, 0x21, 0xb0, 0x77, 0x1b, 0x78, 0xb7, 0x8e,
	0x3b, 0x1a, 0x39, 0xc9, 0xc2, 0x0d, 0x07, 0xac, 0xfc, 0x75, 0xb1, 0xef, 0x8e, 0x12, 0x6a, 0xbc,
	0x81, 0xe7, 0x31, 0x1d, 0xd0, 0x90, 0xc6, 0x78, 0xd5, 0xa5, 0x95, 0xb3, 0x28, 0x35, 0x35, 0x63,
	0x9d, 0x13, 0xea, 0x53, 0x5e, 0x13, 0x51, 0x6e, 0x4d, 0xa4, 0xe4, 0xdf, 0x58, 0xd6, 0xbc, 0x22,
	0x68, 0x3a, 0x9d, 0xb0, 0x94, 0xdd, 0x44, 0x8c, 0x06, 0x82, 0x2c, 0x9f, 0xc2, 0xfe, 0xd8, 0xfd,
	0xe0, 0x24, 0xd4, 0x8b, 0x51, 0x1f, 0x9d, 0x09, 0xe6, 0x4e, 0xa4, 0x50, 0x32, 0xe7, 0x2b, 0x78,
	0xc1, 0xde, 0xf7, 0x63, 0x2c, 0x71, 0x7f, 0x34, 0x73, 0xc6, 0x41, 0xc8, 0xd4, 0x2d, 0x6b, 0x28,
	0xf8, 0xf4, 0x39, 0x3c, 0xbb, 0xa5, 0x74, 0x82, 0xf7, 0x0c, 0xee, 0x28, 0xda, 0xd3, 0xef, 0xa6,
	0x34, 0xf4, 0x66, 0xcc, 0x73, 0x84, 0x92, 0x22, 0x8b, 0xe5, 0x0b, 0x78, 0xee, 0x07, 0x09, 0xae,
	0x84, 0x78, 0x47, 0xe7, 0xfd, 0x90, 0x86, 0x4e, 0x92, 0x4e, 0x11, 0x9e, 0xb9, 0xd9, 0x7d, 0x15,
	0xa4, 0x93, 0x9f, 0x43, 0xb5, 0x41, 0x6f, 0xa6, 0x83, 0x4b, 0x9a, 0x24, 0xee, 0x80, 0x72, 0x85,
	0x11, 0x8f, 0xfc, 0x2a, 0x5a, 0xce, 0xa6, 0x22, 0x39, 0x07, 0x30, 0x47, 0x23, 0x51, 0xe8, 0xab,
	0x25, 0x87, 0x24, 0x9c, 0x2b, 0xb5, 0xe8, 0x24, 0xd5, 0xac, 0xee, 0xe7, 0x38, 0xab, 0x61, 0x83,
	0x81, 0xb6, 0xe9, 0xdd, 0x6e, 0xca, 0x46, 0x8e, 0x35, 0x90, 0xbf, 0x2a, 0xf0, 0x40, 0x08, 0x2b,
	0x16, 0x7e, 0xe0, 0xad, 0x55, 0x3c, 0xaa, 0xab, 0xc7, 0x97, 0x1d, 0xde, 0x7a, 0x16, 0x65, 0x2a,
	0xe8, 0x84, 0x28, 0xcb, 0xda, 0x5c, 0x2e, 0xb9, 0x1f, 0x44, 0x8d, 0xae, 0x88, 0x45, 0x69, 0x2e,
	0x16, 0x4c, 0xaa, 0x92, 0x68, 0x1a, 0x7b, 0x14, 0xc5, 0x74, 0xa3, 0x16, 0xcb, 0xf7, 0x44, 0xb9,
	0x4b, 0xfa, 0x50, 0x9b, 0x2b, 0x12, 0x86, 0x99, 0xd0, 0xd0, 0x38, 0x84, 0x1d, 0x8f, 0x2b, 0x95,
	0xb3, 0x38, 0x45, 0xe5, 0x25, 0xf3, 0x50, 0x00, 0xb4, 0x26, 0x63, 0x2b, 0xe7, 0x14, 0xee, 0x39,
	0xe7, 0x01, 0xf9, 0x93, 0x02, 0xd5, 0xb3, 0x20, 0x41, 0x56, 0xcf, 0xde, 0x8e, 0x22, 0xef, 0x96,
	0x7c, 0x27, 0xfb, 0x60, 0x05, 0xb6, 0x5b, 0xed, 0x77, 0xe6, 0x05, 0x5a, 0xfd, 0x08, 0x11, 0x2a,
	0x99, 0xb6, 0x6d, 0xd6, 0xcf, 0xf1, 0x42, 0xd8, 0x08, 0x7f, 0xd3, 0xb9, 0xee, 0xd9, 0x2b, 0x3d,
	0x91, 0x99, 0xdb, 0xdd, 0x56, 0xb3, 0x89, 0x3f, 0x8a, 0xcc, 0xbc, 0x61, 0x99, 0xf6, 0x59, 0x4f,
	0x2f, 0xf1, 0x7e, 0x7a, 0x61, 0x7e, 0xab, 0x6f, 0x33, 0x93, 0x53, 0xd3, 0x6e, 0x35, 0xaf, 0x2d,
	0xbd, 0xcc, 0x4c, 0xba, 0x2d, 0xfb, 0xda, 0xbc, 0xd0, 0x35, 0xf2, 0x47, 0xa8, 0xc8, 0x10, 0x2e,
	0x69, 0xea, 0x92, 0x89, 0x8c, 0x00, 0x4d, 0x6c, 0xb3, 0xdb, 0xb4, 0x6c, 0x11, 0x40, 0xc3, 0xbc,
	0x34, 0x9b, 0x16, 0x06, 0x80, 0x7e, 0xce, 0x2c, 0x0c, 0xac, 0xdd, 0x14, 0x21, 0x88, 0x68, 0x54,
	0x6c, 0x02, 0xb5, 0xfa, 0x45, 0xcb, 0x6a, 0xdb, 0xce, 0x59, 0xab, 0x67, 0x77, 0xba, 0xdf, 0xea,
	0x05, 0x44, 0xe1, 0x41, 0xef, 0xac, 0xf3, 0x8d, 0xf3, 0xb6, 0xd5, 0x74, 0xea, 0x66, 0x17, 0xa9,
	0xc7, 0x96, 0xac, 0xd3, 0x53, 0xab, 0x6e, 0x3b, 0x76, 0xeb, 0x92, 0x39, 0x29, 0x91, 0x5f, 0xc2,
	0x6e, 0x9d, 0xf7, 0xca, 0x6c, 0x18, 0x5f, 0xe6, 0x01, 0xb1, 0xe1, 0x4f, 0x21, 0xbf, 0x83, 0xfd,
	0xab, 0xe8, 0x3d, 0x8d, 0xe5, 0xde, 0x7a, 0x4c, 0x51, 0x2c, 0x58, 0x5d, 0x1b, 0x2f, 0x65, 0xa7,
	0x96, 0xad, 0x5d, 0xd9, 0x6c, 0xed, 0x8c, 0xed, 0x22, 0x4b, 0x6b, 0x6c, 0x17, 0xf3, 0x05, 0x96,
	0x89, 0x91, 0xf5, 0x2d, 0x37, 0xd5, 0x16, 0xd3, 0x82, 0xe0, 0xec, 0x7c, 0x58, 0x13, 0x8d, 0x7f,
	0x3e, 0x87, 0xa9, 0xeb, 0x73, 0xd8, 0x4f, 0x41, 0xcf, 0x3a, 0x3b, 0x0b, 0x7c, 0x9a, 0xe7, 0xea,
	0x0f, 0x51, 0x38, 0x1f, 0xf4, 0xea, 0xf0, 0x28, 0xbb, 0x03, 0x9d, 0xd4, 0x71, 0x98, 0x18, 0x6c,
	0x6e, 0xab, 0x80, 0x8a, 0x67, 0xca, 0x6a, 0x59, 0x4c, 0x8b, 0x5c, 0x80, 0x88, 0x0f, 0x0f, 0xb3,
	0x4e, 0x18, 0xb6, 0x0d, 0x37, 0x75, 0xb1, 0x3f, 0x17, 0x78, 0x0b, 0x5b, 0xf4, 0x55, 0x94, 0x5b,
	0x31, 0xef, 0x31, 0x55, 0xad, 0x9d, 0xec, 0x8b, 0xc8, 0x33, 0xdb, 0xf8, 0xd0, 0xf7, 0xb5, 0x24,
	0x05, 0x0b, 0xd5, 0x47, 0x3f, 0x42, 0xc0, 0x18, 0x8f, 0x77, 0xb3, 0xc7, 0xe0, 0x98, 0x11, 0xa7,
	0x28, 0x6b, 0xd9, 0x09, 0xf2, 0xf1, 0x8a, 0x47, 0x4e, 0x77, 0x31, 0x47, 0x6e, 0x4e, 0x17, 0xb2,
	0x64, 0xd5, 0xb5, 0x69, 0x43, 0xd4, 0xfe, 0x3e, 0xd4, 0x68, 0xbf, 0xcf, 0x84, 0x92, 0xcf, 0x71,
	0x58, 0x5f, 0x4c, 0x1d, 0x35, 0xb2, 0x0b, 0x3b, 0xab, 0xd9, 0xf2, 0xc9, 0x3f, 0xd5, 0x55, 0xd0,
	0xf9, 0xcd, 0x0f, 0xa1, 0xd2, 0x9f, 0x62, 0xdb, 0x59, 0x40, 0xc8, 0x1a, 0xe5, 0x81, 0x4c, 0xfc,
	0x66, 0xba, 0xd1, 0x3c, 0x19, 0xe2, 0x30, 0x21, 0xcd, 0xb7, 0xfe, 0x8f, 0xf9, 0x4f, 0xa0, 0x32,
	0xc4, 0xd4, 0xce, 0xcd, 0x55, 0x6e, 0xbe, 0xbf, 0x69, 0xce, 0xf3, 0x7f, 0x0c, 0x80, 0x89, 0x73,
	0x3c, 0x9e, 0x56, 0x0e, 0x65, 0xe5, 0xe4, 0x93, 0x4d, 0xdb, 0x65, 0xe6, 0x7f, 0x86, 0xfa, 0xc8,
	0x19, 0xce, 0xdb, 0x2c, 0xbf, 0x78, 0xe5, 0xe4, 0xd9, 0xe6, 0x8e, 0x4c, 0x19, 0xbc, 0x81, 0xca,
	0x84, 0xbd, 0xc1, 0x8e, 0x82, 0x39, 0x41, 0x69, 0x64, 0x5b, 0x1e, 0x6f, 0x6e, 0x11, 0x29, 0x7b,
	0x85, 0xba, 0xc5, 0xad, 0xb1, 0xaf, 0x71, 0xc9, 0xac, 0x9c, 0x3c, 0xca, 0xbb, 0xab, 0x8f, 0xb8,
	0x68, 0x63, 0x64, 0x85, 0xc3, 0x59, 0x50, 0xe6, 0x96, 0x4f, 0x37, 0x2d, 0x17, 0x7c, 0x3b, 0xc6,
	0x81, 0x98, 0xdf, 0x61, 0x8e, 0x8c, 0xf6, 0xbf, 0x81, 0x24, 0x67, 0x50, 0xcd, 0xae, 0x62, 0x27,
	0x2d, 0x8c, 0xf0, 0x51, 0xce, 0x13, 0x39, 0x88, 0xb2, 0x63, 0x72, 0x44, 0x76, 0x8f, 0x5c, 0x80,
	0x66, 0x4f, 0xe3, 0xd0, 0x0e, 0xc6, 0xf8, 0xcd, 0x80, 0xfd, 0x71, 0xde, 0x54, 0x17, 0x35, 0x97,
	0xe2, 0x5b, 0x49, 0x3e, 0xfc, 0xc5, 0xb2, 0xcd, 0xa9, 0x57, 0xce, 0xf1, 0xa6, 0x91, 0x31, 0xce,
	0xd2, 0x78, 0x74, 0xdd, 0xc5, 0x51, 0x6d, 0x44, 0x7d, 0xe3, 0x35, 0x94, 0x10, 0xec, 0x24, 0x0a,
	0x25, 0xcd, 0x9f, 0x88, 0xc8, 0xb2, 0x36, 0x47, 0x5d, 0x6e, 0x40, 0x3e, 0x45, 0xd5, 0xe5, 0x4f,
	0xd8, 0xac, 0xf4, 0xce, 0xd5, 0x55, 0xa7, 0xcd, 0xe4, 0x12, 0x75, 0xd0, 0xea, 0x5c, 0xdb, 0xb9,
	0x93, 0x6d, 0x95, 0xfc, 0x5d, 0x01, 0x63, 0x31, 0x67, 0xfd, 0xe0, 0xcf, 0x90, 0xcc, 0xe7, 0x85,
	0xba, 0xf1, 0x79, 0x51, 0xc8, 0xff, 0xbc, 0xc8, 0xfb, 0x94, 0x2a, 0x7e, 0xe4, 0x74, 0xb8, 0x4f,
	0xfe, 0x85, 0x1d, 0xad, 0x47, 0x63, 0x3c, 0xb5, 0x4b, 0x93, 0xe9, 0x28, 0x65, 0x91, 0xc6, 0xfc,
	0xc9, 0xf1, 0x22, 0x7f, 0x1e, 0xe9, 0x27, 0xb0, 0x87, 0x83, 0x55, 0x3c, 0x73, 0x7c, 0x8a, 0x52,
	0xbb, 0x18, 0x73, 0x58, 0x71, 0x6d, 0x91, 0x5f, 0x43, 0xa1, 0x8e, 0xa6, 0xa8, 0x0b, 0x5a, 0xd7,
	0xea, 0x5d, 0x5f, 0xd8, 0x4e, 0xe7, 0x1c, 0xc5, 0x5f, 0x87, 0xaa, 0xfc, 0xd9, 0xb5, 0x6c, 0x6c,
	0x2f, 0x0a, 0x7e, 0x64, 0xed, 0xca, 0x95, 0x76, 0xc7, 0x76, 0xac, 0xdf, 0x62, 0xdf, 0xe9, 0xe1,
	0x47, 0xc5, 0x97, 0xa0, 0xe1, 0x20, 0x8d, 0x74, 0x0f, 0xd3, 0xc4, 0x78, 0x02, 0x8f, 0x1a, 0xd6,
	0xa9, 0xb9, 0xd8, 0xe6, 0xf4, 0xac, 0x7a, 0xa7, 0xdd, 0x60, 0x76, 0x9b, 0xe1, 0x3f, 0x26, 0x6d,
	0xd8, 0x59, 0xa0, 0x2d, 0x6b, 0x2e, 0x07, 0x0e, 0x25, 0xf7, 0xcb, 0x12, 0xdb, 0x64, 0x90, 0x38,
	0x31, 0x1f, 0x8d, 0x45, 0x02, 0xca, 0xe4, 0x1f, 0x38, 0x2c, 0x2f, 0x1c, 0x8a, 0xa9, 0xd9, 0x17,
	0x90, 0x30, 0x1e, 0x64, 0x21, 0x21, 0x00, 0x72, 0xab, 0x73, 0x33, 0x97, 0x99, 0x75, 0xc0, 0x7d,
	0xd8, 0x5f, 0x77, 0x26, 0x09, 0xf5, 0x19, 0xbc, 0xe8, 0x5d, 0x61, 0x57, 0x35, 0xb1, 0xf3, 0xe2,
	0x45, 0x2f, 0x3b, 0xef, 0xac, 0x06, 0xfe, 0x35, 0x7b, 0x9d, 0xb6, 0x73, 0xde, 0xaa, 0x9f, 0x5b,
	0xac, 0x7d, 0x7e, 0x01, 0x2f, 0xef, 0x35, 0x6a, 0x9a, 0xc8, 0xc2, 0x77, 0x38, 0x3f, 0x28, 0xe4,
	0x3f, 0x4a, 0x06, 0x84, 0x76, 0x94, 0x06, 0xfd, 0xd9, 0xea, 0x3c, 0x23, 0x02, 0x7e, 0xcd, 0x2a,
	0x9a, 0x4f, 0x44, 0x2b, 0xff, 0x01, 0x60, 0x64, 0xe7, 0x21, 0x39, 0x14, 0x1e, 0x83, 0xbe, 0x1c,
	0xdf, 0x17, 0x6a, 0xa7, 0x2e, 0xc5, 0x65, 0x1d, 0xf3, 0x97, 0xf0, 0x64, 0x73, 0xde, 0x77, 0xa6,
	0x13, 0x14, 0x1b, 0xa1, 0x7a, 0x1a, 0x4a, 0xe1, 0xee, 0xd2, 0x64, 0x0e, 0x7a, 0x29, 0x2b, 0xb7,
	0xeb, 0x50, 0xe5, 0x24, 0xfc, 0xe0, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0e, 0xd8, 0x70, 0xe6,
	0xf0, 0x11, 0x00, 0x00,
}
