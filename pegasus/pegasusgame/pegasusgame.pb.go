// Code generated by protoc-gen-go.
// source: pegasus/pegasusgame/pegasusgame.proto
// DO NOT EDIT!

/*
Package pegasus_pegasusgame is a generated protocol buffer package.

It is generated from these files:
	pegasus/pegasusgame/pegasusgame.proto

It has these top-level messages:
	AllOptions
	ChooseEntities
	ChooseOption
	Concede
	DebugMessage
	EntitiesChosen
	Entity
	EntityChoices
	GameCanceled
	GameSetup
	GetGameState
	Handshake
	HistoryBlock
	HistoryMeta
	InviteToSpectate
	MouseInfo
	NAckOption
	Option
	Ping
	Player
	Pong
	PowerHistory
	PowerHistoryCreateGame
	PowerHistoryData
	PowerHistoryEnd
	PowerHistoryEntity
	PowerHistoryHide
	PowerHistoryMetaData
	PowerHistoryStart
	PowerHistoryTagChange
	RemoveSpectators
	ServerResult
	SpectatorChange
	SpectatorHandshake
	SpectatorNotify
	SpectatorRemoved
	SubOption
	Tag
	TargetOption
	TurnTimer
	UserUI
*/
package pegasus_pegasusgame

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import pegasus_pegasusshared "pegasus/pegasusshared"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ref: PegasusGame.AllOptions/PacketID
type AllOptions_PacketID int32

const (
	AllOptions_PACKETID_AUTO_INVALID AllOptions_PacketID = 0
	AllOptions_ID                    AllOptions_PacketID = 14
)

var AllOptions_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	14: "ID",
}
var AllOptions_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 14,
}

func (x AllOptions_PacketID) String() string {
	return proto.EnumName(AllOptions_PacketID_name, int32(x))
}
func (AllOptions_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

// ref: PegasusGame.ChooseEntities/PacketID
type ChooseEntities_PacketID int32

const (
	ChooseEntities_PACKETID_AUTO_INVALID ChooseEntities_PacketID = 0
	ChooseEntities_ID                    ChooseEntities_PacketID = 3
)

var ChooseEntities_PacketID_name = map[int32]string{
	0: "PACKETID_AUTO_INVALID",
	3: "ID",
}
var ChooseEntities_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 3,
}

func (x ChooseEntities_PacketID) String() string {
	return proto.EnumName(ChooseEntities_PacketID_name, int32(x))
}
func (ChooseEntities_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

// ref: PegasusGame.ChooseOption/PacketID
type ChooseOption_PacketID int32

const (
	ChooseOption_PACKETID_AUTO_INVALID ChooseOption_PacketID = 0
	ChooseOption_ID                    ChooseOption_PacketID = 2
)

var ChooseOption_PacketID_name = map[int32]string{
	0: "PACKETID_AUTO_INVALID",
	2: "ID",
}
var ChooseOption_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 2,
}

func (x ChooseOption_PacketID) String() string {
	return proto.EnumName(ChooseOption_PacketID_name, int32(x))
}
func (ChooseOption_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

// ref: PegasusGame.Concede/PacketID
type Concede_PacketID int32

const (
	Concede_PACKETID_AUTO_INVALID Concede_PacketID = 0
	Concede_ID                    Concede_PacketID = 11
)

var Concede_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	11: "ID",
}
var Concede_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 11,
}

func (x Concede_PacketID) String() string {
	return proto.EnumName(Concede_PacketID_name, int32(x))
}
func (Concede_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

// ref: PegasusGame.DebugMessage/PacketID
type DebugMessage_PacketID int32

const (
	DebugMessage_PACKETID_AUTO_INVALID DebugMessage_PacketID = 0
	DebugMessage_ID                    DebugMessage_PacketID = 5
)

var DebugMessage_PacketID_name = map[int32]string{
	0: "PACKETID_AUTO_INVALID",
	5: "ID",
}
var DebugMessage_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 5,
}

func (x DebugMessage_PacketID) String() string {
	return proto.EnumName(DebugMessage_PacketID_name, int32(x))
}
func (DebugMessage_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

// ref: PegasusGame.EntitiesChosen/PacketID
type EntitiesChosen_PacketID int32

const (
	EntitiesChosen_PACKETID_AUTO_INVALID EntitiesChosen_PacketID = 0
	EntitiesChosen_ID                    EntitiesChosen_PacketID = 13
)

var EntitiesChosen_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	13: "ID",
}
var EntitiesChosen_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 13,
}

func (x EntitiesChosen_PacketID) String() string {
	return proto.EnumName(EntitiesChosen_PacketID_name, int32(x))
}
func (EntitiesChosen_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

// ref: PegasusGame.EntityChoices/PacketID
type EntityChoices_PacketID int32

const (
	EntityChoices_PACKETID_AUTO_INVALID EntityChoices_PacketID = 0
	EntityChoices_ID                    EntityChoices_PacketID = 17
)

var EntityChoices_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	17: "ID",
}
var EntityChoices_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 17,
}

func (x EntityChoices_PacketID) String() string {
	return proto.EnumName(EntityChoices_PacketID_name, int32(x))
}
func (EntityChoices_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

// ref: PegasusGame.GameCanceled/PacketID
type GameCanceled_PacketID int32

const (
	GameCanceled_PACKETID_AUTO_INVALID GameCanceled_PacketID = 0
	GameCanceled_ID                    GameCanceled_PacketID = 12
)

var GameCanceled_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	12: "ID",
}
var GameCanceled_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 12,
}

func (x GameCanceled_PacketID) String() string {
	return proto.EnumName(GameCanceled_PacketID_name, int32(x))
}
func (GameCanceled_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

// ref: PegasusGame.GameCanceled/Reason
type GameCanceled_Reason int32

const (
	GameCanceled_REASON_AUTO_INVALID GameCanceled_Reason = 0
	GameCanceled_OPPONENT_TIMEOUT    GameCanceled_Reason = 1
)

var GameCanceled_Reason_name = map[int32]string{
	0: "REASON_AUTO_INVALID",
	1: "OPPONENT_TIMEOUT",
}
var GameCanceled_Reason_value = map[string]int32{
	"REASON_AUTO_INVALID": 0,
	"OPPONENT_TIMEOUT":    1,
}

func (x GameCanceled_Reason) String() string {
	return proto.EnumName(GameCanceled_Reason_name, int32(x))
}
func (GameCanceled_Reason) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 1} }

// ref: PegasusGame.GameSetup/PacketID
type GameSetup_PacketID int32

const (
	GameSetup_PACKETID_AUTO_INVALID GameSetup_PacketID = 0
	GameSetup_ID                    GameSetup_PacketID = 16
)

var GameSetup_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	16: "ID",
}
var GameSetup_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 16,
}

func (x GameSetup_PacketID) String() string {
	return proto.EnumName(GameSetup_PacketID_name, int32(x))
}
func (GameSetup_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 0} }

// ref: PegasusGame.GetGameState/PacketID
type GetGameState_PacketID int32

const (
	GetGameState_PACKETID_AUTO_INVALID GetGameState_PacketID = 0
	GetGameState_ID                    GetGameState_PacketID = 1
)

var GetGameState_PacketID_name = map[int32]string{
	0: "PACKETID_AUTO_INVALID",
	1: "ID",
}
var GetGameState_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 1,
}

func (x GetGameState_PacketID) String() string {
	return proto.EnumName(GetGameState_PacketID_name, int32(x))
}
func (GetGameState_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 0} }

// ref: PegasusGame.Handshake/PacketID
type Handshake_PacketID int32

const (
	Handshake_PACKETID_AUTO_INVALID Handshake_PacketID = 0
	Handshake_ID                    Handshake_PacketID = 168
)

var Handshake_PacketID_name = map[int32]string{
	0:   "PACKETID_AUTO_INVALID",
	168: "ID",
}
var Handshake_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 168,
}

func (x Handshake_PacketID) String() string {
	return proto.EnumName(Handshake_PacketID_name, int32(x))
}
func (Handshake_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 0} }

// ref: PegasusGame.HistoryBlock/Type
type HistoryBlock_Type int32

const (
	HistoryBlock_INVALID HistoryBlock_Type = 0
	HistoryBlock_ATTACK  HistoryBlock_Type = 1
	HistoryBlock_JOUST   HistoryBlock_Type = 2
	HistoryBlock_POWER   HistoryBlock_Type = 3
	HistoryBlock_TRIGGER HistoryBlock_Type = 5
	HistoryBlock_DEATHS  HistoryBlock_Type = 6
	HistoryBlock_PLAY    HistoryBlock_Type = 7
	HistoryBlock_FATIGUE HistoryBlock_Type = 8
	HistoryBlock_RITUAL  HistoryBlock_Type = 9
)

var HistoryBlock_Type_name = map[int32]string{
	0: "INVALID",
	1: "ATTACK",
	2: "JOUST",
	3: "POWER",
	5: "TRIGGER",
	6: "DEATHS",
	7: "PLAY",
	8: "FATIGUE",
	9: "RITUAL",
}
var HistoryBlock_Type_value = map[string]int32{
	"INVALID": 0,
	"ATTACK":  1,
	"JOUST":   2,
	"POWER":   3,
	"TRIGGER": 5,
	"DEATHS":  6,
	"PLAY":    7,
	"FATIGUE": 8,
	"RITUAL":  9,
}

func (x HistoryBlock_Type) String() string {
	return proto.EnumName(HistoryBlock_Type_name, int32(x))
}
func (HistoryBlock_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 0} }

// ref: PegasusGame.HistoryMeta/Type
type HistoryMeta_Type int32

const (
	HistoryMeta_TARGET           HistoryMeta_Type = 0
	HistoryMeta_DAMAGE           HistoryMeta_Type = 1
	HistoryMeta_HEALING          HistoryMeta_Type = 2
	HistoryMeta_JOUST            HistoryMeta_Type = 3
	HistoryMeta_SHOW_BIG_CARD    HistoryMeta_Type = 5
	HistoryMeta_EFFECT_TIMING    HistoryMeta_Type = 6
	HistoryMeta_HISTORY_TARGET   HistoryMeta_Type = 7
	HistoryMeta_OVERRIDE_HISTORY HistoryMeta_Type = 8
)

var HistoryMeta_Type_name = map[int32]string{
	0: "TARGET",
	1: "DAMAGE",
	2: "HEALING",
	3: "JOUST",
	5: "SHOW_BIG_CARD",
	6: "EFFECT_TIMING",
	7: "HISTORY_TARGET",
	8: "OVERRIDE_HISTORY",
}
var HistoryMeta_Type_value = map[string]int32{
	"TARGET":           0,
	"DAMAGE":           1,
	"HEALING":          2,
	"JOUST":            3,
	"SHOW_BIG_CARD":    5,
	"EFFECT_TIMING":    6,
	"HISTORY_TARGET":   7,
	"OVERRIDE_HISTORY": 8,
}

func (x HistoryMeta_Type) String() string {
	return proto.EnumName(HistoryMeta_Type_name, int32(x))
}
func (HistoryMeta_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 0} }

// ref: PegasusGame.InviteToSpectate/PacketID
type InviteToSpectate_PacketID int32

const (
	InviteToSpectate_PACKETID_AUTO_INVALID InviteToSpectate_PacketID = 0
	InviteToSpectate_ID                    InviteToSpectate_PacketID = 25
)

var InviteToSpectate_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	25: "ID",
}
var InviteToSpectate_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 25,
}

func (x InviteToSpectate_PacketID) String() string {
	return proto.EnumName(InviteToSpectate_PacketID_name, int32(x))
}
func (InviteToSpectate_PacketID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14, 0}
}

// ref: PegasusGame.NAckOption/PacketID
type NAckOption_PacketID int32

const (
	NAckOption_PACKETID_AUTO_INVALID NAckOption_PacketID = 0
	NAckOption_ID                    NAckOption_PacketID = 10
)

var NAckOption_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	10: "ID",
}
var NAckOption_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 10,
}

func (x NAckOption_PacketID) String() string {
	return proto.EnumName(NAckOption_PacketID_name, int32(x))
}
func (NAckOption_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{16, 0} }

// ref: PegasusGame.Option/Type
type Option_Type int32

const (
	Option_TYPE_AUTO_INVALID Option_Type = 0
	Option_PASS              Option_Type = 1
	Option_END_TURN          Option_Type = 2
	Option_POWER             Option_Type = 3
)

var Option_Type_name = map[int32]string{
	0: "TYPE_AUTO_INVALID",
	1: "PASS",
	2: "END_TURN",
	3: "POWER",
}
var Option_Type_value = map[string]int32{
	"TYPE_AUTO_INVALID": 0,
	"PASS":              1,
	"END_TURN":          2,
	"POWER":             3,
}

func (x Option_Type) String() string {
	return proto.EnumName(Option_Type_name, int32(x))
}
func (Option_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{17, 0} }

// ref: PegasusGame.Ping/PacketID
type Ping_PacketID int32

const (
	Ping_PACKETID_AUTO_INVALID Ping_PacketID = 0
	Ping_ID                    Ping_PacketID = 115
)

var Ping_PacketID_name = map[int32]string{
	0:   "PACKETID_AUTO_INVALID",
	115: "ID",
}
var Ping_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 115,
}

func (x Ping_PacketID) String() string {
	return proto.EnumName(Ping_PacketID_name, int32(x))
}
func (Ping_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{18, 0} }

// ref: PegasusGame.Pong/PacketID
type Pong_PacketID int32

const (
	Pong_PACKETID_AUTO_INVALID Pong_PacketID = 0
	Pong_ID                    Pong_PacketID = 116
)

var Pong_PacketID_name = map[int32]string{
	0:   "PACKETID_AUTO_INVALID",
	116: "ID",
}
var Pong_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 116,
}

func (x Pong_PacketID) String() string {
	return proto.EnumName(Pong_PacketID_name, int32(x))
}
func (Pong_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{20, 0} }

// ref: PegasusGame.PowerHistory/PacketID
type PowerHistory_PacketID int32

const (
	PowerHistory_PACKETID_AUTO_INVALID PowerHistory_PacketID = 0
	PowerHistory_ID                    PowerHistory_PacketID = 19
)

var PowerHistory_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	19: "ID",
}
var PowerHistory_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 19,
}

func (x PowerHistory_PacketID) String() string {
	return proto.EnumName(PowerHistory_PacketID_name, int32(x))
}
func (PowerHistory_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{21, 0} }

// ref: PegasusGame.RemoveSpectators/PacketID
type RemoveSpectators_PacketID int32

const (
	RemoveSpectators_PACKETID_AUTO_INVALID RemoveSpectators_PacketID = 0
	RemoveSpectators_ID                    RemoveSpectators_PacketID = 26
)

var RemoveSpectators_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	26: "ID",
}
var RemoveSpectators_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 26,
}

func (x RemoveSpectators_PacketID) String() string {
	return proto.EnumName(RemoveSpectators_PacketID_name, int32(x))
}
func (RemoveSpectators_PacketID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{30, 0}
}

// ref: PegasusGame.ServerResult/Code
type ServerResult_Code int32

const (
	ServerResult_RESULT_OK         ServerResult_Code = 0
	ServerResult_RESULT_RETRY      ServerResult_Code = 1
	ServerResult_RESULT_NOT_EXISTS ServerResult_Code = 2
)

var ServerResult_Code_name = map[int32]string{
	0: "RESULT_OK",
	1: "RESULT_RETRY",
	2: "RESULT_NOT_EXISTS",
}
var ServerResult_Code_value = map[string]int32{
	"RESULT_OK":         0,
	"RESULT_RETRY":      1,
	"RESULT_NOT_EXISTS": 2,
}

func (x ServerResult_Code) String() string {
	return proto.EnumName(ServerResult_Code_name, int32(x))
}
func (ServerResult_Code) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{31, 0} }

// ref: PegasusGame.ServerResult/Constants
type ServerResult_Constants int32

const (
	ServerResult_CONSTANTS_AUTO_INVALID ServerResult_Constants = 0
	ServerResult_DEFAULT_RETRY_SECONDS  ServerResult_Constants = 2
)

var ServerResult_Constants_name = map[int32]string{
	0: "CONSTANTS_AUTO_INVALID",
	2: "DEFAULT_RETRY_SECONDS",
}
var ServerResult_Constants_value = map[string]int32{
	"CONSTANTS_AUTO_INVALID": 0,
	"DEFAULT_RETRY_SECONDS":  2,
}

func (x ServerResult_Constants) String() string {
	return proto.EnumName(ServerResult_Constants_name, int32(x))
}
func (ServerResult_Constants) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{31, 1} }

// ref: PegasusGame.ServerResult/PacketID
type ServerResult_PacketID int32

const (
	ServerResult_PACKETID_AUTO_INVALID ServerResult_PacketID = 0
	ServerResult_ID                    ServerResult_PacketID = 23
)

var ServerResult_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	23: "ID",
}
var ServerResult_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 23,
}

func (x ServerResult_PacketID) String() string {
	return proto.EnumName(ServerResult_PacketID_name, int32(x))
}
func (ServerResult_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{31, 2} }

// ref: PegasusGame.SpectatorHandshake/PacketID
type SpectatorHandshake_PacketID int32

const (
	SpectatorHandshake_PACKETID_AUTO_INVALID SpectatorHandshake_PacketID = 0
	SpectatorHandshake_ID                    SpectatorHandshake_PacketID = 22
)

var SpectatorHandshake_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	22: "ID",
}
var SpectatorHandshake_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 22,
}

func (x SpectatorHandshake_PacketID) String() string {
	return proto.EnumName(SpectatorHandshake_PacketID_name, int32(x))
}
func (SpectatorHandshake_PacketID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{33, 0}
}

// ref: PegasusGame.SpectatorNotify/PacketID
type SpectatorNotify_PacketID int32

const (
	SpectatorNotify_PACKETID_AUTO_INVALID SpectatorNotify_PacketID = 0
	SpectatorNotify_ID                    SpectatorNotify_PacketID = 24
)

var SpectatorNotify_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	24: "ID",
}
var SpectatorNotify_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 24,
}

func (x SpectatorNotify_PacketID) String() string {
	return proto.EnumName(SpectatorNotify_PacketID_name, int32(x))
}
func (SpectatorNotify_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{34, 0} }

// ref: PegasusGame.SpectatorRemoved/SpectatorRemovedReason
type SpectatorRemoved_SpectatorRemovedReason int32

const (
	SpectatorRemoved_SPECTATOR_REMOVED_REASON_KICKED   SpectatorRemoved_SpectatorRemovedReason = 0
	SpectatorRemoved_SPECTATOR_REMOVED_REASON_GAMEOVER SpectatorRemoved_SpectatorRemovedReason = 1
)

var SpectatorRemoved_SpectatorRemovedReason_name = map[int32]string{
	0: "SPECTATOR_REMOVED_REASON_KICKED",
	1: "SPECTATOR_REMOVED_REASON_GAMEOVER",
}
var SpectatorRemoved_SpectatorRemovedReason_value = map[string]int32{
	"SPECTATOR_REMOVED_REASON_KICKED":   0,
	"SPECTATOR_REMOVED_REASON_GAMEOVER": 1,
}

func (x SpectatorRemoved_SpectatorRemovedReason) String() string {
	return proto.EnumName(SpectatorRemoved_SpectatorRemovedReason_name, int32(x))
}
func (SpectatorRemoved_SpectatorRemovedReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{35, 0}
}

// ref: PegasusGame.TurnTimer/PacketID
type TurnTimer_PacketID int32

const (
	TurnTimer_PACKETID_AUTO_INVALID TurnTimer_PacketID = 0
	TurnTimer_ID                    TurnTimer_PacketID = 9
)

var TurnTimer_PacketID_name = map[int32]string{
	0: "PACKETID_AUTO_INVALID",
	9: "ID",
}
var TurnTimer_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 9,
}

func (x TurnTimer_PacketID) String() string {
	return proto.EnumName(TurnTimer_PacketID_name, int32(x))
}
func (TurnTimer_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{39, 0} }

// ref: PegasusGame.UserUI/PacketID
type UserUI_PacketID int32

const (
	UserUI_PACKETID_AUTO_INVALID UserUI_PacketID = 0
	UserUI_ID                    UserUI_PacketID = 15
)

var UserUI_PacketID_name = map[int32]string{
	0:  "PACKETID_AUTO_INVALID",
	15: "ID",
}
var UserUI_PacketID_value = map[string]int32{
	"PACKETID_AUTO_INVALID": 0,
	"ID": 15,
}

func (x UserUI_PacketID) String() string {
	return proto.EnumName(UserUI_PacketID_name, int32(x))
}
func (UserUI_PacketID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{40, 0} }

// ref: PegasusGame.AllOptions
type AllOptions struct {
	Id      int32     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Options []*Option `protobuf:"bytes,2,rep,name=options" json:"options,omitempty"`
}

func (m *AllOptions) Reset()                    { *m = AllOptions{} }
func (m *AllOptions) String() string            { return proto.CompactTextString(m) }
func (*AllOptions) ProtoMessage()               {}
func (*AllOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AllOptions) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AllOptions) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

// ref: PegasusGame.ChooseEntities
type ChooseEntities struct {
	Id       int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Entities []int32 `protobuf:"varint,2,rep,packed,name=entities" json:"entities,omitempty"`
}

func (m *ChooseEntities) Reset()                    { *m = ChooseEntities{} }
func (m *ChooseEntities) String() string            { return proto.CompactTextString(m) }
func (*ChooseEntities) ProtoMessage()               {}
func (*ChooseEntities) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ChooseEntities) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ChooseEntities) GetEntities() []int32 {
	if m != nil {
		return m.Entities
	}
	return nil
}

// ref: PegasusGame.ChooseOption
type ChooseOption struct {
	Id        int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Index     int32 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Target    int32 `protobuf:"varint,3,opt,name=target" json:"target,omitempty"`
	SubOption int32 `protobuf:"varint,4,opt,name=sub_option,json=subOption" json:"sub_option,omitempty"`
	Position  int32 `protobuf:"varint,5,opt,name=position" json:"position,omitempty"`
}

func (m *ChooseOption) Reset()                    { *m = ChooseOption{} }
func (m *ChooseOption) String() string            { return proto.CompactTextString(m) }
func (*ChooseOption) ProtoMessage()               {}
func (*ChooseOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ChooseOption) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ChooseOption) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ChooseOption) GetTarget() int32 {
	if m != nil {
		return m.Target
	}
	return 0
}

func (m *ChooseOption) GetSubOption() int32 {
	if m != nil {
		return m.SubOption
	}
	return 0
}

func (m *ChooseOption) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

// ref: PegasusGame.Concede
type Concede struct {
}

func (m *Concede) Reset()                    { *m = Concede{} }
func (m *Concede) String() string            { return proto.CompactTextString(m) }
func (*Concede) ProtoMessage()               {}
func (*Concede) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// ref: PegasusGame.DebugMessage
type DebugMessage struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *DebugMessage) Reset()                    { *m = DebugMessage{} }
func (m *DebugMessage) String() string            { return proto.CompactTextString(m) }
func (*DebugMessage) ProtoMessage()               {}
func (*DebugMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DebugMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// ref: PegasusGame.EntitiesChosen
type EntitiesChosen struct {
	ChooseEntities *ChooseEntities `protobuf:"bytes,3,opt,name=choose_entities,json=chooseEntities" json:"choose_entities,omitempty"`
	PlayerId       int32           `protobuf:"varint,4,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	ChoiceType     int32           `protobuf:"varint,5,opt,name=choice_type,json=choiceType" json:"choice_type,omitempty"`
}

func (m *EntitiesChosen) Reset()                    { *m = EntitiesChosen{} }
func (m *EntitiesChosen) String() string            { return proto.CompactTextString(m) }
func (*EntitiesChosen) ProtoMessage()               {}
func (*EntitiesChosen) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *EntitiesChosen) GetChooseEntities() *ChooseEntities {
	if m != nil {
		return m.ChooseEntities
	}
	return nil
}

func (m *EntitiesChosen) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *EntitiesChosen) GetChoiceType() int32 {
	if m != nil {
		return m.ChoiceType
	}
	return 0
}

// ref: PegasusGame.Entity
type Entity struct {
	Id   int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Tags []*Tag `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Entity) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Entity) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

// ref: PegasusGame.EntityChoices
type EntityChoices struct {
	Id         int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ChoiceType int32   `protobuf:"varint,2,opt,name=choice_type,json=choiceType" json:"choice_type,omitempty"`
	CountMin   int32   `protobuf:"varint,4,opt,name=count_min,json=countMin" json:"count_min,omitempty"`
	CountMax   int32   `protobuf:"varint,5,opt,name=count_max,json=countMax" json:"count_max,omitempty"`
	Entities   []int32 `protobuf:"varint,6,rep,packed,name=entities" json:"entities,omitempty"`
	Source     int32   `protobuf:"varint,7,opt,name=source" json:"source,omitempty"`
	PlayerId   int32   `protobuf:"varint,8,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	HideChosen bool    `protobuf:"varint,9,opt,name=hide_chosen,json=hideChosen" json:"hide_chosen,omitempty"`
}

func (m *EntityChoices) Reset()                    { *m = EntityChoices{} }
func (m *EntityChoices) String() string            { return proto.CompactTextString(m) }
func (*EntityChoices) ProtoMessage()               {}
func (*EntityChoices) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *EntityChoices) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EntityChoices) GetChoiceType() int32 {
	if m != nil {
		return m.ChoiceType
	}
	return 0
}

func (m *EntityChoices) GetCountMin() int32 {
	if m != nil {
		return m.CountMin
	}
	return 0
}

func (m *EntityChoices) GetCountMax() int32 {
	if m != nil {
		return m.CountMax
	}
	return 0
}

func (m *EntityChoices) GetEntities() []int32 {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *EntityChoices) GetSource() int32 {
	if m != nil {
		return m.Source
	}
	return 0
}

func (m *EntityChoices) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *EntityChoices) GetHideChosen() bool {
	if m != nil {
		return m.HideChosen
	}
	return false
}

// ref: PegasusGame.GameCanceled
type GameCanceled struct {
	Reason GameCanceled_Reason `protobuf:"varint,1,opt,name=reason,enum=pegasus.pegasusgame.GameCanceled_Reason" json:"reason,omitempty"`
}

func (m *GameCanceled) Reset()                    { *m = GameCanceled{} }
func (m *GameCanceled) String() string            { return proto.CompactTextString(m) }
func (*GameCanceled) ProtoMessage()               {}
func (*GameCanceled) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GameCanceled) GetReason() GameCanceled_Reason {
	if m != nil {
		return m.Reason
	}
	return GameCanceled_REASON_AUTO_INVALID
}

// ref: PegasusGame.GameSetup
type GameSetup struct {
	Board                       int32 `protobuf:"varint,1,opt,name=board" json:"board,omitempty"`
	MaxSecretZoneSizePerPlayer  int32 `protobuf:"varint,2,opt,name=max_secret_zone_size_per_player,json=maxSecretZoneSizePerPlayer" json:"max_secret_zone_size_per_player,omitempty"`
	MaxSecretsPerPlayer         int32 `protobuf:"varint,3,opt,name=max_secrets_per_player,json=maxSecretsPerPlayer" json:"max_secrets_per_player,omitempty"`
	MaxQuestsPerPlayer          int32 `protobuf:"varint,4,opt,name=max_quests_per_player,json=maxQuestsPerPlayer" json:"max_quests_per_player,omitempty"`
	MaxFriendlyMinionsPerPlayer int32 `protobuf:"varint,5,opt,name=max_friendly_minions_per_player,json=maxFriendlyMinionsPerPlayer" json:"max_friendly_minions_per_player,omitempty"`
	KeepAliveFrequencySeconds   int32 `protobuf:"varint,6,opt,name=keep_alive_frequency_seconds,json=keepAliveFrequencySeconds" json:"keep_alive_frequency_seconds,omitempty"`
	DisconnectWhenStuckSeconds  int32 `protobuf:"varint,7,opt,name=disconnect_when_stuck_seconds,json=disconnectWhenStuckSeconds" json:"disconnect_when_stuck_seconds,omitempty"`
}

func (m *GameSetup) Reset()                    { *m = GameSetup{} }
func (m *GameSetup) String() string            { return proto.CompactTextString(m) }
func (*GameSetup) ProtoMessage()               {}
func (*GameSetup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GameSetup) GetBoard() int32 {
	if m != nil {
		return m.Board
	}
	return 0
}

func (m *GameSetup) GetMaxSecretZoneSizePerPlayer() int32 {
	if m != nil {
		return m.MaxSecretZoneSizePerPlayer
	}
	return 0
}

func (m *GameSetup) GetMaxSecretsPerPlayer() int32 {
	if m != nil {
		return m.MaxSecretsPerPlayer
	}
	return 0
}

func (m *GameSetup) GetMaxQuestsPerPlayer() int32 {
	if m != nil {
		return m.MaxQuestsPerPlayer
	}
	return 0
}

func (m *GameSetup) GetMaxFriendlyMinionsPerPlayer() int32 {
	if m != nil {
		return m.MaxFriendlyMinionsPerPlayer
	}
	return 0
}

func (m *GameSetup) GetKeepAliveFrequencySeconds() int32 {
	if m != nil {
		return m.KeepAliveFrequencySeconds
	}
	return 0
}

func (m *GameSetup) GetDisconnectWhenStuckSeconds() int32 {
	if m != nil {
		return m.DisconnectWhenStuckSeconds
	}
	return 0
}

// ref: PegasusGame.GetGameState
type GetGameState struct {
}

func (m *GetGameState) Reset()                    { *m = GetGameState{} }
func (m *GetGameState) String() string            { return proto.CompactTextString(m) }
func (*GetGameState) ProtoMessage()               {}
func (*GetGameState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

// ref: PegasusGame.Handshake
type Handshake struct {
	GameHandle   int32                           `protobuf:"varint,1,opt,name=game_handle,json=gameHandle" json:"game_handle,omitempty"`
	Password     string                          `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	ClientHandle int64                           `protobuf:"varint,3,opt,name=client_handle,json=clientHandle" json:"client_handle,omitempty"`
	Mission      int32                           `protobuf:"varint,4,opt,name=mission" json:"mission,omitempty"`
	Version      string                          `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	Platform     *pegasus_pegasusshared.Platform `protobuf:"bytes,7,opt,name=platform" json:"platform,omitempty"`
}

func (m *Handshake) Reset()                    { *m = Handshake{} }
func (m *Handshake) String() string            { return proto.CompactTextString(m) }
func (*Handshake) ProtoMessage()               {}
func (*Handshake) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Handshake) GetGameHandle() int32 {
	if m != nil {
		return m.GameHandle
	}
	return 0
}

func (m *Handshake) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Handshake) GetClientHandle() int64 {
	if m != nil {
		return m.ClientHandle
	}
	return 0
}

func (m *Handshake) GetMission() int32 {
	if m != nil {
		return m.Mission
	}
	return 0
}

func (m *Handshake) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Handshake) GetPlatform() *pegasus_pegasusshared.Platform {
	if m != nil {
		return m.Platform
	}
	return nil
}

// ref: PegasusGame.HistoryBlock
type HistoryBlock struct {
}

func (m *HistoryBlock) Reset()                    { *m = HistoryBlock{} }
func (m *HistoryBlock) String() string            { return proto.CompactTextString(m) }
func (*HistoryBlock) ProtoMessage()               {}
func (*HistoryBlock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

// ref: PegasusGame.HistoryMeta
type HistoryMeta struct {
}

func (m *HistoryMeta) Reset()                    { *m = HistoryMeta{} }
func (m *HistoryMeta) String() string            { return proto.CompactTextString(m) }
func (*HistoryMeta) ProtoMessage()               {}
func (*HistoryMeta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

// ref: PegasusGame.InviteToSpectate
type InviteToSpectate struct {
	TargetBnetAccountId *pegasus_pegasusshared.BnetId `protobuf:"bytes,1,opt,name=target_bnet_account_id,json=targetBnetAccountId" json:"target_bnet_account_id,omitempty"`
	TargetGameAccountId *pegasus_pegasusshared.BnetId `protobuf:"bytes,2,opt,name=target_game_account_id,json=targetGameAccountId" json:"target_game_account_id,omitempty"`
}

func (m *InviteToSpectate) Reset()                    { *m = InviteToSpectate{} }
func (m *InviteToSpectate) String() string            { return proto.CompactTextString(m) }
func (*InviteToSpectate) ProtoMessage()               {}
func (*InviteToSpectate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *InviteToSpectate) GetTargetBnetAccountId() *pegasus_pegasusshared.BnetId {
	if m != nil {
		return m.TargetBnetAccountId
	}
	return nil
}

func (m *InviteToSpectate) GetTargetGameAccountId() *pegasus_pegasusshared.BnetId {
	if m != nil {
		return m.TargetGameAccountId
	}
	return nil
}

// ref: PegasusGame.MouseInfo
type MouseInfo struct {
	ArrowOrigin int32 `protobuf:"varint,1,opt,name=arrow_origin,json=arrowOrigin" json:"arrow_origin,omitempty"`
	HeldCard    int32 `protobuf:"varint,2,opt,name=held_card,json=heldCard" json:"held_card,omitempty"`
	OverCard    int32 `protobuf:"varint,3,opt,name=over_card,json=overCard" json:"over_card,omitempty"`
	X           int32 `protobuf:"varint,4,opt,name=x" json:"x,omitempty"`
	Y           int32 `protobuf:"varint,5,opt,name=y" json:"y,omitempty"`
}

func (m *MouseInfo) Reset()                    { *m = MouseInfo{} }
func (m *MouseInfo) String() string            { return proto.CompactTextString(m) }
func (*MouseInfo) ProtoMessage()               {}
func (*MouseInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *MouseInfo) GetArrowOrigin() int32 {
	if m != nil {
		return m.ArrowOrigin
	}
	return 0
}

func (m *MouseInfo) GetHeldCard() int32 {
	if m != nil {
		return m.HeldCard
	}
	return 0
}

func (m *MouseInfo) GetOverCard() int32 {
	if m != nil {
		return m.OverCard
	}
	return 0
}

func (m *MouseInfo) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *MouseInfo) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

// ref: PegasusGame.NAckOption
type NAckOption struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *NAckOption) Reset()                    { *m = NAckOption{} }
func (m *NAckOption) String() string            { return proto.CompactTextString(m) }
func (*NAckOption) ProtoMessage()               {}
func (*NAckOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *NAckOption) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// ref: PegasusGame.Option
type Option struct {
	Type       Option_Type  `protobuf:"varint,1,opt,name=type,enum=pegasus.pegasusgame.Option_Type" json:"type,omitempty"`
	MainOption *SubOption   `protobuf:"bytes,2,opt,name=main_option,json=mainOption" json:"main_option,omitempty"`
	SubOptions []*SubOption `protobuf:"bytes,3,rep,name=sub_options,json=subOptions" json:"sub_options,omitempty"`
}

func (m *Option) Reset()                    { *m = Option{} }
func (m *Option) String() string            { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()               {}
func (*Option) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Option) GetType() Option_Type {
	if m != nil {
		return m.Type
	}
	return Option_TYPE_AUTO_INVALID
}

func (m *Option) GetMainOption() *SubOption {
	if m != nil {
		return m.MainOption
	}
	return nil
}

func (m *Option) GetSubOptions() []*SubOption {
	if m != nil {
		return m.SubOptions
	}
	return nil
}

// ref: PegasusGame.Ping
type Ping struct {
}

func (m *Ping) Reset()                    { *m = Ping{} }
func (m *Ping) String() string            { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()               {}
func (*Ping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

// ref: PegasusGame.Player
type Player struct {
	Id            int32                         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	GameAccountId *pegasus_pegasusshared.BnetId `protobuf:"bytes,2,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
	CardBack      int32                         `protobuf:"varint,3,opt,name=card_back,json=cardBack" json:"card_back,omitempty"`
	Entity        *Entity                       `protobuf:"bytes,4,opt,name=entity" json:"entity,omitempty"`
}

func (m *Player) Reset()                    { *m = Player{} }
func (m *Player) String() string            { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()               {}
func (*Player) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Player) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Player) GetGameAccountId() *pegasus_pegasusshared.BnetId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

func (m *Player) GetCardBack() int32 {
	if m != nil {
		return m.CardBack
	}
	return 0
}

func (m *Player) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

// ref: PegasusGame.Pong
type Pong struct {
}

func (m *Pong) Reset()                    { *m = Pong{} }
func (m *Pong) String() string            { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()               {}
func (*Pong) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

// ref: PegasusGame.PowerHistory
type PowerHistory struct {
	List []*PowerHistoryData `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *PowerHistory) Reset()                    { *m = PowerHistory{} }
func (m *PowerHistory) String() string            { return proto.CompactTextString(m) }
func (*PowerHistory) ProtoMessage()               {}
func (*PowerHistory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *PowerHistory) GetList() []*PowerHistoryData {
	if m != nil {
		return m.List
	}
	return nil
}

// ref: PegasusGame.PowerHistoryCreateGame
type PowerHistoryCreateGame struct {
	GameEntity *Entity   `protobuf:"bytes,1,opt,name=game_entity,json=gameEntity" json:"game_entity,omitempty"`
	Players    []*Player `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
}

func (m *PowerHistoryCreateGame) Reset()                    { *m = PowerHistoryCreateGame{} }
func (m *PowerHistoryCreateGame) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryCreateGame) ProtoMessage()               {}
func (*PowerHistoryCreateGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *PowerHistoryCreateGame) GetGameEntity() *Entity {
	if m != nil {
		return m.GameEntity
	}
	return nil
}

func (m *PowerHistoryCreateGame) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

// ref: PegasusGame.PowerHistoryData
type PowerHistoryData struct {
	FullEntity   *PowerHistoryEntity     `protobuf:"bytes,1,opt,name=full_entity,json=fullEntity" json:"full_entity,omitempty"`
	ShowEntity   *PowerHistoryEntity     `protobuf:"bytes,2,opt,name=show_entity,json=showEntity" json:"show_entity,omitempty"`
	HideEntity   *PowerHistoryHide       `protobuf:"bytes,3,opt,name=hide_entity,json=hideEntity" json:"hide_entity,omitempty"`
	TagChange    *PowerHistoryTagChange  `protobuf:"bytes,4,opt,name=tag_change,json=tagChange" json:"tag_change,omitempty"`
	CreateGame   *PowerHistoryCreateGame `protobuf:"bytes,5,opt,name=create_game,json=createGame" json:"create_game,omitempty"`
	PowerStart   *PowerHistoryStart      `protobuf:"bytes,6,opt,name=power_start,json=powerStart" json:"power_start,omitempty"`
	PowerEnd     *PowerHistoryEnd        `protobuf:"bytes,7,opt,name=power_end,json=powerEnd" json:"power_end,omitempty"`
	MetaData     *PowerHistoryMetaData   `protobuf:"bytes,8,opt,name=meta_data,json=metaData" json:"meta_data,omitempty"`
	ChangeEntity *PowerHistoryEntity     `protobuf:"bytes,9,opt,name=change_entity,json=changeEntity" json:"change_entity,omitempty"`
}

func (m *PowerHistoryData) Reset()                    { *m = PowerHistoryData{} }
func (m *PowerHistoryData) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryData) ProtoMessage()               {}
func (*PowerHistoryData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *PowerHistoryData) GetFullEntity() *PowerHistoryEntity {
	if m != nil {
		return m.FullEntity
	}
	return nil
}

func (m *PowerHistoryData) GetShowEntity() *PowerHistoryEntity {
	if m != nil {
		return m.ShowEntity
	}
	return nil
}

func (m *PowerHistoryData) GetHideEntity() *PowerHistoryHide {
	if m != nil {
		return m.HideEntity
	}
	return nil
}

func (m *PowerHistoryData) GetTagChange() *PowerHistoryTagChange {
	if m != nil {
		return m.TagChange
	}
	return nil
}

func (m *PowerHistoryData) GetCreateGame() *PowerHistoryCreateGame {
	if m != nil {
		return m.CreateGame
	}
	return nil
}

func (m *PowerHistoryData) GetPowerStart() *PowerHistoryStart {
	if m != nil {
		return m.PowerStart
	}
	return nil
}

func (m *PowerHistoryData) GetPowerEnd() *PowerHistoryEnd {
	if m != nil {
		return m.PowerEnd
	}
	return nil
}

func (m *PowerHistoryData) GetMetaData() *PowerHistoryMetaData {
	if m != nil {
		return m.MetaData
	}
	return nil
}

func (m *PowerHistoryData) GetChangeEntity() *PowerHistoryEntity {
	if m != nil {
		return m.ChangeEntity
	}
	return nil
}

// ref: PegasusGame.PowerHistoryEnd
type PowerHistoryEnd struct {
}

func (m *PowerHistoryEnd) Reset()                    { *m = PowerHistoryEnd{} }
func (m *PowerHistoryEnd) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryEnd) ProtoMessage()               {}
func (*PowerHistoryEnd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

// ref: PegasusGame.PowerHistoryEntity
type PowerHistoryEntity struct {
	Entity int32  `protobuf:"varint,1,opt,name=entity" json:"entity,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Tags   []*Tag `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
}

func (m *PowerHistoryEntity) Reset()                    { *m = PowerHistoryEntity{} }
func (m *PowerHistoryEntity) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryEntity) ProtoMessage()               {}
func (*PowerHistoryEntity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *PowerHistoryEntity) GetEntity() int32 {
	if m != nil {
		return m.Entity
	}
	return 0
}

func (m *PowerHistoryEntity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PowerHistoryEntity) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

// ref: PegasusGame.PowerHistoryHide
type PowerHistoryHide struct {
	Entity int32 `protobuf:"varint,1,opt,name=entity" json:"entity,omitempty"`
	Zone   int32 `protobuf:"varint,2,opt,name=zone" json:"zone,omitempty"`
}

func (m *PowerHistoryHide) Reset()                    { *m = PowerHistoryHide{} }
func (m *PowerHistoryHide) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryHide) ProtoMessage()               {}
func (*PowerHistoryHide) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *PowerHistoryHide) GetEntity() int32 {
	if m != nil {
		return m.Entity
	}
	return 0
}

func (m *PowerHistoryHide) GetZone() int32 {
	if m != nil {
		return m.Zone
	}
	return 0
}

// ref: PegasusGame.PowerHistoryMetaData
type PowerHistoryMetaData struct {
	Info []int32          `protobuf:"varint,2,rep,packed,name=info" json:"info,omitempty"`
	Type HistoryMeta_Type `protobuf:"varint,3,opt,name=type,enum=pegasus.pegasusgame.HistoryMeta_Type" json:"type,omitempty"`
	Data int32            `protobuf:"varint,4,opt,name=data" json:"data,omitempty"`
}

func (m *PowerHistoryMetaData) Reset()                    { *m = PowerHistoryMetaData{} }
func (m *PowerHistoryMetaData) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryMetaData) ProtoMessage()               {}
func (*PowerHistoryMetaData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *PowerHistoryMetaData) GetInfo() []int32 {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *PowerHistoryMetaData) GetType() HistoryMeta_Type {
	if m != nil {
		return m.Type
	}
	return HistoryMeta_TARGET
}

func (m *PowerHistoryMetaData) GetData() int32 {
	if m != nil {
		return m.Data
	}
	return 0
}

// ref: PegasusGame.PowerHistoryStart
type PowerHistoryStart struct {
	Type         HistoryBlock_Type `protobuf:"varint,1,opt,name=type,enum=pegasus.pegasusgame.HistoryBlock_Type" json:"type,omitempty"`
	Index        int32             `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Source       int32             `protobuf:"varint,3,opt,name=source" json:"source,omitempty"`
	Target       int32             `protobuf:"varint,4,opt,name=target" json:"target,omitempty"`
	EffectCardId string            `protobuf:"bytes,5,opt,name=effect_card_id,json=effectCardId" json:"effect_card_id,omitempty"`
}

func (m *PowerHistoryStart) Reset()                    { *m = PowerHistoryStart{} }
func (m *PowerHistoryStart) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryStart) ProtoMessage()               {}
func (*PowerHistoryStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *PowerHistoryStart) GetType() HistoryBlock_Type {
	if m != nil {
		return m.Type
	}
	return HistoryBlock_INVALID
}

func (m *PowerHistoryStart) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *PowerHistoryStart) GetSource() int32 {
	if m != nil {
		return m.Source
	}
	return 0
}

func (m *PowerHistoryStart) GetTarget() int32 {
	if m != nil {
		return m.Target
	}
	return 0
}

func (m *PowerHistoryStart) GetEffectCardId() string {
	if m != nil {
		return m.EffectCardId
	}
	return ""
}

// ref: PegasusGame.PowerHistoryTagChange
type PowerHistoryTagChange struct {
	Entity int32 `protobuf:"varint,1,opt,name=entity" json:"entity,omitempty"`
	Tag    int32 `protobuf:"varint,2,opt,name=tag" json:"tag,omitempty"`
	Value  int32 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
}

func (m *PowerHistoryTagChange) Reset()                    { *m = PowerHistoryTagChange{} }
func (m *PowerHistoryTagChange) String() string            { return proto.CompactTextString(m) }
func (*PowerHistoryTagChange) ProtoMessage()               {}
func (*PowerHistoryTagChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *PowerHistoryTagChange) GetEntity() int32 {
	if m != nil {
		return m.Entity
	}
	return 0
}

func (m *PowerHistoryTagChange) GetTag() int32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

func (m *PowerHistoryTagChange) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// ref: PegasusGame.RemoveSpectators
type RemoveSpectators struct {
	TargetGameaccountIds        []*pegasus_pegasusshared.BnetId `protobuf:"bytes,1,rep,name=target_gameaccount_ids,json=targetGameaccountIds" json:"target_gameaccount_ids,omitempty"`
	KickAllSpectators           bool                            `protobuf:"varint,2,opt,name=kick_all_spectators,json=kickAllSpectators" json:"kick_all_spectators,omitempty"`
	RegenerateSpectatorPassword bool                            `protobuf:"varint,3,opt,name=regenerate_spectator_password,json=regenerateSpectatorPassword" json:"regenerate_spectator_password,omitempty"`
}

func (m *RemoveSpectators) Reset()                    { *m = RemoveSpectators{} }
func (m *RemoveSpectators) String() string            { return proto.CompactTextString(m) }
func (*RemoveSpectators) ProtoMessage()               {}
func (*RemoveSpectators) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *RemoveSpectators) GetTargetGameaccountIds() []*pegasus_pegasusshared.BnetId {
	if m != nil {
		return m.TargetGameaccountIds
	}
	return nil
}

func (m *RemoveSpectators) GetKickAllSpectators() bool {
	if m != nil {
		return m.KickAllSpectators
	}
	return false
}

func (m *RemoveSpectators) GetRegenerateSpectatorPassword() bool {
	if m != nil {
		return m.RegenerateSpectatorPassword
	}
	return false
}

// ref: PegasusGame.ServerResult
type ServerResult struct {
	ResultCode        int32   `protobuf:"varint,1,opt,name=result_code,json=resultCode" json:"result_code,omitempty"`
	RetryDelaySeconds float32 `protobuf:"fixed32,2,opt,name=retry_delay_seconds,json=retryDelaySeconds" json:"retry_delay_seconds,omitempty"`
}

func (m *ServerResult) Reset()                    { *m = ServerResult{} }
func (m *ServerResult) String() string            { return proto.CompactTextString(m) }
func (*ServerResult) ProtoMessage()               {}
func (*ServerResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ServerResult) GetResultCode() int32 {
	if m != nil {
		return m.ResultCode
	}
	return 0
}

func (m *ServerResult) GetRetryDelaySeconds() float32 {
	if m != nil {
		return m.RetryDelaySeconds
	}
	return 0
}

// ref: PegasusGame.SpectatorChange
type SpectatorChange struct {
	GameAccountId *pegasus_pegasusshared.BnetId `protobuf:"bytes,1,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
	IsRemoved     bool                          `protobuf:"varint,2,opt,name=is_removed,json=isRemoved" json:"is_removed,omitempty"`
}

func (m *SpectatorChange) Reset()                    { *m = SpectatorChange{} }
func (m *SpectatorChange) String() string            { return proto.CompactTextString(m) }
func (*SpectatorChange) ProtoMessage()               {}
func (*SpectatorChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *SpectatorChange) GetGameAccountId() *pegasus_pegasusshared.BnetId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

func (m *SpectatorChange) GetIsRemoved() bool {
	if m != nil {
		return m.IsRemoved
	}
	return false
}

// ref: PegasusGame.SpectatorHandshake
type SpectatorHandshake struct {
	GameHandle    int32                           `protobuf:"varint,1,opt,name=game_handle,json=gameHandle" json:"game_handle,omitempty"`
	Password      string                          `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Version       string                          `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	Platform      *pegasus_pegasusshared.Platform `protobuf:"bytes,4,opt,name=platform" json:"platform,omitempty"`
	GameAccountId *pegasus_pegasusshared.BnetId   `protobuf:"bytes,5,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
}

func (m *SpectatorHandshake) Reset()                    { *m = SpectatorHandshake{} }
func (m *SpectatorHandshake) String() string            { return proto.CompactTextString(m) }
func (*SpectatorHandshake) ProtoMessage()               {}
func (*SpectatorHandshake) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *SpectatorHandshake) GetGameHandle() int32 {
	if m != nil {
		return m.GameHandle
	}
	return 0
}

func (m *SpectatorHandshake) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SpectatorHandshake) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *SpectatorHandshake) GetPlatform() *pegasus_pegasusshared.Platform {
	if m != nil {
		return m.Platform
	}
	return nil
}

func (m *SpectatorHandshake) GetGameAccountId() *pegasus_pegasusshared.BnetId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

// ref: PegasusGame.SpectatorNotify
type SpectatorNotify struct {
	PlayerId                int32              `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	ChooseOption            *ChooseOption      `protobuf:"bytes,2,opt,name=choose_option,json=chooseOption" json:"choose_option,omitempty"`
	SpectatorChange         []*SpectatorChange `protobuf:"bytes,4,rep,name=spectator_change,json=spectatorChange" json:"spectator_change,omitempty"`
	SpectatorPasswordUpdate string             `protobuf:"bytes,5,opt,name=spectator_password_update,json=spectatorPasswordUpdate" json:"spectator_password_update,omitempty"`
	SpectatorRemoved        *SpectatorRemoved  `protobuf:"bytes,6,opt,name=spectator_removed,json=spectatorRemoved" json:"spectator_removed,omitempty"`
}

func (m *SpectatorNotify) Reset()                    { *m = SpectatorNotify{} }
func (m *SpectatorNotify) String() string            { return proto.CompactTextString(m) }
func (*SpectatorNotify) ProtoMessage()               {}
func (*SpectatorNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *SpectatorNotify) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *SpectatorNotify) GetChooseOption() *ChooseOption {
	if m != nil {
		return m.ChooseOption
	}
	return nil
}

func (m *SpectatorNotify) GetSpectatorChange() []*SpectatorChange {
	if m != nil {
		return m.SpectatorChange
	}
	return nil
}

func (m *SpectatorNotify) GetSpectatorPasswordUpdate() string {
	if m != nil {
		return m.SpectatorPasswordUpdate
	}
	return ""
}

func (m *SpectatorNotify) GetSpectatorRemoved() *SpectatorRemoved {
	if m != nil {
		return m.SpectatorRemoved
	}
	return nil
}

// ref: PegasusGame.SpectatorRemoved
type SpectatorRemoved struct {
	ReasonCode int32                         `protobuf:"varint,1,opt,name=reason_code,json=reasonCode" json:"reason_code,omitempty"`
	RemovedBy  *pegasus_pegasusshared.BnetId `protobuf:"bytes,2,opt,name=removed_by,json=removedBy" json:"removed_by,omitempty"`
}

func (m *SpectatorRemoved) Reset()                    { *m = SpectatorRemoved{} }
func (m *SpectatorRemoved) String() string            { return proto.CompactTextString(m) }
func (*SpectatorRemoved) ProtoMessage()               {}
func (*SpectatorRemoved) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *SpectatorRemoved) GetReasonCode() int32 {
	if m != nil {
		return m.ReasonCode
	}
	return 0
}

func (m *SpectatorRemoved) GetRemovedBy() *pegasus_pegasusshared.BnetId {
	if m != nil {
		return m.RemovedBy
	}
	return nil
}

// ref: PegasusGame.SubOption
type SubOption struct {
	Id             int32           `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Targets        []*TargetOption `protobuf:"bytes,3,rep,name=targets" json:"targets,omitempty"`
	PlayError      int32           `protobuf:"varint,4,opt,name=play_error,json=playError" json:"play_error,omitempty"`
	PlayErrorParam int32           `protobuf:"varint,5,opt,name=play_error_param,json=playErrorParam" json:"play_error_param,omitempty"`
}

func (m *SubOption) Reset()                    { *m = SubOption{} }
func (m *SubOption) String() string            { return proto.CompactTextString(m) }
func (*SubOption) ProtoMessage()               {}
func (*SubOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *SubOption) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SubOption) GetTargets() []*TargetOption {
	if m != nil {
		return m.Targets
	}
	return nil
}

func (m *SubOption) GetPlayError() int32 {
	if m != nil {
		return m.PlayError
	}
	return 0
}

func (m *SubOption) GetPlayErrorParam() int32 {
	if m != nil {
		return m.PlayErrorParam
	}
	return 0
}

// ref: PegasusGame.Tag
type Tag struct {
	Name  int32 `protobuf:"varint,1,opt,name=name" json:"name,omitempty"`
	Value int32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *Tag) GetName() int32 {
	if m != nil {
		return m.Name
	}
	return 0
}

func (m *Tag) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// ref: PegasusGame.TargetOption
type TargetOption struct {
	Id             int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	PlayError      int32 `protobuf:"varint,2,opt,name=play_error,json=playError" json:"play_error,omitempty"`
	PlayErrorParam int32 `protobuf:"varint,3,opt,name=play_error_param,json=playErrorParam" json:"play_error_param,omitempty"`
}

func (m *TargetOption) Reset()                    { *m = TargetOption{} }
func (m *TargetOption) String() string            { return proto.CompactTextString(m) }
func (*TargetOption) ProtoMessage()               {}
func (*TargetOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *TargetOption) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TargetOption) GetPlayError() int32 {
	if m != nil {
		return m.PlayError
	}
	return 0
}

func (m *TargetOption) GetPlayErrorParam() int32 {
	if m != nil {
		return m.PlayErrorParam
	}
	return 0
}

// ref: PegasusGame.TurnTimer
type TurnTimer struct {
	Seconds int32 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	Turn    int32 `protobuf:"varint,2,opt,name=turn" json:"turn,omitempty"`
	Show    bool  `protobuf:"varint,3,opt,name=show" json:"show,omitempty"`
}

func (m *TurnTimer) Reset()                    { *m = TurnTimer{} }
func (m *TurnTimer) String() string            { return proto.CompactTextString(m) }
func (*TurnTimer) ProtoMessage()               {}
func (*TurnTimer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *TurnTimer) GetSeconds() int32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *TurnTimer) GetTurn() int32 {
	if m != nil {
		return m.Turn
	}
	return 0
}

func (m *TurnTimer) GetShow() bool {
	if m != nil {
		return m.Show
	}
	return false
}

// ref: PegasusGame.UserUI
type UserUI struct {
	MouseInfo *MouseInfo `protobuf:"bytes,1,opt,name=mouse_info,json=mouseInfo" json:"mouse_info,omitempty"`
	Emote     int32      `protobuf:"varint,2,opt,name=emote" json:"emote,omitempty"`
	PlayerId  int32      `protobuf:"varint,3,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
}

func (m *UserUI) Reset()                    { *m = UserUI{} }
func (m *UserUI) String() string            { return proto.CompactTextString(m) }
func (*UserUI) ProtoMessage()               {}
func (*UserUI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *UserUI) GetMouseInfo() *MouseInfo {
	if m != nil {
		return m.MouseInfo
	}
	return nil
}

func (m *UserUI) GetEmote() int32 {
	if m != nil {
		return m.Emote
	}
	return 0
}

func (m *UserUI) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func init() {
	proto.RegisterType((*AllOptions)(nil), "pegasus.pegasusgame.AllOptions")
	proto.RegisterType((*ChooseEntities)(nil), "pegasus.pegasusgame.ChooseEntities")
	proto.RegisterType((*ChooseOption)(nil), "pegasus.pegasusgame.ChooseOption")
	proto.RegisterType((*Concede)(nil), "pegasus.pegasusgame.Concede")
	proto.RegisterType((*DebugMessage)(nil), "pegasus.pegasusgame.DebugMessage")
	proto.RegisterType((*EntitiesChosen)(nil), "pegasus.pegasusgame.EntitiesChosen")
	proto.RegisterType((*Entity)(nil), "pegasus.pegasusgame.Entity")
	proto.RegisterType((*EntityChoices)(nil), "pegasus.pegasusgame.EntityChoices")
	proto.RegisterType((*GameCanceled)(nil), "pegasus.pegasusgame.GameCanceled")
	proto.RegisterType((*GameSetup)(nil), "pegasus.pegasusgame.GameSetup")
	proto.RegisterType((*GetGameState)(nil), "pegasus.pegasusgame.GetGameState")
	proto.RegisterType((*Handshake)(nil), "pegasus.pegasusgame.Handshake")
	proto.RegisterType((*HistoryBlock)(nil), "pegasus.pegasusgame.HistoryBlock")
	proto.RegisterType((*HistoryMeta)(nil), "pegasus.pegasusgame.HistoryMeta")
	proto.RegisterType((*InviteToSpectate)(nil), "pegasus.pegasusgame.InviteToSpectate")
	proto.RegisterType((*MouseInfo)(nil), "pegasus.pegasusgame.MouseInfo")
	proto.RegisterType((*NAckOption)(nil), "pegasus.pegasusgame.NAckOption")
	proto.RegisterType((*Option)(nil), "pegasus.pegasusgame.Option")
	proto.RegisterType((*Ping)(nil), "pegasus.pegasusgame.Ping")
	proto.RegisterType((*Player)(nil), "pegasus.pegasusgame.Player")
	proto.RegisterType((*Pong)(nil), "pegasus.pegasusgame.Pong")
	proto.RegisterType((*PowerHistory)(nil), "pegasus.pegasusgame.PowerHistory")
	proto.RegisterType((*PowerHistoryCreateGame)(nil), "pegasus.pegasusgame.PowerHistoryCreateGame")
	proto.RegisterType((*PowerHistoryData)(nil), "pegasus.pegasusgame.PowerHistoryData")
	proto.RegisterType((*PowerHistoryEnd)(nil), "pegasus.pegasusgame.PowerHistoryEnd")
	proto.RegisterType((*PowerHistoryEntity)(nil), "pegasus.pegasusgame.PowerHistoryEntity")
	proto.RegisterType((*PowerHistoryHide)(nil), "pegasus.pegasusgame.PowerHistoryHide")
	proto.RegisterType((*PowerHistoryMetaData)(nil), "pegasus.pegasusgame.PowerHistoryMetaData")
	proto.RegisterType((*PowerHistoryStart)(nil), "pegasus.pegasusgame.PowerHistoryStart")
	proto.RegisterType((*PowerHistoryTagChange)(nil), "pegasus.pegasusgame.PowerHistoryTagChange")
	proto.RegisterType((*RemoveSpectators)(nil), "pegasus.pegasusgame.RemoveSpectators")
	proto.RegisterType((*ServerResult)(nil), "pegasus.pegasusgame.ServerResult")
	proto.RegisterType((*SpectatorChange)(nil), "pegasus.pegasusgame.SpectatorChange")
	proto.RegisterType((*SpectatorHandshake)(nil), "pegasus.pegasusgame.SpectatorHandshake")
	proto.RegisterType((*SpectatorNotify)(nil), "pegasus.pegasusgame.SpectatorNotify")
	proto.RegisterType((*SpectatorRemoved)(nil), "pegasus.pegasusgame.SpectatorRemoved")
	proto.RegisterType((*SubOption)(nil), "pegasus.pegasusgame.SubOption")
	proto.RegisterType((*Tag)(nil), "pegasus.pegasusgame.Tag")
	proto.RegisterType((*TargetOption)(nil), "pegasus.pegasusgame.TargetOption")
	proto.RegisterType((*TurnTimer)(nil), "pegasus.pegasusgame.TurnTimer")
	proto.RegisterType((*UserUI)(nil), "pegasus.pegasusgame.UserUI")
	proto.RegisterEnum("pegasus.pegasusgame.AllOptions_PacketID", AllOptions_PacketID_name, AllOptions_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.ChooseEntities_PacketID", ChooseEntities_PacketID_name, ChooseEntities_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.ChooseOption_PacketID", ChooseOption_PacketID_name, ChooseOption_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.Concede_PacketID", Concede_PacketID_name, Concede_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.DebugMessage_PacketID", DebugMessage_PacketID_name, DebugMessage_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.EntitiesChosen_PacketID", EntitiesChosen_PacketID_name, EntitiesChosen_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.EntityChoices_PacketID", EntityChoices_PacketID_name, EntityChoices_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.GameCanceled_PacketID", GameCanceled_PacketID_name, GameCanceled_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.GameCanceled_Reason", GameCanceled_Reason_name, GameCanceled_Reason_value)
	proto.RegisterEnum("pegasus.pegasusgame.GameSetup_PacketID", GameSetup_PacketID_name, GameSetup_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.GetGameState_PacketID", GetGameState_PacketID_name, GetGameState_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.Handshake_PacketID", Handshake_PacketID_name, Handshake_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.HistoryBlock_Type", HistoryBlock_Type_name, HistoryBlock_Type_value)
	proto.RegisterEnum("pegasus.pegasusgame.HistoryMeta_Type", HistoryMeta_Type_name, HistoryMeta_Type_value)
	proto.RegisterEnum("pegasus.pegasusgame.InviteToSpectate_PacketID", InviteToSpectate_PacketID_name, InviteToSpectate_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.NAckOption_PacketID", NAckOption_PacketID_name, NAckOption_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.Option_Type", Option_Type_name, Option_Type_value)
	proto.RegisterEnum("pegasus.pegasusgame.Ping_PacketID", Ping_PacketID_name, Ping_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.Pong_PacketID", Pong_PacketID_name, Pong_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.PowerHistory_PacketID", PowerHistory_PacketID_name, PowerHistory_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.RemoveSpectators_PacketID", RemoveSpectators_PacketID_name, RemoveSpectators_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.ServerResult_Code", ServerResult_Code_name, ServerResult_Code_value)
	proto.RegisterEnum("pegasus.pegasusgame.ServerResult_Constants", ServerResult_Constants_name, ServerResult_Constants_value)
	proto.RegisterEnum("pegasus.pegasusgame.ServerResult_PacketID", ServerResult_PacketID_name, ServerResult_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.SpectatorHandshake_PacketID", SpectatorHandshake_PacketID_name, SpectatorHandshake_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.SpectatorNotify_PacketID", SpectatorNotify_PacketID_name, SpectatorNotify_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.SpectatorRemoved_SpectatorRemovedReason", SpectatorRemoved_SpectatorRemovedReason_name, SpectatorRemoved_SpectatorRemovedReason_value)
	proto.RegisterEnum("pegasus.pegasusgame.TurnTimer_PacketID", TurnTimer_PacketID_name, TurnTimer_PacketID_value)
	proto.RegisterEnum("pegasus.pegasusgame.UserUI_PacketID", UserUI_PacketID_name, UserUI_PacketID_value)
}

func init() { proto.RegisterFile("pegasus/pegasusgame/pegasusgame.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2544 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x59, 0x4b, 0x6f, 0xe3, 0xc8,
	0xf1, 0x5f, 0x4a, 0x96, 0x2c, 0x96, 0x64, 0x0f, 0xdd, 0x33, 0xe3, 0xf5, 0x78, 0xfe, 0xf3, 0x9f,
	0x19, 0xee, 0x23, 0xb3, 0x09, 0xe2, 0x4d, 0xbc, 0x09, 0x92, 0xdd, 0xec, 0x8b, 0x96, 0x68, 0x5b,
	0x3b, 0xb6, 0xa4, 0x90, 0xf4, 0x38, 0x93, 0x4b, 0xa3, 0x4d, 0xb6, 0x25, 0xc2, 0x12, 0xa9, 0x25,
	0x29, 0xdb, 0x1a, 0xec, 0x25, 0x40, 0xb0, 0x87, 0x1c, 0x02, 0x24, 0x87, 0x5c, 0x02, 0xe4, 0x16,
	0x20, 0x7b, 0xcc, 0x25, 0x08, 0x90, 0x0f, 0x90, 0x43, 0x3e, 0x40, 0x3e, 0x43, 0xbe, 0x45, 0xd0,
	0x0f, 0x52, 0x0f, 0xcb, 0xf6, 0x70, 0x91, 0x93, 0xd8, 0xdd, 0x55, 0xd5, 0xd5, 0x55, 0xbf, 0xae,
	0x47, 0x0b, 0xde, 0x19, 0xd2, 0x2e, 0x89, 0x47, 0xf1, 0xfb, 0xf2, 0xb7, 0x4b, 0x06, 0x74, 0xfa,
	0x7b, 0x6b, 0x18, 0x85, 0x49, 0x88, 0xee, 0xca, 0xa9, 0xad, 0xa9, 0xa5, 0xcd, 0xf7, 0xe6, 0x78,
	0xe3, 0x1e, 0x89, 0xa8, 0x37, 0x3b, 0x12, 0xfc, 0xfa, 0xd7, 0x0a, 0x80, 0xd1, 0xef, 0xb7, 0x87,
	0x89, 0x1f, 0x06, 0x31, 0x5a, 0x85, 0x82, 0xef, 0x6d, 0x28, 0x4f, 0x94, 0x67, 0x25, 0xab, 0xe0,
	0x7b, 0xe8, 0x43, 0x58, 0x0e, 0xc5, 0xd2, 0x46, 0xe1, 0x49, 0xf1, 0x59, 0x75, 0xfb, 0xe1, 0xd6,
	0x82, 0x0d, 0xb7, 0x04, 0xfb, 0x4e, 0x41, 0x7b, 0xc3, 0x4a, 0xe9, 0xf5, 0xef, 0x43, 0xa5, 0x43,
	0xdc, 0x33, 0x9a, 0x34, 0x1b, 0xe8, 0x01, 0xdc, 0xef, 0x18, 0xf5, 0xe7, 0xa6, 0xd3, 0x6c, 0x60,
	0xe3, 0xc8, 0x69, 0xe3, 0x66, 0xeb, 0x85, 0x71, 0xd0, 0x6c, 0x68, 0x6f, 0xa0, 0x32, 0x14, 0x9a,
	0x0d, 0x6d, 0x55, 0x3f, 0x83, 0xd5, 0x7a, 0x2f, 0x0c, 0x63, 0x6a, 0x06, 0x89, 0x9f, 0xf8, 0xf4,
	0xaa, 0x2e, 0x9b, 0x50, 0xa1, 0x72, 0x8d, 0x2b, 0x53, 0xb2, 0xb2, 0x71, 0xbe, 0xcd, 0x8a, 0xfa,
	0xdf, 0x14, 0xa8, 0x89, 0xdd, 0x84, 0xe6, 0x57, 0xf6, 0xba, 0x07, 0x25, 0x3f, 0xf0, 0xe8, 0xe5,
	0x46, 0x81, 0x4f, 0x89, 0x01, 0x5a, 0x87, 0x72, 0x42, 0xa2, 0x2e, 0x4d, 0x36, 0x8a, 0x7c, 0x5a,
	0x8e, 0xd0, 0x23, 0x80, 0x78, 0x74, 0x82, 0xc5, 0xc9, 0x37, 0x96, 0xf8, 0x9a, 0x1a, 0x8f, 0x4e,
	0xa4, 0xf0, 0x4d, 0xa8, 0x0c, 0xc3, 0xd8, 0xe7, 0x8b, 0x25, 0xbe, 0x98, 0x8d, 0xf3, 0x29, 0x5e,
	0xd0, 0x7f, 0x0a, 0xcb, 0xf5, 0x30, 0x70, 0xa9, 0x47, 0xf3, 0x71, 0x56, 0xf5, 0x63, 0xa8, 0x35,
	0xe8, 0xc9, 0xa8, 0x7b, 0x48, 0xe3, 0x98, 0x74, 0x29, 0xda, 0x80, 0xe5, 0x81, 0xf8, 0xe4, 0xc7,
	0x56, 0xad, 0x74, 0x98, 0x4f, 0x70, 0x49, 0xff, 0x97, 0x02, 0xab, 0xa9, 0xcf, 0xea, 0xbd, 0x30,
	0xa6, 0x01, 0x3a, 0x80, 0x3b, 0x2e, 0xb7, 0x2e, 0xce, 0x1c, 0xc6, 0x0c, 0x56, 0xdd, 0x7e, 0x6b,
	0x21, 0x7a, 0x66, 0xfd, 0x6e, 0xad, 0xba, 0xb3, 0x38, 0x78, 0x08, 0xea, 0xb0, 0x4f, 0xc6, 0x34,
	0xc2, 0xbe, 0x27, 0x8d, 0x5b, 0x11, 0x13, 0x4d, 0x0f, 0x3d, 0x86, 0xaa, 0xdb, 0x0b, 0x7d, 0x97,
	0xe2, 0x64, 0x3c, 0xa4, 0xd2, 0xbc, 0x20, 0xa6, 0x9c, 0xf1, 0x30, 0xe7, 0x69, 0x56, 0xf4, 0x2f,
	0xa0, 0xcc, 0x37, 0x1e, 0x5f, 0x81, 0xc4, 0x0f, 0x60, 0x29, 0x21, 0xdd, 0xf4, 0x1e, 0x6c, 0x2c,
	0x3c, 0x89, 0x43, 0xba, 0xfc, 0x12, 0x70, 0x4a, 0xfd, 0x8f, 0x05, 0x58, 0x11, 0xc2, 0xea, 0x5c,
	0x9f, 0xab, 0x90, 0x9e, 0xd3, 0xbe, 0x30, 0xaf, 0x3d, 0x3b, 0xbb, 0x1b, 0x8e, 0x82, 0x04, 0x0f,
	0xfc, 0x14, 0x58, 0x15, 0x3e, 0x71, 0xe8, 0x07, 0x53, 0x8b, 0xe4, 0x32, 0x05, 0x96, 0x58, 0x24,
	0x97, 0x33, 0xb7, 0xa5, 0x3c, 0x7b, 0x5b, 0x18, 0x8e, 0xe3, 0x70, 0x14, 0xb9, 0x74, 0x63, 0x59,
	0xe0, 0x58, 0x8c, 0x66, 0x2d, 0x5d, 0xb9, 0x6a, 0xe9, 0x9e, 0xef, 0x51, 0xec, 0x72, 0x1f, 0x6f,
	0xa8, 0x4f, 0x94, 0x67, 0x15, 0x0b, 0xd8, 0x94, 0xf0, 0x7a, 0x3e, 0x4b, 0xaf, 0xe9, 0x7f, 0x57,
	0xa0, 0xb6, 0x47, 0x06, 0xb4, 0x4e, 0x02, 0x97, 0xf6, 0xa9, 0x87, 0x3e, 0x87, 0x72, 0x44, 0x49,
	0x1c, 0x06, 0xdc, 0x40, 0xab, 0xdb, 0xcf, 0x16, 0x9a, 0x78, 0x9a, 0x65, 0xcb, 0xe2, 0xf4, 0x96,
	0xe4, 0xcb, 0xa7, 0x41, 0x4d, 0xff, 0x09, 0x94, 0x85, 0x00, 0xf4, 0x26, 0xdc, 0xb5, 0x4c, 0xc3,
	0x6e, 0xb7, 0xe6, 0x49, 0xef, 0x81, 0xd6, 0xee, 0x74, 0xda, 0x2d, 0xb3, 0xe5, 0x60, 0xa7, 0x79,
	0x68, 0xb6, 0x8f, 0x1c, 0x4d, 0xd1, 0xff, 0x59, 0x04, 0x95, 0xe9, 0x61, 0xd3, 0x64, 0x34, 0x64,
	0xb1, 0xe2, 0x24, 0x24, 0x51, 0xea, 0x57, 0x31, 0x40, 0x75, 0x78, 0x3c, 0x20, 0x97, 0x38, 0xa6,
	0x6e, 0x44, 0x13, 0xfc, 0x2a, 0x0c, 0x28, 0x8e, 0xfd, 0x57, 0x14, 0x0f, 0x69, 0x84, 0x85, 0x4d,
	0xa5, 0xbb, 0x37, 0x07, 0xe4, 0xd2, 0xe6, 0x54, 0xbf, 0x0c, 0x03, 0x6a, 0xfb, 0xaf, 0x68, 0x87,
	0x46, 0x1d, 0x4e, 0x81, 0x3e, 0x80, 0xf5, 0x89, 0x90, 0x78, 0x9a, 0x57, 0x04, 0xa0, 0xbb, 0x19,
	0x6f, 0x3c, 0x61, 0xfa, 0x21, 0xdc, 0x67, 0x4c, 0x5f, 0x8e, 0x68, 0x3c, 0xcb, 0x23, 0xf0, 0x83,
	0x06, 0xe4, 0xf2, 0xe7, 0x7c, 0x6d, 0xc2, 0xd2, 0x10, 0xca, 0x9e, 0x46, 0x3e, 0x0d, 0xbc, 0xfe,
	0x98, 0xa1, 0x8d, 0xc5, 0xf0, 0x69, 0x66, 0x81, 0xaf, 0x87, 0x03, 0x72, 0xb9, 0x2b, 0xa9, 0x0e,
	0x05, 0xd1, 0x44, 0xca, 0x67, 0xf0, 0x7f, 0x67, 0x94, 0x0e, 0x31, 0xe9, 0xfb, 0xe7, 0x14, 0x9f,
	0x46, 0xf4, 0xcb, 0x11, 0x0d, 0xdc, 0x31, 0x53, 0x3f, 0x0c, 0x3c, 0x06, 0x43, 0x26, 0xe2, 0x01,
	0xa3, 0x31, 0x18, 0xc9, 0x6e, 0x4a, 0x61, 0x0b, 0x02, 0x64, 0xc0, 0x23, 0xcf, 0x8f, 0xdd, 0x30,
	0x08, 0xa8, 0x9b, 0xe0, 0x8b, 0x1e, 0x0d, 0x70, 0x9c, 0x8c, 0xdc, 0xb3, 0x4c, 0x82, 0x80, 0xeb,
	0xe6, 0x84, 0xe8, 0xb8, 0x47, 0x03, 0x9b, 0x91, 0x48, 0x11, 0xf9, 0x20, 0xa0, 0xe9, 0x9f, 0x40,
	0x6d, 0x8f, 0x26, 0xdc, 0x97, 0x09, 0x49, 0x72, 0x46, 0x0b, 0x45, 0xff, 0x6d, 0x01, 0xd4, 0x7d,
	0x12, 0x78, 0x71, 0x8f, 0x9c, 0x51, 0x76, 0x43, 0x18, 0x44, 0x71, 0x8f, 0x04, 0x5e, 0x9f, 0x4a,
	0x38, 0x00, 0x9b, 0xda, 0xe7, 0x33, 0x3c, 0x11, 0x90, 0x38, 0xbe, 0x08, 0x23, 0x8f, 0x3b, 0x5f,
	0xb5, 0xb2, 0x31, 0x7a, 0x0b, 0x56, 0xdc, 0xbe, 0x4f, 0x83, 0x24, 0x65, 0x67, 0x1e, 0x2e, 0x5a,
	0x35, 0x31, 0x29, 0x05, 0xb0, 0xa0, 0xed, 0xc7, 0xf1, 0x24, 0xcb, 0xa4, 0x43, 0xb6, 0x72, 0x4e,
	0xa3, 0x38, 0x4d, 0x31, 0xaa, 0x95, 0x0e, 0xd1, 0xcf, 0x80, 0xdd, 0xe1, 0xe4, 0x34, 0x8c, 0x06,
	0xdc, 0x7e, 0xd5, 0xed, 0xc7, 0xf3, 0x17, 0x4b, 0x56, 0x04, 0x1d, 0x49, 0x66, 0x65, 0x0c, 0xfa,
	0xd6, 0xeb, 0xd9, 0x63, 0x99, 0xdb, 0xe3, 0x2f, 0x8a, 0xfe, 0x2b, 0x05, 0x6a, 0xfb, 0x7e, 0x9c,
	0x84, 0xd1, 0x78, 0xa7, 0x1f, 0xba, 0x67, 0xfa, 0x97, 0xb0, 0xc4, 0x03, 0x59, 0x15, 0x96, 0x27,
	0xe4, 0x00, 0x65, 0xc3, 0x71, 0x8c, 0xfa, 0x73, 0x4d, 0x41, 0x2a, 0x94, 0xbe, 0x68, 0x1f, 0xd9,
	0x8e, 0x56, 0x60, 0x9f, 0x9d, 0xf6, 0xb1, 0x69, 0x69, 0x45, 0x46, 0xee, 0x58, 0xcd, 0xbd, 0x3d,
	0xd3, 0xd2, 0x4a, 0x8c, 0xbc, 0x61, 0x1a, 0xce, 0xbe, 0xad, 0x95, 0x51, 0x05, 0x96, 0x3a, 0x07,
	0xc6, 0x4b, 0x6d, 0x99, 0x91, 0xec, 0x1a, 0x4e, 0x73, 0xef, 0xc8, 0xd4, 0x2a, 0x8c, 0xc4, 0x6a,
	0x3a, 0x47, 0xc6, 0x81, 0xa6, 0xea, 0x7f, 0x50, 0xa0, 0x2a, 0x75, 0x38, 0xa4, 0x09, 0x61, 0x25,
	0x8e, 0xd0, 0x01, 0xa0, 0xec, 0x18, 0xd6, 0x9e, 0xe9, 0x08, 0x15, 0x1a, 0xc6, 0xa1, 0xb1, 0x67,
	0x6a, 0x0a, 0x93, 0xb4, 0x6f, 0x1a, 0x07, 0xcd, 0xd6, 0x9e, 0x50, 0x42, 0xe8, 0x53, 0x44, 0x6b,
	0xb0, 0x62, 0xef, 0xb7, 0x8f, 0xf1, 0x4e, 0x73, 0x0f, 0xd7, 0x0d, 0xab, 0xa1, 0x95, 0xd8, 0x94,
	0xb9, 0xbb, 0x6b, 0xd6, 0x79, 0x34, 0x60, 0x0c, 0x65, 0x84, 0x60, 0x75, 0xbf, 0x69, 0x3b, 0x6d,
	0xeb, 0x25, 0x96, 0xd2, 0x97, 0x79, 0xd8, 0x78, 0x61, 0x5a, 0x56, 0xb3, 0x61, 0x62, 0xb9, 0xa8,
	0x55, 0xf4, 0xff, 0x28, 0xa0, 0x35, 0x83, 0x73, 0x3f, 0xa1, 0x4e, 0x68, 0x0f, 0xa9, 0xcb, 0x10,
	0x87, 0x2c, 0x58, 0x17, 0x55, 0x04, 0x3e, 0x09, 0x68, 0x82, 0x89, 0x2b, 0x42, 0xba, 0x4c, 0x13,
	0xd5, 0xed, 0x47, 0xd7, 0x38, 0x6b, 0x27, 0xa0, 0x49, 0xd3, 0xb3, 0xee, 0x0a, 0x66, 0x36, 0x32,
	0x04, 0x6b, 0xd3, 0x9b, 0x92, 0xc9, 0xf1, 0x38, 0x25, 0xb3, 0x90, 0x43, 0x26, 0xbb, 0x15, 0x99,
	0xcc, 0x7c, 0x37, 0xe3, 0x81, 0xfe, 0x6b, 0x05, 0xd4, 0xc3, 0x70, 0x14, 0xd3, 0x66, 0x70, 0x1a,
	0xa2, 0xa7, 0x50, 0x23, 0x51, 0x14, 0x5e, 0xe0, 0x30, 0xf2, 0xbb, 0x7e, 0x20, 0xaf, 0x46, 0x95,
	0xcf, 0xb5, 0xf9, 0x14, 0xcb, 0x3d, 0x3d, 0xda, 0xf7, 0xb0, 0x4b, 0xe4, 0xe5, 0x28, 0x59, 0x15,
	0x36, 0x51, 0x67, 0xc1, 0xf4, 0x21, 0xa8, 0xe1, 0x39, 0x8d, 0xc4, 0xa2, 0x08, 0x7d, 0x15, 0x36,
	0xc1, 0x17, 0x6b, 0xa0, 0x5c, 0xca, 0xeb, 0xa0, 0x5c, 0xb2, 0xd1, 0x58, 0x06, 0x2b, 0x65, 0xac,
	0x3f, 0x07, 0x68, 0x19, 0xee, 0xd9, 0xe2, 0x2a, 0x2f, 0xdf, 0x99, 0x40, 0xff, 0xba, 0x00, 0x65,
	0x29, 0xe9, 0x47, 0xb0, 0xc4, 0x33, 0xb6, 0xc8, 0x54, 0x4f, 0x6e, 0x28, 0x8a, 0xb7, 0x18, 0xf4,
	0x2c, 0x4e, 0x8d, 0x3e, 0x83, 0xea, 0x80, 0xf8, 0x41, 0x5a, 0x28, 0x0a, 0x67, 0xfc, 0xff, 0x42,
	0x66, 0x3b, 0xad, 0x1e, 0x2d, 0x60, 0x2c, 0x72, 0xdb, 0x3a, 0x54, 0x27, 0x85, 0x26, 0x2b, 0xaa,
	0x8a, 0xb7, 0x0b, 0xe0, 0x05, 0x09, 0x64, 0xd5, 0x68, 0xac, 0x7f, 0x2e, 0xaf, 0xc3, 0x7d, 0x58,
	0x73, 0x5e, 0x76, 0xcc, 0xf9, 0xd3, 0xb2, 0x1b, 0x66, 0xd8, 0xb6, 0xa6, 0xa0, 0x1a, 0x54, 0xcc,
	0x56, 0x03, 0x3b, 0x47, 0x56, 0x6b, 0xe6, 0x76, 0xea, 0x3f, 0x86, 0xa5, 0x8e, 0x1f, 0x74, 0xf3,
	0xd9, 0x2f, 0xd6, 0xff, 0xaa, 0x40, 0x59, 0xa6, 0x8a, 0xf9, 0x42, 0xc8, 0x84, 0x3b, 0xdf, 0x0a,
	0xaa, 0x2b, 0xdd, 0x69, 0x90, 0xf2, 0x8a, 0x88, 0x44, 0x1e, 0x3e, 0x21, 0xee, 0x59, 0x8a, 0x13,
	0x36, 0xb1, 0x43, 0xdc, 0x33, 0xf4, 0x01, 0x94, 0x79, 0x05, 0x34, 0xe6, 0x60, 0xb9, 0xae, 0x95,
	0x11, 0x05, 0x9b, 0x25, 0x49, 0xf9, 0x51, 0xc3, 0xbc, 0x47, 0x4d, 0xf4, 0xaf, 0xa0, 0xd6, 0x09,
	0x2f, 0x68, 0x24, 0xe3, 0x10, 0xfa, 0x04, 0x96, 0xfa, 0x7e, 0x9c, 0x6c, 0x28, 0xdc, 0x63, 0xef,
	0x2c, 0xdc, 0x79, 0x9a, 0xa1, 0x41, 0x12, 0x22, 0x2a, 0x49, 0xc6, 0x96, 0x6f, 0xf7, 0xbb, 0xfa,
	0xef, 0x14, 0x58, 0x9f, 0x96, 0x56, 0x8f, 0x28, 0x49, 0x28, 0xbb, 0xcf, 0xe8, 0x63, 0x99, 0xa3,
	0xa4, 0x25, 0x94, 0xdb, 0x2d, 0xc1, 0x13, 0x98, 0xac, 0x89, 0x3f, 0x84, 0x65, 0x51, 0x0e, 0xdc,
	0xdc, 0x0e, 0x0a, 0x27, 0x8b, 0x76, 0x50, 0xd2, 0xeb, 0xdf, 0x94, 0x40, 0x9b, 0x3f, 0x21, 0xda,
	0x87, 0xea, 0xe9, 0xa8, 0xdf, 0x9f, 0xd5, 0xe6, 0x3b, 0xb7, 0x5a, 0x27, 0xd5, 0x8c, 0xf1, 0x4a,
	0xcd, 0xf6, 0xa1, 0x1a, 0xf7, 0xc2, 0x8b, 0x54, 0x52, 0x21, 0xa7, 0x24, 0xc6, 0x2b, 0x25, 0xed,
	0xca, 0x3a, 0x57, 0x4a, 0x12, 0x8d, 0xcb, 0xed, 0x1e, 0xdb, 0xf7, 0x3d, 0x2a, 0xca, 0x61, 0x29,
	0xa7, 0x09, 0x90, 0x90, 0x2e, 0x76, 0x7b, 0x24, 0xe8, 0x52, 0x09, 0xb9, 0xef, 0xde, 0x2a, 0xc6,
	0x21, 0xdd, 0x3a, 0xe7, 0xb0, 0xd4, 0x24, 0xfd, 0x44, 0x07, 0x50, 0x75, 0xb9, 0x0b, 0x79, 0x3c,
	0xe7, 0xd1, 0xad, 0xba, 0xfd, 0xbd, 0x5b, 0x65, 0x4d, 0xdc, 0x6e, 0x81, 0x3b, 0x81, 0xc0, 0x1e,
	0x54, 0x87, 0x8c, 0x0a, 0xc7, 0x09, 0x89, 0x12, 0x5e, 0x95, 0x55, 0xb7, 0xdf, 0xbd, 0x55, 0x9a,
	0xcd, 0xa8, 0x2d, 0xe0, 0xac, 0xfc, 0x1b, 0x19, 0xa0, 0x0a, 0x41, 0x34, 0xf0, 0x64, 0x69, 0xf1,
	0xf6, 0x6b, 0x58, 0xdc, 0x63, 0xed, 0xef, 0x05, 0x8d, 0xcc, 0xc0, 0x43, 0xbb, 0xa0, 0x0e, 0x68,
	0x42, 0xb0, 0x47, 0x12, 0xc2, 0x3b, 0x8e, 0xea, 0xf6, 0x7b, 0xb7, 0x8a, 0x60, 0x59, 0x9d, 0xc1,
	0xc7, 0xaa, 0x0c, 0xe4, 0x17, 0x3a, 0x80, 0x15, 0x61, 0xe8, 0xd4, 0x6d, 0x6a, 0x3e, 0x00, 0xd4,
	0x04, 0xb7, 0x18, 0xe9, 0x6b, 0x70, 0x67, 0x4e, 0x65, 0x3d, 0x02, 0x74, 0x95, 0x8d, 0x35, 0x52,
	0x53, 0xd0, 0x2d, 0xa5, 0x51, 0x03, 0x21, 0x58, 0x0a, 0x98, 0xa7, 0x44, 0x91, 0xc7, 0xbf, 0xb3,
	0xfe, 0xb1, 0xf8, 0xda, 0xfd, 0xe3, 0xa7, 0xb3, 0x37, 0x86, 0x21, 0xec, 0xa6, 0x1d, 0x59, 0x8f,
	0x21, 0x33, 0x27, 0xff, 0xd6, 0xc7, 0x70, 0x6f, 0x91, 0xd9, 0x18, 0xad, 0x1f, 0x9c, 0x86, 0xf2,
	0x11, 0x85, 0x7f, 0xa3, 0x0f, 0x65, 0x42, 0x2b, 0xf2, 0x84, 0xb6, 0x18, 0xee, 0x53, 0x72, 0xa6,
	0xb3, 0x1a, 0x82, 0x25, 0xee, 0x3e, 0x91, 0x82, 0xf9, 0xb7, 0xfe, 0x0f, 0x05, 0xd6, 0xae, 0x80,
	0x07, 0x7d, 0x34, 0x93, 0x35, 0xdf, 0xbd, 0x69, 0x13, 0x5e, 0x3d, 0x4e, 0xef, 0x72, 0xed, 0x8b,
	0x8c, 0xec, 0x64, 0x8b, 0x33, 0x9d, 0xec, 0xe4, 0xa5, 0x66, 0x69, 0xe6, 0xa5, 0xe6, 0x6d, 0x58,
	0xa5, 0xa7, 0xa7, 0xac, 0xbb, 0xe0, 0x79, 0xc2, 0xf7, 0x64, 0xb5, 0x5c, 0x13, 0xb3, 0xac, 0x9e,
	0x68, 0x7a, 0xfa, 0x31, 0xdc, 0x5f, 0x78, 0x27, 0xaf, 0xb5, 0xbe, 0x06, 0xc5, 0x84, 0x74, 0xa5,
	0x6a, 0xec, 0x93, 0xa9, 0x7b, 0x4e, 0xfa, 0xa3, 0x54, 0x2f, 0x31, 0x60, 0xfd, 0x82, 0x66, 0xd1,
	0x41, 0x78, 0x4e, 0x65, 0xfd, 0x17, 0x46, 0x31, 0x3a, 0x9e, 0xa9, 0xd6, 0x26, 0x19, 0x30, 0x96,
	0xd9, 0xe2, 0xe6, 0x14, 0xc8, 0xf1, 0x72, 0x6f, 0x52, 0xb1, 0x91, 0x34, 0x19, 0xc6, 0x68, 0x0b,
	0xee, 0x9e, 0xf9, 0xee, 0x19, 0x26, 0xfd, 0x3e, 0x8e, 0xb3, 0xfd, 0xb8, 0x96, 0x15, 0x6b, 0x8d,
	0x2d, 0x19, 0xfd, 0xfe, 0x94, 0x22, 0x3b, 0xf0, 0x28, 0xa2, 0x5d, 0x1a, 0xd0, 0x88, 0x85, 0x9a,
	0x8c, 0x03, 0x67, 0x3d, 0x4b, 0x91, 0x73, 0x3e, 0x9c, 0x10, 0x65, 0xcc, 0x1d, 0x49, 0x92, 0x2f,
	0x53, 0x6d, 0xea, 0xbf, 0x2f, 0x40, 0xcd, 0xa6, 0xd1, 0x39, 0x8d, 0x2c, 0x1a, 0x8f, 0xfa, 0x09,
	0xeb, 0xa1, 0x22, 0xfe, 0x85, 0xdd, 0xd0, 0xcb, 0x7a, 0x28, 0x31, 0x55, 0x0f, 0x3d, 0xca, 0x0e,
	0x15, 0xd1, 0x24, 0x1a, 0x63, 0x8f, 0xf6, 0xc9, 0xa4, 0xb7, 0x64, 0x87, 0x2a, 0x58, 0x6b, 0x7c,
	0xa9, 0xc1, 0x56, 0xd2, 0x86, 0xf0, 0x53, 0x58, 0xe2, 0x7c, 0x2b, 0xa0, 0x5a, 0xa6, 0x7d, 0x74,
	0xe0, 0xe0, 0xf6, 0x73, 0xed, 0x0d, 0xa4, 0x41, 0x4d, 0x0e, 0x2d, 0xd3, 0xb1, 0x5e, 0x6a, 0x0a,
	0x2b, 0x87, 0xe4, 0x4c, 0xab, 0xed, 0x60, 0xf3, 0x17, 0x4d, 0xdb, 0xb1, 0xb5, 0x82, 0xbe, 0x03,
	0x6a, 0x3d, 0x0c, 0xe2, 0x84, 0x04, 0x49, 0x8c, 0x36, 0x61, 0xbd, 0xde, 0x6e, 0xd9, 0x8e, 0xd1,
	0x72, 0xec, 0xf9, 0x23, 0x3d, 0x80, 0xfb, 0x0d, 0x73, 0xd7, 0xc8, 0x44, 0x62, 0xdb, 0xac, 0xb7,
	0x5b, 0x0d, 0x26, 0x23, 0x97, 0x51, 0xde, 0xd4, 0x2f, 0xe0, 0x4e, 0x66, 0x58, 0x09, 0xbc, 0x05,
	0xf5, 0x91, 0xf2, 0x2d, 0xea, 0xa3, 0x47, 0x00, 0x7e, 0x8c, 0x23, 0x8e, 0x40, 0x4f, 0x02, 0x41,
	0xf5, 0x63, 0x01, 0x49, 0x4f, 0xff, 0x53, 0x01, 0x50, 0xb6, 0xf3, 0xff, 0xa8, 0xaf, 0x9d, 0x6a,
	0x4c, 0x8b, 0xd7, 0x37, 0xa6, 0x4b, 0x39, 0x1b, 0xd3, 0x45, 0x06, 0x29, 0xe5, 0x37, 0x48, 0x3e,
	0xcf, 0xac, 0xeb, 0xbf, 0x29, 0x4e, 0xb9, 0xa6, 0x15, 0x26, 0xfe, 0xe9, 0x78, 0xf6, 0xd1, 0x4c,
	0x99, 0x7b, 0x34, 0xdb, 0x65, 0x79, 0x89, 0xbf, 0x84, 0xce, 0xd4, 0xfc, 0x4f, 0x6f, 0x78, 0x07,
	0x95, 0x65, 0x7f, 0xcd, 0x9d, 0x7e, 0x9f, 0xb6, 0x41, 0x9b, 0xdc, 0xc7, 0xac, 0xa4, 0x28, 0x5e,
	0x9b, 0x71, 0xe7, 0xf0, 0xc3, 0x83, 0xc4, 0x9d, 0x78, 0x0e, 0x54, 0x1f, 0xc1, 0x83, 0xab, 0x97,
	0x1c, 0x8f, 0x86, 0x1e, 0x49, 0xa8, 0x8c, 0x8b, 0x6f, 0xc6, 0xf3, 0x37, 0xfc, 0x88, 0x2f, 0x23,
	0x0b, 0xd6, 0x26, 0xbc, 0x29, 0xa0, 0xca, 0x37, 0xd4, 0x4a, 0x99, 0x46, 0x12, 0x6c, 0xd6, 0xe4,
	0x40, 0x29, 0xfc, 0x72, 0x39, 0x63, 0x43, 0xff, 0xb7, 0x02, 0xda, 0xbc, 0x54, 0x11, 0x3f, 0x48,
	0x1c, 0x06, 0x73, 0xf1, 0x83, 0x4d, 0xf1, 0x38, 0xf0, 0x31, 0x80, 0x54, 0x17, 0x9f, 0x8c, 0x5f,
	0xaf, 0xc9, 0x50, 0x25, 0xc3, 0xce, 0x58, 0xf7, 0x60, 0xfd, 0xca, 0x41, 0xc4, 0x13, 0xe2, 0x5b,
	0xf0, 0xd8, 0xee, 0x98, 0x75, 0xc7, 0x70, 0xda, 0x16, 0xb6, 0xcc, 0xc3, 0xf6, 0x0b, 0xb3, 0x81,
	0xe5, 0xa3, 0xe2, 0xf3, 0x66, 0xfd, 0xb9, 0xc9, 0x54, 0x7f, 0x07, 0x9e, 0x5e, 0x4b, 0xb4, 0x67,
	0x1c, 0x9a, 0xed, 0x17, 0xa6, 0xa5, 0x29, 0xfa, 0x9f, 0x15, 0x50, 0xb3, 0xfe, 0xed, 0x4a, 0xaf,
	0xf4, 0x19, 0x2c, 0x8b, 0x70, 0x9f, 0xd6, 0x12, 0x4f, 0xaf, 0xa9, 0x25, 0x18, 0xcd, 0xf4, 0x3f,
	0x33, 0x92, 0x8b, 0x45, 0x01, 0x06, 0x50, 0x4c, 0xa3, 0x28, 0x4c, 0x5f, 0x05, 0x39, 0x86, 0x4d,
	0x36, 0x81, 0x9e, 0x81, 0x36, 0x59, 0xc6, 0x43, 0x12, 0x91, 0x81, 0x6c, 0xa8, 0x57, 0x33, 0xa2,
	0x0e, 0x9b, 0xd5, 0xdf, 0x87, 0xa2, 0x43, 0xba, 0x59, 0xb5, 0x23, 0x54, 0x14, 0xd5, 0x4e, 0x96,
	0xff, 0x0a, 0xd3, 0xf9, 0xaf, 0x0b, 0xb5, 0x69, 0xb5, 0xae, 0x1c, 0x6d, 0x56, 0xb3, 0xc2, 0xeb,
	0x68, 0x56, 0x5c, 0xa8, 0xd9, 0x57, 0xa0, 0x3a, 0xa3, 0x28, 0x70, 0xfc, 0x01, 0x8d, 0x58, 0x08,
	0x4a, 0xd3, 0x84, 0xd8, 0x2a, 0x1d, 0x32, 0xcd, 0x93, 0x51, 0x14, 0xa4, 0x55, 0x13, 0xfb, 0x66,
	0x73, 0xac, 0x1b, 0x90, 0xc9, 0x8e, 0x7f, 0xe7, 0x43, 0xa6, 0xaa, 0x7f, 0xa3, 0x40, 0xf9, 0x28,
	0xa6, 0xd1, 0x51, 0x13, 0x7d, 0x02, 0x30, 0x08, 0x47, 0x31, 0xc5, 0xbc, 0xe2, 0x52, 0x6e, 0xe8,
	0xf8, 0xb3, 0xd7, 0x12, 0x4b, 0x1d, 0x64, 0x0f, 0x27, 0xf7, 0xa0, 0x44, 0x07, 0x61, 0x92, 0x99,
	0x91, 0x0f, 0x66, 0x43, 0x4e, 0x71, 0x36, 0xe4, 0xe4, 0xd3, 0xf5, 0xce, 0x49, 0x99, 0xff, 0x0f,
	0xf8, 0xc1, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x84, 0x69, 0x3a, 0xed, 0x70, 0x1c, 0x00, 0x00,
}
